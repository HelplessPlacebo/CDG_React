{"version":3,"sources":["Components/Calendar/Calendar.module.css","assets/imgs/settings.svg","assets/imgs/second_icon.svg","assets/imgs/door.svg","assets/imgs/avatar.svg","Components/LineStroke/LineStroke.module.css","assets/imgs/arrow-up.svg","assets/imgs/download.svg","assets/imgs/separator-line.svg","Components/ModalWindow/ModalWindow.module.css","assets/imgs/stroke_vert.svg","assets/imgs/stroke_horiz.svg","assets/imgs/new_worklog_button_shadowed.svg","assets/imgs/TT-stop-button.svg","assets/imgs/TT-pause-button.svg","assets/imgs/calendar_active.svg","assets/imgs/calendar_gray.svg","assets/imgs/Cyan.svg","assets/imgs/Orange.svg","assets/imgs/Purple.svg","assets/imgs/calendar.svg","Components/TimeTracking/TimeTracking.module.css","Components/NavBar/NavBar.module.css","Components/Favorites/Favorites.module.css","Components/ModalWindow/TimeSlider/TimeSlider.module.css","Components/WorkLogs/WorklogInfo/WorklogInfo.module.css","Components/WorkLogs/DropDown/WorklogDropDown.module.css","Components/DeleteConfirmModal/DeleteConfirm.module.css","Components/Timer/Timer.module.css","Components/GoogleCalendar/GoogleCalendar.module.css","Components/NavBar/NavBar.tsx","Data/WorkLogsReducer.ts","assets/secondary/DifferenceInTime.js","Components/ProgressBar/ProgressBar.tsx","Components/LineStroke/LineStroke.tsx","Components/WorkLogs/DropDown/WorklogDropDown.tsx","Components/WorkLogs/NestingWorkLog.tsx","Components/DeleteConfirmModal/DeleteConfirmModal.tsx","Components/WorkLogs/WorkLog.tsx","Components/WorkLogs/WorklogInfo/WorklogInfo.tsx","Components/WorkLogs/SliderTimePicker/WorkLogTimeLine.tsx","Components/WorkLogs/WorkLogsBlock.tsx","Components/WorkLogs/WorkLogsContainer.tsx","Components/DropDownMenu/DropDownMenu.jsx","assets/secondary/CalculateNewEndTime.js","Components/Timer/Timer.jsx","Components/TimeTracking/TimeTracking.tsx","Components/CalendarSyncsElement/CSCElement.tsx","Components/GoogleCalendar/GoogleCalendar.tsx","Components/Favorites/FavoritesPage.tsx","Data/CalendarReducer.ts","Components/Calendar/CalendarDay.tsx","Components/Calendar/DropDownCalendarFooterElement.tsx","Components/Calendar/DropDownCalendar.tsx","Components/Calendar/DropDownCalendarContainer.tsx","Components/Calendar/Calendar.tsx","Components/All/All.tsx","Components/Favorites/FavoritesButton.tsx","Components/CalendarAndControllButtons/CalendarAndControlButtons.tsx","Components/ModalWindow/TimeSlider/SliderValueLeftLabel.tsx","Components/ModalWindow/TimeSlider/SliderValueRightLabel.tsx","assets/secondary/FindElementPose.js","Components/ModalWindow/TimeSlider/TimeSlider.tsx","Components/ModalWindow/ChangeWorklogModal.tsx","Components/ModalWindow/ChangeWorklogModalContainer.tsx","App.tsx","serviceWorker.ts","Data/redux-store.ts","index.tsx","Components/WorkLogs/WorkLog.module.css","App.module.css","Components/All/All.module.css","assets/imgs/play-button.svg","assets/imgs/active-issue-more-button.svg","assets/imgs/danger_cp.svg","assets/imgs/warning_cp.svg","assets/imgs/ok_cp.svg","assets/imgs/stop_button.svg","assets/imgs/confirmButton.svg","assets/imgs/declineButton.svg","assets/imgs/new_worklog_button.svg","assets/imgs/CalendarDayStatusDanger.svg","assets/imgs/CalendarDayStatusWarning.svg","assets/imgs/CalendarDayStatusOK.svg","Components/WorkLogs/SliderTimePicker/WorkLogSlider.module.css","Components/CalendarSyncsElement/CSCElement.module.css"],"names":["module","exports","NavBar","props","className","HS","navContainer","navLinksContainer","NavLinksPosition","NavLinks","item","to","NavIconsContainer","NavIcons","SmallIcons","src","settings","alt","FAQ","LogOutIcon","AvatarIcons","AvatarIcon","DEL_WORKLOG","CHANGE_WORKLOG","randomInteger","min","max","rand","Math","random","floor","DefaultState","WorkLogsBlocks","BlockInfo","BlockCreatedDate","SummaryStatus","SummaryTime","id","Worklogs","StartTime","EndTime","JiraCode","TaskField","status","IsNesting","TimerValue","NestingItems","PlayingWorklog","FavoritesWorklogs","AddWorklog","NewWorklog","type","SetIsPlayingWorklogById","IsPlaying","ElementId","ParentId","ChangeWorklog","WorkLogId","NewWlIsNesting","NewWlParentId","WorklogsReducer","state","action","GetWorklogsBlockCopy","JSON","parse","stringify","WorklogToCreate","WorklogsBlocksCopy","EmptyWorklog","undefined","Issue","ParrentId","map","el","unshift","SoughtWorklog","Worklog","NestingItem","SoughtNestingItem","WB","NewWorklogs","NewNestingWorklogs","index","DelParentId","WLIndex","push","filter","DelWorklogId","WL","DifferenceInTime","differentRes","hours","minuts","TimesArr","firstDate","secondDate","getDate","string","Date","split","different","round","abs","ProgressBar","Fragment","style","width","height","borderRadius","Bar","now","bg","LineStroke","LS","lineStroke","WorkLogDropDown","onMouseLeave","onHideMenu","WLDD","Container","onClick","ContentContainer","ContainerFirstEl","ContainerEl","e","SetDeleteModalParams","WorkLogToDeleteId","OnDeleteModalOpen","NestingWorkLog","useState","ShowMenu","SetShowMenu","WLS","WorkLogs","WorklogBlockContainerActive","WorklogBlockContainer","WorklogBlock","WorkTime","Minus","ColorPointPoseActive","ColorPointPose","CP_ok","CP_warning","CP_danger","WorklogContentContainer","ProgressBarContainer","TimerValueContainer","ControlButtonsContainer","StopButton","PlayButton","WLInfoButtonActive","WLInfoButton","WLMoreButton","WLlinestrokeActive","WLlinestroke","DeleteWorklogConfirmModal","isOpen","DS","modal","ModalTextContainer","NewWorklogControlButtonsContainer","NewWorklogControlButtons","DeleteWorklog","DeleteModalParams","onClose","NewWorklogSubmitButtonSize","ConfirmButton","NewWorklogControlButton","DeclineButton","MS","WorkLog","NestingButtonPose","NestingIsShowing","OnHideNestingWorklogs","NestingBG","TwwContentImg","ArrowUp","OnShowNestingWorklogs","TwwContentText","length","DeleteModalIsOpen","OnDeleteModalClose","key","WorklogInfo","FS","SummaryWorklogInfo","DateBlockContainer","DateBlockSize","DateOfCreation","DateTime","Progress","DownloadIcon","WLlineStrokeContainer","WorkLogTimeLine","SS","TimePickerLine","SliderTimesContainer","SliderTimes","WorkLogsBlock","SetNestingIsShowing","SetDeleteModalIsOpen","WorklogInfoContainer","WorkLogSliderPose","WorkLogsContainer","this","WorklogsBlocks","addWorklog","React","Component","compose","connect","WorklogsData","options","LongMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","marginRight","marginTop","maxHeight","backgroundColor","outlined","option","MenuItem","paddingLeft","paddingTop","marginBottom","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","ToFullTime","value","Numbered","Number","parseInt","CalculateNewEndTime","minutes","HoursAndMinutes","Timer","substr","seconds","setSeconds","setMinutes","setHours","isActive","setIsActive","WorklogInputValue","SetWorklogInputValue","IssueInputValue","SetIssueInputValue","useEffect","interval","clearInterval","setInterval","TS","TimeRContainer","TimerWorklogName","placeholder","defaultValue","onChange","TimerIssueName","TimerControlButtonsContainer","TimerControlButtons","openWorklogChangeModal","TimerData","TimerIssue","TimerTaskField","SetTimerData","TTStopButton","TTPauseButton","TimeTracking","TTS","TTLayout","StrokeVert","TTContent","TimetrackingHeaderContainer","TimetrackingHeader","TimeTrackingLogo","TTMainContentRoot","NewWorklogContainer","FavoritesIsClicked","NewWorklogButtonPose","NewWorklogButtonSize","NewWorklogButtonShadowed","NewWorklogButton","NewWorklogButtonDescriptionContainer","NewWorklogButtonDescription","TTHorizStrokePose","StrokeHoriz","CSCElement","CSCS","CalendarSync","SyncColorPointContainer","LineColor","Cyan","Orange","Purple","SyncInfoContainer","Description","SyncTime","GoogleCalendar","CalendarSyncs","CalendarIsClicked","SetCalendarIsClicked","IsChecked","SetIsChecked","GCS","GCSContainer","GCSDescription","GCSSwitchPose","checked","GCSCalendarPose","ActiveSmallCalendar","SmallCalendar","CalendarSyncsContainer","FavoritesPage","NoFavoritesIssuesContainer","FavoritesText","months","RandomStatus","arr","RangeError","RandomDaysCreate","statuses","IntroDaysCount","OutroDaysCount","DaysCount","MaxDaysLength","OutArr","IntroDaysArr","OutroDaysArr","DaysArr","j","Signature","DayNumber","DayStatus","n","p","Calendars","January","February","March","April","May","June","July","August","September","October","November","December","ClickedMonthDays","CurrentDate","date","CurrentYear","getFullYear","CurrentMonth","getMonth","CurrentDay","GetCurrentDate","CalendarReducer","Method","DayId","CalendarDay","DayIsClicked","SetDayIsClicked","some","CDS","DayBgClicked","DayBgCurrentDay","DayBgDefault","SetClickedMonthDays","DropDownCalendarDayFaded","DropDownCalendarDay","DropDownCalendarDayNumberClicked","DropDownCalendarDayNumber","OK","Warn","Danger","DropDownCalendarFooterElement","CS","DropDownProgressStatus","text","DropDownCalendar","DropDownCalendarHeader","DropDOwnCalendarContentContainer","DropDownCalendarContent","DropDownCalendarDayNames","day","MonthName","DropDownCalendarFooterContainer","DropDownCalendarFooter","DropDownCalendarContainer","CalendarData","Calendar","ShowDropDownCalendar","SetShowDropDownCalendar","CalendarContainer","CalendarContent","CalendarDate","CalendarIcon","All","AllS","AllButtonBg","AllButtonBgActive","ActiveItem","OnAllClicked","FavoritesButton","FavoritesButtonBgActive","FavoritesButtonBg","OnFavoritesClick","CalendarAndControlButtons","AS","CalendarAndButtons","RightLabel","LeftLabel","display","Position","left","offsetLeft","LeftLabelImage","LabelValue","start","right","offsetRight","end","findPosX","obj","curleft","offsetParent","x","TimeSlider","SetValue","LeftPose","SetLeftPose","RightPose","SetRightPose","LeftOffset","SetLeftOffset","RightOffset","SetRightOffset","TimerButtonsInit","slider","document","querySelectorAll","SliderWidth","getComputedStyle","SliderPoseStart","SliderPoseEnd","LeftMargin","RightMargin","disabled","format","maxValue","minValue","name","onChangeStart","time","onChangeComplete","SetTimerValue","step","ChangeWorklogModal","ModalNewWorklogName","SetModalNewWorklogName","ModalNewIssueName","SetModalNewIssueName","ModalTimeLineValues","SetModalTimeLineValues","NewWorklogNameIsFilled","SetNewWorklogNameIsFilled","NewIssueNameIsFilled","SetNewIssueNameIsFilled","EmptyWorklogTimerMinutes","EmptyWorklogTimerEndHours","EmptyWorklogTimeValues","getHours","getMinutes","close","preventDefault","closeWorklogChangeModal","WorklogChangeModalIsOpen","ModalTitle","ModalSlider","ModalTextFields","NewWorklogContentContainer","NewWorklogContentTitle","marginCheck","NewWorklogContentInput","ModalInputError","NewWL","ChangeWorklogModalContainer","SetWorklogChangeModalIsOpen","SetFavoritesIsClicked","exact","path","render","CalendarAndButtonsContainer","MainWrapper","TImeTracking_and_Calendar","window","location","hostname","match","reducers","combineReducers","WorkLogsReducer","form","formReducer","store","createStore","ReactDOM","basename","process","overflow","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.74fe2525.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarContainer\":\"Calendar_CalendarContainer__I7VPR\",\"CalendarContent\":\"Calendar_CalendarContent__7J52V\",\"CalendarIcon\":\"Calendar_CalendarIcon__35v8Z\",\"CalendarDate\":\"Calendar_CalendarDate__1Fc1O\",\"DropDownCalendar\":\"Calendar_DropDownCalendar__rOVL_\",\"DropDownCalendarHeader\":\"Calendar_DropDownCalendarHeader__mMkPr\",\"DropDOwnCalendarContentContainer\":\"Calendar_DropDOwnCalendarContentContainer__1ekcD\",\"DropDownCalendarContent\":\"Calendar_DropDownCalendarContent__3lJK4\",\"DropDownCalendarFooterContainer\":\"Calendar_DropDownCalendarFooterContainer__dEO85\",\"DropDownCalendarFooter\":\"Calendar_DropDownCalendarFooter__3v4wV\",\"DropDownCalendarFooterElement\":\"Calendar_DropDownCalendarFooterElement__2gCAC\",\"DropDownCalendarProgressLineDanger\":\"Calendar_DropDownCalendarProgressLineDanger__k_JjF\",\"DropDownCalendarProgressLineOk\":\"Calendar_DropDownCalendarProgressLineOk__1Tedt\",\"DropDownCalendarProgressLineWarning\":\"Calendar_DropDownCalendarProgressLineWarning__3NPVW\",\"DropDownProgressStatus\":\"Calendar_DropDownProgressStatus__1Hffx\",\"DayBgClicked\":\"Calendar_DayBgClicked__10_xV\",\"DayBgCurrentDay\":\"Calendar_DayBgCurrentDay__35shH\",\"DayBgDefault\":\"Calendar_DayBgDefault__138Ia\",\"DropDownCalendarDay\":\"Calendar_DropDownCalendarDay__1TvNk\",\"DropDownCalendarDayFaded\":\"Calendar_DropDownCalendarDayFaded__3wmG5\",\"DropDownCalendarDayNumber\":\"Calendar_DropDownCalendarDayNumber__3_jQu\",\"DropDownCalendarDayNumberClicked\":\"Calendar_DropDownCalendarDayNumberClicked__YFrra\",\"DropDownCalendarDayNames\":\"Calendar_DropDownCalendarDayNames__qcAdr\",\"bg\":\"Calendar_bg__2aViC\"};","module.exports = __webpack_public_path__ + \"static/media/settings.6677f6c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/second_icon.07aaae67.svg\";","module.exports = __webpack_public_path__ + \"static/media/door.ffe979f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.462c6cf4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineStroke\":\"LineStroke_lineStroke__2pI3T\"};","module.exports = __webpack_public_path__ + \"static/media/arrow-up.0dc941bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.07db24c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/separator-line.ec52537e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalWindow_modal__fVvss\",\"bg\":\"ModalWindow_bg__1aHSY\",\"ModalTitle\":\"ModalWindow_ModalTitle__1JK9n\",\"ModalSlider\":\"ModalWindow_ModalSlider__21VHJ\",\"ModalTextFields\":\"ModalWindow_ModalTextFields__1xPvH\",\"NewWorklogContentContainer\":\"ModalWindow_NewWorklogContentContainer__3XnfK\",\"NewWorklogContentTitle\":\"ModalWindow_NewWorklogContentTitle__3V0FN\",\"ModalInputError\":\"ModalWindow_ModalInputError__2UZpA\",\"NewWorklogContentInput\":\"ModalWindow_NewWorklogContentInput__3GqOw\",\"marginCheck\":\"ModalWindow_marginCheck__2Ndhx\",\"NewWorklogControlButtonsContainer\":\"ModalWindow_NewWorklogControlButtonsContainer__308FZ\",\"NewWorklogControlButtons\":\"ModalWindow_NewWorklogControlButtons__2T_1s\",\"NewWorklogSubmitButtonSize\":\"ModalWindow_NewWorklogSubmitButtonSize__281oc\",\"NewWorklogControlButton\":\"ModalWindow_NewWorklogControlButton__3fYoB\",\"NewWorklogSubmitButton\":\"ModalWindow_NewWorklogSubmitButton__r5R_e\",\"Err\":\"ModalWindow_Err__1uJOI\"};","module.exports = __webpack_public_path__ + \"static/media/stroke_vert.437b2938.svg\";","module.exports = __webpack_public_path__ + \"static/media/stroke_horiz.2e15c5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button_shadowed.6b0a0400.svg\";","module.exports = __webpack_public_path__ + \"static/media/TT-stop-button.3d2bae0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/TT-pause-button.8e7efc77.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar_active.daeb1a9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar_gray.aea2c3bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cyan.a07d9131.svg\";","module.exports = __webpack_public_path__ + \"static/media/Orange.47285204.svg\";","module.exports = __webpack_public_path__ + \"static/media/Purple.f1ff4eee.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.daeb1a9d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimetrackingHeaderContainer\":\"TimeTracking_TimetrackingHeaderContainer__ON8us\",\"TTLayout\":\"TimeTracking_TTLayout__3veO9\",\"TTContent\":\"TimeTracking_TTContent__EuSq7\",\"TTMainContentRoot\":\"TimeTracking_TTMainContentRoot__1SdVC\",\"TimetrackingHeader\":\"TimeTracking_TimetrackingHeader__2_M3q\",\"TimeTrackingLogo\":\"TimeTracking_TimeTrackingLogo__3Gymw\",\"MoreIconSizeContainer\":\"TimeTracking_MoreIconSizeContainer__CtFXl\",\"MoreIconSize\":\"TimeTracking_MoreIconSize__3hJsc\",\"NewWorklogContainer\":\"TimeTracking_NewWorklogContainer__1Htpq\",\"NewWorklog\":\"TimeTracking_NewWorklog__3l1DI\",\"NewWorklogButtonSize\":\"TimeTracking_NewWorklogButtonSize__1ylBg\",\"NewWorklogButtonPose\":\"TimeTracking_NewWorklogButtonPose__MG6O9\",\"NewWorklogButtonDescriptionContainer\":\"TimeTracking_NewWorklogButtonDescriptionContainer__1V2I5\",\"NewWorklogButtonDescription\":\"TimeTracking_NewWorklogButtonDescription__29EUZ\",\"TTHorizStrokePose\":\"TimeTracking_TTHorizStrokePose__1WjLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"NavBar_navContainer__3sKle\",\"navLinksContainer\":\"NavBar_navLinksContainer__3UvKn\",\"NavLinksPosition\":\"NavBar_NavLinksPosition__2Jq8r\",\"NavLinks\":\"NavBar_NavLinks__22adz\",\"NavLinksItem\":\"NavBar_NavLinksItem__jDCJP\",\"ActiveLink\":\"NavBar_ActiveLink__2agTU\",\"NavIconsContainer\":\"NavBar_NavIconsContainer__2r9Fj\",\"NavIcons\":\"NavBar_NavIcons__1XxNH\",\"SmallIcons\":\"NavBar_SmallIcons__atSWj\",\"AvatarIcons\":\"NavBar_AvatarIcons__yrk4o\",\"item\":\"NavBar_item__fYm3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesButtonBg\":\"Favorites_FavoritesButtonBg__3VELL\",\"FavoritesButtonBgActive\":\"Favorites_FavoritesButtonBgActive__dnGPa\",\"item\":\"Favorites_item__1W2Lk\",\"ActiveItem\":\"Favorites_ActiveItem__3T7aT\",\"FavoritesText\":\"Favorites_FavoritesText__2x9PR\",\"NoFavoritesIssuesContainer\":\"Favorites_NoFavoritesIssuesContainer__3tIde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeftLabel\":\"TimeSlider_LeftLabel__1cFI_\",\"RightLabel\":\"TimeSlider_RightLabel__itdny\",\"LeftLabelImage\":\"TimeSlider_LeftLabelImage__1Hskt\",\"LabelValue\":\"TimeSlider_LabelValue__3snvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SummaryWorklogInfo\":\"WorklogInfo_SummaryWorklogInfo__4-4NV\",\"DateBlockContainer\":\"WorklogInfo_DateBlockContainer__1o7Kx\",\"DateBlockSize\":\"WorklogInfo_DateBlockSize__2QW4p\",\"DownloadIcon\":\"WorklogInfo_DownloadIcon__3DNZg\",\"DateTime\":\"WorklogInfo_DateTime__3Z9a0\",\"Progress\":\"WorklogInfo_Progress__25Rn6\",\"WLlineStrokeContainer\":\"WorklogInfo_WLlineStrokeContainer__1Sgro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"WorklogDropDown_Container__3cI-Y\",\"ContentContainer\":\"WorklogDropDown_ContentContainer__o5kDH\",\"ContainerEl\":\"WorklogDropDown_ContainerEl__2dtp_\",\"ContainerFirstEl\":\"WorklogDropDown_ContainerFirstEl__1skhJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeleteConfirm_modal__NP0te\",\"bg\":\"DeleteConfirm_bg__2icmH\",\"ModalTextContainer\":\"DeleteConfirm_ModalTextContainer__2-EVO\",\"NewWorklogControlButtonsContainer\":\"DeleteConfirm_NewWorklogControlButtonsContainer__2Rt5s\",\"NewWorklogControlButtons\":\"DeleteConfirm_NewWorklogControlButtons__2JHii\",\"NewWorklogSubmitButtonSize\":\"DeleteConfirm_NewWorklogSubmitButtonSize__1d3dd\",\"NewWorklogControlButton\":\"DeleteConfirm_NewWorklogControlButton__3JXRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRContainer\":\"Timer_TimeRContainer__16lLU\",\"TimerWorklogName\":\"Timer_TimerWorklogName__2BtW8\",\"TimerIssueName\":\"Timer_TimerIssueName__i_DiT\",\"TimerControlButtonsContainer\":\"Timer_TimerControlButtonsContainer__2RF33\",\"TimerControlButtons\":\"Timer_TimerControlButtons__3NEwd\",\"Timer\":\"Timer_Timer__ji3V0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GCSContainer\":\"GoogleCalendar_GCSContainer__2skR-\",\"GCS\":\"GoogleCalendar_GCS__1JofJ\",\"GCSDescription\":\"GoogleCalendar_GCSDescription__1KeuU\",\"GCSSwitchPose\":\"GoogleCalendar_GCSSwitchPose__2zX0p\",\"GCSCalendarPose\":\"GoogleCalendar_GCSCalendarPose__hvnAI\",\"CalendarSyncsContainer\":\"GoogleCalendar_CalendarSyncsContainer__6QN1e\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HS from \"./NavBar.module.css\"\r\nimport settings from \"../../assets/imgs/settings.svg\"\r\nimport FAQ from \"../../assets/imgs/second_icon.svg\"\r\nimport LogOutIcon from \"../../assets/imgs/door.svg\"\r\nimport AvatarIcon from \"../../assets/imgs/avatar.svg\"\r\n\r\n\r\nexport type TNavBarProps = {}\r\n\r\nconst NavBar: React.FC<TNavBarProps> = (props) => {\r\n    return (<div className={HS.navContainer}>\r\n        <div className={HS.navLinksContainer}>\r\n            <div className={HS.NavLinksPosition}>\r\n                <div className={HS.NavLinks}>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Home/All\">\r\n                            Home\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Issues/\">\r\n                            Issues\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Filter/\">\r\n                            Filter\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Projects/\">\r\n                            Projects\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={HS.NavIconsContainer}>\r\n            <div className={HS.NavIcons}>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={settings} alt=\"settings\"/>\r\n                </div>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={FAQ} alt=\"info\"/>\r\n                </div>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={LogOutIcon} alt=\"door1\"/>\r\n                </div>\r\n                <div className={HS.AvatarIcons}>\r\n                    <img className=\"\" src={AvatarIcon} alt=\"avatar_icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\nexport default NavBar","const ADD_WORKLOG = \"WORKLOGS/ADD_WORKLOG\"\r\nconst DEL_WORKLOG = \"WORKLOGS/DEL_WORKLOG\"\r\nconst SET_IS_PLAYING_WORKLOG_BY_ID = \"WORKLOGS/SET_IS_PLAYING_WORKLOG_BY_ID\"\r\nconst CHANGE_WORKLOG = \"WORKLOGS/CHANGE_WORKLOG\"\r\n\r\n\r\nexport const randomInteger = (min: number, max: number): number => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\n\r\n\r\nexport type TNestingItem = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    Issue?: string\r\n    id: number\r\n    TimerValue: string | null\r\n}\r\nexport type TBlockInfo = {\r\n    BlockCreatedDate: string | null\r\n    SummaryStatus: \"ok\" | \"warning\" | \"danger\" | string\r\n    SummaryTime: string | null\r\n    id?: number\r\n    Issue?: string\r\n}\r\nexport type TWorkLog = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    TimerValue : string | null\r\n    IsNesting?: boolean\r\n    NestingItems?: Array<TNestingItem>\r\n    id: number\r\n    Issue?: string\r\n    ParrentId?: number\r\n}\r\nexport type  TWorklogBlock = {\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n}\r\n\r\ntype TWorkLogP = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode?: string | null\r\n    TaskField: string | null\r\n    status?: \"ok\" | \"warning\" | \"danger\" | string\r\n    TimerValue : string | null\r\n    IsNesting?: boolean\r\n    NestingItems?: Array<TNestingItem>\r\n    id?: number\r\n    Issue?: string\r\n}\r\n\r\nexport type TTimerData = {\r\n    TimerValue : string\r\n    TimerIssue : string\r\n    TimerTaskField : string\r\n}\r\n\r\nlet DefaultState = {\r\n    WorkLogsBlocks: [{\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Wed, June 10\",\r\n            SummaryStatus: \"warning\",\r\n            SummaryTime: \"06:05:00\",\r\n            id: 1\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"danger\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:00:00\",\r\n            id: 444553452341241\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:15:00\",\r\n            id: 213124124125122\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            IsNesting: true,\r\n            TimerValue: \"03:50:00\",\r\n            id: 2131241255143,\r\n            NestingItems: [{\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 123213213244,\r\n                TimerValue: \"01:30:00\"\r\n            }, {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 1232312351245,\r\n                TimerValue: \"03:20:00\"\r\n            }]\r\n        }]\r\n    }, {\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Tue, June 09\",\r\n            SummaryStatus: \"ok\",\r\n            SummaryTime: \"08:00:00\",\r\n            id: 2\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:00:00\",\r\n            id: 3123217589536\r\n        },\r\n            {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Meeting with QA\",\r\n                status: \"ok\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:15:00\",\r\n                id: 7696784562357\r\n            }, {\r\n                StartTime: \"11:00\",\r\n                EndTime: \"13:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                IsNesting: false,\r\n                TimerValue: \"03:50:00\",\r\n                id: 1231243425668\r\n            }\r\n        ]\r\n    }] as Array<TWorklogBlock>,\r\n    PlayingWorklog: {} as TWorkLog,\r\n    FavoritesWorklogs : [] as Array<TWorkLog>\r\n}\r\n\r\n\r\ntype  DefaultWorklogsState = typeof DefaultState\r\n\r\n\r\ntype TWorklogsReducerActions = ReturnType<typeof AddWorklog> | ReturnType<typeof DeleteWorklog>\r\n    | ReturnType<typeof SetIsPlayingWorklogById> | ReturnType<typeof ChangeWorklog>\r\n\r\n\r\nconst WorklogsReducer = (state = DefaultState, action: TWorklogsReducerActions): DefaultWorklogsState => {\r\n\r\n    const GetWorklogsBlockCopy = () => {\r\n        return JSON.parse(JSON.stringify(state.WorkLogsBlocks))\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_WORKLOG: {\r\n\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n\r\n            let WorklogToCreate : TWorkLog\r\n            let EmptyWorklog : TWorkLog = {\r\n                StartTime :  null,\r\n                EndTime : null,\r\n                id : randomInteger(0,10000),\r\n                NestingItems : undefined,\r\n                TaskField : null,\r\n                Issue : undefined,\r\n                TimerValue : \"00:00:00\",\r\n                JiraCode : \"JRM-310\",\r\n                status : \"\",\r\n                IsNesting : false,\r\n                ParrentId : undefined\r\n            }\r\n\r\n            action.NewWorklog\r\n                ? WorklogToCreate = action.NewWorklog\r\n                : WorklogToCreate = EmptyWorklog\r\n\r\n            if (action.to) {\r\n                WorklogsBlocksCopy.map(el => {\r\n                    if (el.BlockInfo.BlockCreatedDate === action.to) {\r\n                        el.Worklogs.unshift(WorklogToCreate)\r\n\r\n                    }\r\n                })\r\n            } else {\r\n                WorklogsBlocksCopy[0].Worklogs.unshift(WorklogToCreate)\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                PlayingWorklog: WorklogToCreate\r\n            }\r\n        }\r\n\r\n        case SET_IS_PLAYING_WORKLOG_BY_ID: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let SoughtWorklog = {}\r\n\r\n            WorklogsBlocksCopy.map(el => {\r\n                el.Worklogs.map(Worklog => {\r\n                    if (action.IsNesting) {\r\n                        Worklog.NestingItems?.map(NestingItem => {\r\n                            if (NestingItem.id === action.ElementId) {\r\n                                let SoughtNestingItem = {\r\n                                    ...NestingItem,\r\n                                    ParrentId: action.ParentId\r\n                                }\r\n                                SoughtWorklog = SoughtNestingItem\r\n                            }\r\n                        })\r\n                    } else {\r\n                        if (Worklog.id === action.ElementId) {\r\n                            SoughtWorklog = Worklog\r\n                        }\r\n                    }\r\n\r\n                })\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                PlayingWorklog: action.IsPlaying ?\r\n                    SoughtWorklog\r\n                    : {}\r\n            }\r\n        }\r\n        case CHANGE_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n                if (action.NewWlIsNesting) {\r\n                    if (Worklog.id === action.NewWlParentId) {\r\n                        Worklog.NestingItems?.map(NestingItem => {\r\n                            if (NestingItem.id === action.WorkLogId) {\r\n                                NestingItem.TimerValue = action.NewWorklog.TimerValue\r\n                                NestingItem.Issue = action.NewWorklog.Issue\r\n                                NestingItem.TaskField = action.NewWorklog.TaskField\r\n                                NestingItem.EndTime = action.NewWorklog.EndTime\r\n                                NestingItem.StartTime = action.NewWorklog.StartTime\r\n                                //  NestingItem.EndTime = action.NewWorklog.EndTime\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (Worklog.id === action.WorkLogId) {\r\n                        Worklog.TimerValue = action.NewWorklog.TimerValue\r\n                        Worklog.Issue = action.NewWorklog.Issue\r\n                        Worklog.TaskField = action.NewWorklog.TaskField\r\n                        Worklog.StartTime  = action.NewWorklog.StartTime\r\n                        Worklog.EndTime = action.NewWorklog.EndTime\r\n                        Worklog.status = action.NewWorklog.status\r\n\r\n                        // Worklog.EndTime = action.NewWorklog.EndTime\r\n                    }\r\n                }\r\n            }))\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DEL_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let NewWorklogs: Array<Array<TWorkLog>> = []\r\n            let NewNestingWorklogs: Array<Array<TNestingItem> | undefined> = []\r\n\r\n            WorklogsBlocksCopy.map((el, index) => {\r\n                if (action.DelParentId) {\r\n                    el.Worklogs.map((Worklog, WLIndex) => {\r\n                        if (Worklog.id === action.DelParentId) {\r\n                            NewNestingWorklogs.push(Worklog.NestingItems?.filter(NestingItem => NestingItem.id !== action.DelWorklogId))\r\n                            WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems = NewNestingWorklogs[index]\r\n\r\n                            /* Worklog.NestingItems?.map((NestingItem, NestingIndex) => {\r\n                                 if(  NestingItem.id === action.DelWorklogId){\r\n\r\n                                     //@ts-ignore fix this in the next time\r\n                                     WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems[NestingIndex]\r\n                                 }\r\n                             })*/\r\n                        }\r\n                    })\r\n                } else {\r\n                    NewWorklogs.push(el.Worklogs.filter(WL => WL.id !== action.DelWorklogId))\r\n                    WorklogsBlocksCopy[index].Worklogs = NewWorklogs[index]\r\n                }\r\n\r\n            })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddWorklog = (NewWorklog ? : TWorkLog, to?: string) => {\r\n    return {type: ADD_WORKLOG, NewWorklog, to} as const\r\n}\r\nexport type TAddWorklog = typeof AddWorklog\r\n\r\nexport const DeleteWorklog = (DelWorklogId: number, DelParentId: number | null = null) => {\r\n    return {type: DEL_WORKLOG, DelWorklogId, DelParentId} as const\r\n}\r\nexport type TDeleteWorklog = typeof DeleteWorklog\r\n\r\nexport const SetIsPlayingWorklogById = (IsPlaying: boolean, ElementId: number, IsNesting = false, ParentId: number | null = null) => {\r\n    return {type: SET_IS_PLAYING_WORKLOG_BY_ID, IsPlaying, ElementId, IsNesting, ParentId} as const\r\n}\r\nexport type TSetIsPlayingWorklogById = typeof SetIsPlayingWorklogById\r\n\r\nexport const ChangeWorklog = (WorkLogId: number, NewWorklog: TWorkLog, NewWlIsNesting = false, NewWlParentId: number | null = null) => {\r\n\r\n    return {type: CHANGE_WORKLOG, WorkLogId, NewWorklog, NewWlIsNesting, NewWlParentId} as const\r\n}\r\nexport type TChangeWorklog = typeof ChangeWorklog\r\n\r\nexport default WorklogsReducer","export const DifferenceInTime = (TimesArr = []) => {\r\n    let firstDate = TimesArr[0];\r\n    let secondDate = TimesArr[1];\r\n    let getDate = (string) => new Date(0, 0, 0, string.split(':')[0], string.split(':')[1]);\r\n    let different = (getDate(secondDate) - getDate(firstDate));\r\n    let differentRes, hours, minuts;\r\n    if (different > 0) {\r\n        differentRes = different;\r\n        hours = Math.floor((differentRes % 86400000) / 3600000);\r\n        minuts = Math.round(((differentRes % 86400000) % 3600000) / 60000);\r\n    } else {\r\n        differentRes = Math.abs((getDate(firstDate) - getDate(secondDate)));\r\n        hours = Math.floor(24 - (differentRes % 86400000) / 3600000);\r\n        minuts = Math.round(60 - ((differentRes % 86400000) % 3600000) / 60000);\r\n    }\r\n    if(minuts < 10 ){\r\n        minuts =  minuts + \"0\"\r\n    }\r\n    if (hours < 10) {\r\n        return \"0\" + hours + ':' + minuts + \":00\";\r\n    } else {\r\n        return hours + ':' + minuts + \":00\";\r\n    }\r\n}","import React from \"react\";\r\n//@ts-ignore\r\nimport {Progress} from 'bootstrap-4-react';\r\n\r\nexport type TProgressBarProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | string\r\n}\r\n\r\nconst ProgressBar: React.FC<TProgressBarProps> = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Progress  style={{ width: \"100px\", height: \"8px\", borderRadius : \"20px\"}} >\r\n                <Progress.Bar  min=\"0\" max=\"100\" now={props.status === \"ok\" ?\r\n                    \"90\" : props.status === \"warning\"\r\n                        ? \"50\" : props.status === \"danger\"\r\n                            ? \"25\" : null}\r\n\r\n                              bg={props.status === \"ok\" ?\r\n                                  \"success\" : props.status === \"warning\"\r\n                                      ? \"warning\" : props.status === \"danger\"\r\n                                          ? \"danger\" : null}/>\r\n            </Progress>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from \"react\";\r\nimport LS from \"./LineStroke.module.css\"\r\n\r\nexport type TAllProps = {\r\n\r\n}\r\n\r\nconst LineStroke : React.FC<TAllProps> = (props) => {\r\n    return ( <div className={LS.lineStroke}> </div>)\r\n}\r\n\r\nexport default LineStroke","import React from \"react\";\r\nimport WLDD from \"./WorklogDropDown.module.css\"\r\nimport DeleteWorklogConfirmModal from \"../../DeleteConfirmModal/DeleteConfirmModal\";\r\n\r\nexport type TWorklogDropDownProps = {\r\n    onHideMenu : ()=> void\r\n    OnDeleteModalOpen : (e : React.MouseEvent<HTMLElement>)=> void\r\n    SetDeleteModalParams : any\r\n    WorkLogToDeleteId : number\r\n    ParentId ? : number\r\n\r\n}\r\n\r\nconst WorkLogDropDown: React.FC<TWorklogDropDownProps> = (props) => {\r\n    const OnDeleteModalOpenContainer = (e : React.MouseEvent<HTMLElement>)=>{\r\n        props.SetDeleteModalParams({\r\n            WorkLogToDeleteId : props.WorkLogToDeleteId,\r\n            ParentId : props.ParentId\r\n        })\r\n        props.OnDeleteModalOpen(e)\r\n    }\r\n\r\n    return (<div onMouseLeave={props.onHideMenu} className={WLDD.Container}>\r\n        <div onClick={props.onHideMenu} className={WLDD.ContentContainer}>\r\n            <div className={WLDD.ContainerFirstEl}>\r\n                Jira Code\r\n            </div>\r\n            <div className={WLDD.ContainerEl}>\r\n                Duplicate\r\n            </div>\r\n            <div className={WLDD.ContainerEl}>\r\n                Add to Favorite\r\n            </div>\r\n            <div onClick={OnDeleteModalOpenContainer} className={WLDD.ContainerEl}>\r\n                Delete\r\n            </div>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\nexport default WorkLogDropDown","import React, {useState} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport PlayButton from \"../../assets/imgs/play-button.svg\"\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport LineStroke from \"../LineStroke/LineStroke\";\r\nimport WLMoreButton from \"../../assets/imgs/active-issue-more-button.svg\"\r\nimport CP_danger from \"../../assets/imgs/danger_cp.svg\"\r\nimport CP_warning from \"../../assets/imgs/warning_cp.svg\"\r\nimport CP_ok from \"../../assets/imgs/ok_cp.svg\"\r\nimport WorkLogDropDown from \"./DropDown/WorklogDropDown\";\r\nimport StopButton from \"../../assets/imgs/stop_button.svg\"\r\nimport { TSetIsPlayingWorklogById, TWorkLog} from \"../../Data/WorkLogsReducer\";\r\n\r\n\r\nexport type TNestingWorkLogProps = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue : string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    SetIsPlayingWorklogById : TSetIsPlayingWorklogById\r\n    PlayingWorklog : TWorkLog\r\n    id : number\r\n    ParentId : number\r\n    SetDeleteModalParams : any\r\n    OnDeleteModalOpen: (e: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst NestingWorkLog: React.FC<TNestingWorkLogProps> = (props) => {\r\n    let [ShowMenu, SetShowMenu] = useState()\r\n\r\n    const OnShowMenu = () => {\r\n        SetShowMenu(true)\r\n    }\r\n    const OnHideMenu = () => {\r\n        SetShowMenu(false)\r\n    }\r\n\r\n    const onPlayButtonClicked = () => {\r\n\r\n       !props.PlayingWorklog.id && props.SetIsPlayingWorklogById(true,props.id,true, props.ParentId)\r\n\r\n    }\r\n    const onStopButtonClicked = () => {\r\n        props.SetIsPlayingWorklogById(false,props.id)\r\n    }\r\n\r\n    return (<div className={WLS.WorkLogs}>\r\n        <div className={props.PlayingWorklog.id === props.id\r\n            ?WLS.WorklogBlockContainerActive\r\n            :WLS.WorklogBlockContainer}\r\n        >\r\n            <div className={WLS.WorklogBlock}>\r\n                <div className={WLS.WorkTime}>\r\n                    <div className={WLS.StartTime}>\r\n                        {props.StartTime}\r\n                    </div>\r\n                    <div className={WLS.Minus}>\r\n                        -\r\n                    </div>\r\n                    <div className={WLS.EndTime}>\r\n                        {props.EndTime}\r\n                    </div>\r\n                </div>\r\n                <div className={props.PlayingWorklog.id === props.id\r\n                    ?WLS.ColorPointPoseActive\r\n                    : WLS.ColorPointPose}>\r\n                    <img src={props.status === \"ok\"\r\n                        ? CP_ok : props.status === \"warning\"\r\n                            ? CP_warning : props.status === \"danger\"\r\n                                ? CP_danger : undefined} alt=\"\"/>\r\n                </div>\r\n                <div className={WLS.WorklogContentContainer}>\r\n                    <div className={WLS.JiraCode}>\r\n                        {props.JiraCode}\r\n                    </div>\r\n                    <div className={WLS.TaskField}>\r\n                        {props.TaskField}\r\n                    </div>\r\n                </div>\r\n                <div className={WLS.ProgressBarContainer}>\r\n                    <ProgressBar status={props.status}/>\r\n                </div>\r\n                <div className={WLS.TimerValueContainer}>\r\n                    <div className={WLS.TimerValue}> {props.TimerValue}</div>\r\n                </div>\r\n                {props.PlayingWorklog.id && props.PlayingWorklog.id  === props.id\r\n                    ? <div className={WLS.ControlButtonsContainer}>\r\n                        <div onClick={onStopButtonClicked} className={WLS.StopButton}>\r\n                            <img src={StopButton} alt=\"stop-button\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    : <div className={WLS.ControlButtonsContainer}>\r\n                        <div onClick={onPlayButtonClicked} className={WLS.PlayButton}>\r\n                            <img src={PlayButton} alt=\"play-button\"/>\r\n                        </div>\r\n                    </div>}\r\n\r\n                <div onClick={OnShowMenu} className={props.PlayingWorklog.id === props.id\r\n                    ? WLS.WLInfoButtonActive\r\n                    :WLS.WLInfoButton}>\r\n                    <img src={WLMoreButton} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div className={props.PlayingWorklog.id === props.id\r\n                ? WLS.WLlinestrokeActive\r\n                :WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n        </div>\r\n        {ShowMenu && <WorkLogDropDown ParentId={props.ParentId} WorkLogToDeleteId={props.id}\r\n                                      SetDeleteModalParams={props.SetDeleteModalParams}\r\n                                      OnDeleteModalOpen={props.OnDeleteModalOpen} onHideMenu={OnHideMenu}/>}\r\n    </div>)\r\n}\r\n\r\nexport default NestingWorkLog","import React, {SyntheticEvent, useState} from \"react\";\r\nimport DS from \"./DeleteConfirm.module.css\"\r\nimport ConfirmButton from \"../../assets/imgs/confirmButton.svg\"\r\nimport DeclineButton from \"../../assets/imgs/declineButton.svg\"\r\nimport MS from \"../ModalWindow/ModalWindow.module.css\";\r\nimport {TDeleteWorklog} from \"../../Data/WorkLogsReducer\";\r\nimport {TDeleteModalParams} from \"../WorkLogs/WorkLogsBlock\";\r\n\r\n\r\nexport type TDeleteWorklogConfirmModalProps = {\r\n  isOpen : boolean\r\n    onClose: ()=> void\r\n    WorkLogToDeleteId : number\r\n    DeleteWorklog : TDeleteWorklog\r\n    DeleteModalParams : TDeleteModalParams\r\n}\r\n\r\nconst DeleteWorklogConfirmModal : React.FC<TDeleteWorklogConfirmModalProps> = (props) => {\r\n    const OnModalSubmit = (e: React.MouseEvent<HTMLElement>) => {\r\n        props.DeleteWorklog(props.DeleteModalParams.WorkLogToDeleteId,props.DeleteModalParams.ParentId)\r\n        props.onClose()\r\n    }\r\n        if (!props.isOpen) return null\r\n\r\n        return (\r\n            <div className=\"DeleteConfirmModal\">\r\n                <div className={DS.modal}>\r\n                    <div className={DS.ModalTextContainer}>\r\n                        Are you sure you want to delete the worklog?\r\n                    </div>\r\n                    <div className={DS.NewWorklogControlButtonsContainer}>\r\n                        <div className={DS.NewWorklogControlButtons}>\r\n                            <div onClick={OnModalSubmit} className=\"modal-open\">\r\n                                <img className={DS.NewWorklogSubmitButtonSize}\r\n                                     src={ConfirmButton} alt={\"submit\"}/>\r\n                            </div>\r\n                            <div className=\"modal-close\">\r\n                                <img onClick={props.onClose} className={DS.NewWorklogControlButton}\r\n                                     src={DeclineButton} alt={\"decline\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={MS.bg} onClick={e => props.onClose}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default DeleteWorklogConfirmModal\r\n\r\n","import React, {useState} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport PlayButton from \"../../assets/imgs/play-button.svg\"\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport LineStroke from \"../LineStroke/LineStroke\";\r\nimport WLMoreButton from \"../../assets/imgs/active-issue-more-button.svg\"\r\nimport CP_danger from \"../../assets/imgs/danger_cp.svg\"\r\nimport CP_warning from \"../../assets/imgs/warning_cp.svg\"\r\nimport CP_ok from \"../../assets/imgs/ok_cp.svg\"\r\nimport {TSetIsPlayingWorklogById, TNestingItem, TWorkLog, TDeleteWorklog} from \"../../Data/WorkLogsReducer\";\r\nimport ArrowUp from \"../../assets/imgs/arrow-up.svg\"\r\nimport {DifferenceInTime} from \"../../assets/secondary/DifferenceInTime\";\r\nimport WorkLogDropDown from \"./DropDown/WorklogDropDown\";\r\nimport StopButton from \"../../assets/imgs/stop_button.svg\"\r\nimport NestingWorkLog from \"./NestingWorkLog\";\r\nimport DeleteWorklogConfirmModal from \"../DeleteConfirmModal/DeleteConfirmModal\";\r\n\r\n\r\nexport type TWorklogProps = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue : string | null\r\n    IsNesting?: boolean\r\n    NestingItems?: Array<TNestingItem>\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    NestingIsShowing: boolean\r\n    OnHideNestingWorklogs: () => void\r\n    OnShowNestingWorklogs: () => void\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    id: number\r\n    OnDeleteModalOpen: (e: React.MouseEvent<HTMLElement>) => void\r\n    OnDeleteModalClose: () => void\r\n    DeleteModalIsOpen: boolean\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetDeleteModalParams: any\r\n    DeleteModalParams: any\r\n}\r\n\r\nconst WorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    let [ShowMenu, SetShowMenu] = useState<boolean>()\r\n\r\n    const OnShowMenu = () => {\r\n        SetShowMenu(true)\r\n    }\r\n    const OnHideMenu = () => {\r\n        SetShowMenu(false)\r\n    }\r\n\r\n    const onPlayButtonClicked = () => {\r\n        !props.PlayingWorklog.id && props.SetIsPlayingWorklogById(true, props.id)\r\n\r\n    }\r\n    const onStopButtonClicked = () => {\r\n        props.SetIsPlayingWorklogById(false, props.id)\r\n        // add onOpenModal\r\n    }\r\n\r\n    return (<div className={WLS.WorkLogs}>\r\n        <div className={props.id === props.PlayingWorklog.id\r\n            ?WLS.WorklogBlockContainerActive\r\n            :WLS.WorklogBlockContainer}>\r\n            <div className={WLS.WorklogBlock}>\r\n\r\n                {props.IsNesting\r\n                    ? <div className={WLS.NestingButtonPose}>\r\n                        {props.NestingIsShowing\r\n                            ? <div onClick={props.OnHideNestingWorklogs} className={WLS.NestingBG}><img\r\n                                className={WLS.TwwContentImg} src={ArrowUp} alt=\"\"/>\r\n                            </div>\r\n\r\n                            : <div onClick={props.OnShowNestingWorklogs} className={WLS.NestingBG}> <span\r\n                                className={WLS.TwwContentText}>\r\n                                {props.NestingItems?.length}\r\n                            </span>\r\n                               </div>\r\n                        }\r\n                    </div>\r\n\r\n                    :props.StartTime && props.EndTime ? <div className={WLS.WorkTime}>\r\n                        <div className={WLS.StartTime}>\r\n                            {props.StartTime}\r\n                        </div>\r\n                        <div className={WLS.Minus}>\r\n                            -\r\n                        </div>\r\n                        <div className={WLS.EndTime}>\r\n                            {props.EndTime}\r\n                        </div>\r\n                    </div>\r\n                        : <div> </div>}\r\n\r\n                <div className={props.PlayingWorklog.id === props.id\r\n                    ?WLS.ColorPointPoseActive\r\n                    : WLS.ColorPointPose}>\r\n                    <img src={props.status === \"ok\"\r\n                        ? CP_ok : props.status === \"warning\"\r\n                            ? CP_warning : props.status === \"danger\"\r\n                                ? CP_danger : undefined} alt=\"\"\r\n                    />\r\n                </div>\r\n\r\n                <div className={WLS.WorklogContentContainer}>\r\n                    <div className={WLS.JiraCode}>\r\n                        {props.JiraCode}\r\n                    </div>\r\n                    <div className={WLS.TaskField}>\r\n                        {props.TaskField}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={WLS.ProgressBarContainer}>\r\n                    <ProgressBar status={props.status}/>\r\n                </div>\r\n\r\n                <div className={WLS.TimerValueContainer}>\r\n                    <div className={WLS.TimerValue}>{props.TimerValue}</div>\r\n                </div>\r\n\r\n                {props.PlayingWorklog.id && props.PlayingWorklog.id === props.id\r\n\r\n                    ? <div className={WLS.ControlButtonsContainer}>\r\n                        <div onClick={onStopButtonClicked} className={WLS.StopButton}>\r\n                            <img src={StopButton} alt=\"stop-button\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    : <div className={WLS.ControlButtonsContainer}>\r\n                        <div onClick={onPlayButtonClicked} className={WLS.PlayButton}>\r\n                            <img src={PlayButton} alt=\"play-button\"/>\r\n                        </div>\r\n                    </div>}\r\n\r\n                <div onClick={OnShowMenu} className={props.PlayingWorklog.id === props.id\r\n                    ? WLS.WLInfoButtonActive\r\n                    :WLS.WLInfoButton}>\r\n                    <img src={WLMoreButton} alt=\"\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <DeleteWorklogConfirmModal DeleteModalParams={props.DeleteModalParams} DeleteWorklog={props.DeleteWorklog}\r\n                                       WorkLogToDeleteId={props.id} isOpen={props.DeleteModalIsOpen}\r\n                                       onClose={props.OnDeleteModalClose}/>\r\n\r\n            <div className={props.PlayingWorklog.id === props.id\r\n                ? WLS.WLlinestrokeActive\r\n                :WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </div>\r\n        {ShowMenu && <WorkLogDropDown WorkLogToDeleteId={props.id} SetDeleteModalParams={props.SetDeleteModalParams}\r\n                                      OnDeleteModalOpen={props.OnDeleteModalOpen} onHideMenu={OnHideMenu}/>}\r\n        {/*fix duplicating */}\r\n        {props.NestingIsShowing ? props.NestingItems?.map(el => {\r\n            return <NestingWorkLog\r\n                {...el}\r\n                ParentId={props.id}\r\n                key={el.id}\r\n                TimerValue={el.TimerValue\r\n                    ? el.TimerValue\r\n                    : props.StartTime && props.EndTime ? DifferenceInTime([el.StartTime, el.EndTime])\r\n                        : null}\r\n                PlayingWorklog={props.PlayingWorklog}\r\n                SetDeleteModalParams={props.SetDeleteModalParams}\r\n                OnDeleteModalOpen={props.OnDeleteModalOpen}\r\n                SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}/>\r\n        }) : undefined}\r\n    </div>)\r\n}\r\n\r\nexport default WorkLog","import React from \"react\";\r\nimport FS from \"./WorklogInfo.module.css\"\r\nimport DownloadIcon from \"../../../assets/imgs/download.svg\"\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport LineStroke from \"../../LineStroke/LineStroke\";\r\n\r\nexport type TWorklogInfoProps ={\r\n    DateOfCreation : string | null\r\n    SummaryTime : string | null\r\n    SummaryStatus : \"ok\" | \"danger\" | \"warning\"  | string\r\n}\r\n\r\nconst WorklogInfo : React.FC<TWorklogInfoProps> = (props ) => {\r\n\r\n    return (\r\n        <>\r\n        <div className={FS.SummaryWorklogInfo}>\r\n            <div className={FS.DateBlockContainer}>\r\n                <div className={FS.DateBlockSize}>\r\n                    {props.DateOfCreation}\r\n                </div>\r\n            </div>\r\n            <div className={FS.DateTime}>\r\n                <div>\r\n                    {props.SummaryTime}\r\n                </div>\r\n\r\n                <div className={FS.Progress}>\r\n                    <ProgressBar status={props.SummaryStatus}/>\r\n                </div>\r\n            </div>\r\n            <div className={FS.DownloadIcon}>\r\n                    <img src={DownloadIcon} alt=\"download-icon\"/>\r\n            </div>\r\n        </div>\r\n            <div className={FS.WLlineStrokeContainer}>\r\n               <LineStroke/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorklogInfo","import React from \"react\";\r\nimport SS from \"./WorkLogSlider.module.css\"\r\nimport TimePickerLine from \"../../../assets/imgs/separator-line.svg\"\r\n\r\nexport type TWorklogInfoProps ={\r\n\r\n}\r\n\r\nconst WorkLogTimeLine : React.FC<TWorklogInfoProps> = (props ) => {\r\n\r\n    return ( <div className=\"WorkLogTimeLine\">\r\n            <div className={SS.TimePickerLine}>\r\n                <img src={TimePickerLine} alt=\"separator-line\"/>\r\n            </div>\r\n            <div className={SS.SliderTimesContainer}>\r\n                <div className={SS.SliderTimes}>\r\n                    <div>7:00</div>\r\n                    <div>8:00</div>\r\n                    <div>9:00</div>\r\n                    <div>10:00</div>\r\n                    <div>11:00</div>\r\n                    <div>12:00</div>\r\n                    <div>13:00</div>\r\n                    <div>14:00</div>\r\n                    <div>15:00</div>\r\n                    <div>16:00</div>\r\n                    <div>17:00</div>\r\n                    <div>18:00</div>\r\n                    <div>19:00</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WorkLogTimeLine","import React, {useState} from \"react\";\r\nimport {DifferenceInTime} from \"../../assets/secondary/DifferenceInTime\";\r\nimport WorkLog from \"./WorkLog\";\r\nimport WorklogInfo from \"./WorklogInfo/WorklogInfo\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {\r\n    TAddWorklog,\r\n    TBlockInfo, TDeleteWorklog, TSetIsPlayingWorklogById,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogTimeLine from \"./SliderTimePicker/WorkLogTimeLine\";\r\n\r\n\r\nexport type TWorklogsBlockProps = {\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n    addWorklog: TAddWorklog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    DeleteWorklog: TDeleteWorklog\r\n}\r\nexport type TDeleteModalParams = {\r\n    ParentId?: number\r\n    WorkLogToDeleteId: number\r\n}\r\n\r\nconst WorkLogsBlock: React.FC<TWorklogsBlockProps> = (props) => {\r\n    let [NestingIsShowing, SetNestingIsShowing] = useState(false)\r\n    let [DeleteModalIsOpen, SetDeleteModalIsOpen] = useState(false)\r\n    let [DeleteModalParams, SetDeleteModalParams] = useState<TDeleteModalParams>()\r\n\r\n    const OnShowNestingWorklogs = () => {\r\n        SetNestingIsShowing(true)\r\n    }\r\n\r\n    const OnHideNestingWorklogs = () => {\r\n        SetNestingIsShowing(false)\r\n    }\r\n\r\n    const OnDeleteModalOpen = (e: React.MouseEvent<HTMLElement>) => {\r\n        SetDeleteModalIsOpen(true)\r\n    }\r\n    const OnDeleteModalClose = () => {\r\n        SetDeleteModalIsOpen(false)\r\n    }\r\n\r\n    return (<>\r\n        <div className={WLS.WorklogInfoContainer}>\r\n            <WorklogInfo DateOfCreation={props.BlockInfo.BlockCreatedDate}\r\n                         SummaryTime={props.BlockInfo.SummaryTime}\r\n                         SummaryStatus={props.BlockInfo.SummaryStatus}/>\r\n        </div>\r\n\r\n        {props.Worklogs && props.Worklogs.map(el => {\r\n            return <div key={el.id} className=\"worklog\">\r\n                <WorkLog\r\n                         {...el}\r\n                         NestingIsShowing={NestingIsShowing}\r\n                         OnHideNestingWorklogs={OnHideNestingWorklogs}\r\n                         OnShowNestingWorklogs={OnShowNestingWorklogs}\r\n                         TimerValue={el.TimerValue\r\n                             ? el.TimerValue\r\n                             : el.StartTime && el.EndTime\r\n                                 ? DifferenceInTime([el.StartTime, el.EndTime])\r\n                                 : null}\r\n                         PlayingWorklog={props.PlayingWorklog}\r\n                         DeleteModalIsOpen={DeleteModalIsOpen}\r\n                         OnDeleteModalClose={OnDeleteModalClose}\r\n                         OnDeleteModalOpen={OnDeleteModalOpen}\r\n                         DeleteWorklog={props.DeleteWorklog}\r\n                         SetDeleteModalParams={SetDeleteModalParams}\r\n                         DeleteModalParams={DeleteModalParams}\r\n                         SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}/>\r\n            </div>\r\n        })}\r\n        <div className={WLS.WorkLogSliderPose}>\r\n            <WorkLogTimeLine/>\r\n        </div>\r\n\r\n    </>)\r\n}\r\n\r\nexport default WorkLogsBlock","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {GlobalState} from \"../../Data/redux-store\"\r\nimport {\r\n    TWorklogBlock,\r\n    AddWorklog,\r\n    SetIsPlayingWorklogById,\r\n    DeleteWorklog,\r\n    TDeleteWorklog, TAddWorklog, TSetIsPlayingWorklogById, TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogsBlock from \"./WorkLogsBlock\";\r\n// import {withRouter} from 'react-router-dom'\r\n\r\nexport type TWorkLogsContainerOwnProps = {}\r\n\r\nexport type T_MSTP_WorkLogsContainer = {\r\n    WorklogsBlocks: Array<TWorklogBlock>\r\n    PlayingWorklog : TWorkLog\r\n}\r\n\r\nexport type T_MDTP_WorkLogsContainer = {\r\n    AddWorklog: TAddWorklog\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetIsPlayingWorklogById : TSetIsPlayingWorklogById\r\n\r\n}\r\n\r\n\r\ntype TDialogsContainerProps = T_MDTP_WorkLogsContainer & T_MSTP_WorkLogsContainer & TWorkLogsContainerOwnProps\r\n\r\nclass WorkLogsContainer extends React.Component<TDialogsContainerProps> {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div> {this.props.WorklogsBlocks.map(el => {\r\n                return <div key={el.BlockInfo.id} className=\"Worklogs\">\r\n                    <WorkLogsBlock BlockInfo={el.BlockInfo}\r\n                                   Worklogs={el.Worklogs}\r\n                                   addWorklog={this.props.AddWorklog}\r\n                                   SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                                   DeleteWorklog={this.props.DeleteWorklog}\r\n                                   PlayingWorklog={this.props.PlayingWorklog}\r\n                    />\r\n\r\n                </div>\r\n\r\n            })} </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_WorkLogsContainer => ({\r\n    WorklogsBlocks: state.WorklogsData.WorkLogsBlocks,\r\n    PlayingWorklog: state.WorklogsData.PlayingWorklog\r\n})\r\n\r\nexport default compose(connect<T_MSTP_WorkLogsContainer, T_MDTP_WorkLogsContainer, TWorkLogsContainerOwnProps, GlobalState>\r\n(StateToProps, {AddWorklog, DeleteWorklog, SetIsPlayingWorklogById}))(WorkLogsContainer)","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nconst options = [\r\n    'Jira link',\r\n    'Duplicate',\r\n    'Add to favorite',\r\n    'Delete',\r\n];\r\n\r\nexport default function LongMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropDownMenu\">\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"false\"\r\n\r\n                onClick={handleClick}\r\n\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        marginRight : '200px',\r\n                        marginTop : '55px',\r\n                        maxHeight: '300px',\r\n                        backgroundColor : \"#FFFFFF\",\r\n                        borderRadius : '10px',\r\n                        width: '192px',\r\n                        outlined : \"none\"\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <MenuItem style={{paddingLeft : \"32px\" , paddingTop: \"8px\", marginBottom : \"10px\", fontFamily : \"Roboto\",\r\n                        fontStyle : \"normal\", fontWeight : \"normal\", fontSize : \"16px\", lineHeight : \"144%\",\r\n                             color : \"#4F4F4F\"}}\r\n                              key={option}\r\n                              onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}","export const ToFullTime = (value) =>{\r\n    if(typeof value === \"string\"){\r\n        let Numbered =  Number.parseInt(value)\r\n        if(Numbered < 10){\r\n            return \"0\" + Numbered\r\n        }\r\n        else return value\r\n    }\r\n    else if (typeof value === \"number\"){\r\n        if(value < 10){\r\n            return \"0\" + value\r\n        }\r\n        else return value\r\n    }\r\n}\r\n\r\nexport const CalculateNewEndTime = (StartTime,hours,minutes)=>{\r\n let HoursAndMinutes = StartTime.split(\":\")\r\n     let Res = ToFullTime(Number.parseInt(hours) + Number.parseInt(HoursAndMinutes[0]) )\r\n         +\r\n         \":\"\r\n         + ToFullTime(Number.parseInt(minutes) + Number.parseInt(HoursAndMinutes[1]))\r\n\r\n     return Res\r\n }","import React, {useState, useEffect} from 'react';\r\nimport TS from \"./Timer.module.css\"\r\nimport TTStopButton from \"../../assets/imgs/TT-stop-button.svg\"\r\nimport TTPauseButton from \"../../assets/imgs/TT-pause-button.svg\"\r\nimport PlayButton from \"@material-ui/icons/PlayCircleFilled\"\r\nimport {ToFullTime} from \"../../assets/secondary/CalculateNewEndTime\"\r\n\r\n\r\nconst Timer = (props) => {\r\n    const [seconds, setSeconds] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(6, props.PlayingWorklog.TimerValue.length)))\r\n    const [minutes, setMinutes] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(3, props.PlayingWorklog.TimerValue.length - 6)))\r\n    const [hours, setHours] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(0, props.PlayingWorklog.TimerValue.length - 6)))\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [WorklogInputValue,SetWorklogInputValue] = useState()\r\n    const [IssueInputValue,SetIssueInputValue] = useState()\r\n\r\n    const OnWorklogInputValueChange = (e) =>{\r\n        SetWorklogInputValue(e.currentTarget.value)\r\n    }\r\n    const OnIssueInputValueChange = (e) =>{\r\n        SetIssueInputValue(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const  toggle = () => {\r\n        setIsActive(!isActive);\r\n    }\r\n    const OnStopTimer =() =>{\r\n        props.openWorklogChangeModal()\r\n        setIsActive(!isActive)\r\n        let TimerData = {\r\n            TimerValue : ToFullTime(hours) + \":\"+ ToFullTime(minutes) + \":\" +ToFullTime(seconds),\r\n            TimerIssue  : IssueInputValue ? IssueInputValue : props.PlayingWorklog.Issue,\r\n            TimerTaskField: WorklogInputValue ? WorklogInputValue : props.PlayingWorklog.TaskField,\r\n        }\r\n        props.SetTimerData(TimerData)\r\n\r\n        // if(props.PlayingWorklog.ParrentId){\r\n        //     props.ChangeWorklog(props.PlayingWorklog.id,NewWorklog,true,props.PlayingWorklog.ParrentId)\r\n        //     props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n        // }\r\n        // else{\r\n        //     props.ChangeWorklog(props.PlayingWorklog.id,NewWorklog)\r\n        //     props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (!isActive) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                if (seconds > 59) {\r\n                    setMinutes(minutes => minutes + 1)\r\n                    setSeconds(0)\r\n                }\r\n                if (minutes > 59) {\r\n                    setHours(hours => hours + 1)\r\n                    setMinutes(0)\r\n                }\r\n                if (hours > 23) {\r\n                    setHours(0)\r\n                    clearInterval(interval);\r\n                }\r\n            }, 1000);\r\n        } else if (isActive && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive, seconds, minutes, hours]);\r\n\r\n    return (\r\n\r\n        <div className={TS.TimeRContainer}>\r\n            <input className={TS.TimerWorklogName}\r\n                   placeholder={\"add worklog\"}\r\n                   defaultValue={props.PlayingWorklog.TaskField}\r\n                   value={WorklogInputValue}\r\n                   onChange={OnWorklogInputValueChange}\r\n                   type=\"text\"/>\r\n\r\n            <input className={TS.TimerIssueName}\r\n                   placeholder={\"add issue\"}\r\n                   defaultValue={props.PlayingWorklog.Issue && props.PlayingWorklog.Issue}\r\n                   value={IssueInputValue}\r\n                   onChange={OnIssueInputValueChange}\r\n                   type=\"text\"/>\r\n\r\n            <div className={TS.Timer}>\r\n                {ToFullTime(hours)}:{ToFullTime(minutes)}:{ToFullTime(seconds)}\r\n            </div>\r\n\r\n            <div className={TS.TimerControlButtonsContainer}>\r\n                <div className={TS.TimerControlButtons}>\r\n                    <div onClick={OnStopTimer}>\r\n                        <img src={TTStopButton} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"controlButtons\" onClick={toggle}>\r\n                        {!isActive ?\r\n                            <img src={TTPauseButton} alt=\"\"/>\r\n                            : <PlayButton style={{width: \"50px\", height: \"50px\"}} color={\"primary\"}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Timer","import React from \"react\";\r\nimport TTS from \"./TimeTracking.module.css\"\r\nimport StrokeVert from \"../../assets/imgs/stroke_vert.svg\"\r\nimport StrokeHoriz from \"../../assets/imgs/stroke_horiz.svg\"\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\"\r\nimport NewWorklogButtonShadowed from \"../../assets/imgs/new_worklog_button_shadowed.svg\"\r\nimport LongMenu from \"../DropDownMenu/DropDownMenu\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport {TAddWorklog, TChangeWorklog, TSetIsPlayingWorklogById, TTimerData, TWorkLog} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TTimeTrackingProps = {\r\n    AddWorklog : TAddWorklog\r\n    PlayingWorklog: TWorkLog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    ChangeWorklog: TChangeWorklog\r\n    FavoritesIsClicked: boolean\r\n    openWorklogChangeModal : ()=> void\r\n    SetTimerData : (TimerData : TTimerData) => void\r\n}\r\n\r\nconst TimeTracking: React.FC<TTimeTrackingProps> = (props) => {\r\n\r\n    const OnAddEmptyWorklog = () =>{\r\n        props.AddWorklog()\r\n    }\r\n\r\n    return (<div className={TTS.TTLayout}>\r\n            <div className=\"stroke-vert\">\r\n                <img src={StrokeVert} alt=\"stroke-vert\"/>\r\n            </div>\r\n            <div className={TTS.TTContent}>\r\n\r\n\r\n                <div className={TTS.TimetrackingHeaderContainer}>\r\n                    <div className={TTS.TimetrackingHeader}>\r\n\r\n                        <div className={TTS.TimeTrackingLogo}>\r\n                            Time tracking\r\n                        </div>\r\n\r\n                        {!props.PlayingWorklog.id && <LongMenu/>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {props.PlayingWorklog.id\r\n                    ? <Timer SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\r\n                             PlayingWorklog={props.PlayingWorklog}\r\n                             openWorklogChangeModal={props.openWorklogChangeModal}\r\n                             SetTimerData={props.SetTimerData}\r\n                             ChangeWorklog={props.ChangeWorklog}\r\n                    />\r\n                    : <div className={TTS.TTMainContentRoot}>\r\n                            <div className={TTS.NewWorklogContainer}>\r\n                                <div className={TTS.NewWorklog}>\r\n\r\n                                    <div onClick={!props.FavoritesIsClicked\r\n                                        ? OnAddEmptyWorklog\r\n                                        : undefined}\r\n                                         className={TTS.NewWorklogButtonPose}>\r\n\r\n                                        <img className={TTS.NewWorklogButtonSize}\r\n\r\n                                             src={props.FavoritesIsClicked\r\n                                                 ? NewWorklogButtonShadowed\r\n                                                 : NewWorklogButton\r\n                                             }\r\n                                             alt=\"new_worklog_button\"/>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n                                        <div className={TTS.NewWorklogButtonDescription}>\r\n                                            new worklog\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        <div className={TTS.TTHorizStrokePose}>\r\n                            <img src={StrokeHoriz} alt=\"\"/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeTracking","import React from \"react\";\r\nimport CSCS from \"./CSCElement.module.css\"\r\nimport Cyan from \"../../assets/imgs/Cyan.svg\"\r\nimport Orange from \"../../assets/imgs/Orange.svg\"\r\nimport Purple from \"../../assets/imgs/Purple.svg\"\r\nexport type TCSCElementProps = {\r\n    Description: string\r\n    SyncTime : string\r\n    LineColor: string\r\n}\r\n//mb images will be like a link in items\r\n\r\nconst CSCElement: React.FC<TCSCElementProps> = (props) => {\r\n    return (<div className={CSCS.CalendarSync}>\r\n            <div className={CSCS.SyncColorPointContainer}>\r\n                <img src={props.LineColor === \"Cyan\"\r\n                    ? Cyan : props.LineColor === \"Orange\"\r\n                        ? Orange : props.LineColor === \"Purple\"\r\n                            ? Purple\r\n                            : undefined } alt=\"\"/>\r\n            </div>\r\n            <div className={CSCS.SyncInfoContainer}>\r\n                <div>\r\n                    {props.Description}\r\n                </div>\r\n                <div>\r\n                    {props.SyncTime}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default CSCElement","import React, {useState} from \"react\";\r\nimport GCS from \"./GoogleCalendar.module.css\"\r\nimport ActiveSmallCalendar from \"../../assets/imgs/calendar_active.svg\"\r\nimport SmallCalendar from \"../../assets/imgs/calendar_gray.svg\"\r\nimport CSCElement from \"../CalendarSyncsElement/CSCElement\";\r\n\r\n\r\nexport type TCalendarProps = {}\r\n\r\nconst GoogleCalendar: React.FC<TCalendarProps> = (props) => {\r\n    let [CalendarSyncs, SetCalendarSyncs] = useState([{\r\n        Description: \"Logo Redesign\",\r\n        SyncTime: \"09:00 - 10:00\",\r\n        LineColor: \"Cyan\"\r\n    }, {\r\n        Description: \"Meeting with CEO\",\r\n        SyncTime: \"14:00 - 14:15\",\r\n        LineColor: \"Orange\"\r\n    }, {\r\n        Description: \"Brainstorm\",\r\n        SyncTime: \"15:00 - 16:15\",\r\n        LineColor: \"Purple\"\r\n    }])\r\n\r\n    let [CalendarIsClicked, SetCalendarIsClicked] = useState(false)\r\n\r\n    const OnCalendarClicked = () => {\r\n        SetCalendarIsClicked(true)\r\n    }\r\n    const OnActiveCalendarClicked = () => {\r\n        SetCalendarIsClicked(false)\r\n    }\r\n\r\n    let [IsChecked, SetIsChecked] = useState(false)\r\n\r\n    const HandleChecked = (event: React.FormEvent<HTMLInputElement>) => {\r\n        SetIsChecked(event.currentTarget.checked)\r\n    }\r\n\r\n    return (<div className={GCS.GCSContainer}>\r\n        <div className={GCS.GCS}>\r\n            <div className={GCS.GCSDescription}>\r\n                Google calendar sync\r\n            </div>\r\n            <div className={GCS.GCSSwitchPose}>\r\n                <input onClick={HandleChecked} id=\"GCS-toggle\"\r\n                       type=\"checkbox\"/>\r\n            </div>\r\n            <div id=\"small-calendar\" className={GCS.GCSCalendarPose}>\r\n                {!CalendarIsClicked\r\n                    ? <img onClick={OnCalendarClicked} src={SmallCalendar} alt=\"small-calendar\"/>\r\n                    : <img onClick={OnActiveCalendarClicked} src={ActiveSmallCalendar} alt={\"active small calendar\"}/>}\r\n            </div>\r\n        </div>\r\n        {IsChecked ? <div className={GCS.CalendarSyncsContainer}>\r\n            {CalendarSyncs.map(el => {\r\n                return <CSCElement key={el.SyncTime} Description={el.Description}\r\n                                   SyncTime={el.SyncTime}\r\n                                   LineColor={el.LineColor}/>\r\n            })}\r\n        </div> : undefined}\r\n    </div>)\r\n}\r\n\r\nexport default GoogleCalendar","import React from \"react\";\r\nimport TTS from \"../TimeTracking/TimeTracking.module.css\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\";\r\n\r\nexport type TFavoritesPageProps = {\r\n    FavoritesWorklogs: []\r\n    FavoritesIsClicked : boolean\r\n}\r\n\r\nconst FavoritesPage: React.FC<TFavoritesPageProps> = (props) => {\r\n    return (<div>\r\n        {props.FavoritesWorklogs.length > 0\r\n            ? <div>\r\n                worklgos\r\n            </div>\r\n\r\n            : <div className={FS.NoFavoritesIssuesContainer}>\r\n\r\n                <div className={FS.FavoritesText}>\r\n                    There is no favorites issues yet\r\n                </div>\r\n\r\n                <div style={{paddingTop : \"60px\"}} className={TTS.NewWorklog}>\r\n                    <div className={TTS.NewWorklogButtonPose}>\r\n                        <img className={TTS.NewWorklogButtonSize}\r\n                             src={NewWorklogButton}\r\n                             alt=\"new_worklog_button\"/>\r\n                    </div>\r\n\r\n                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n\r\n                        <div className={TTS.NewWorklogButtonDescription}>\r\n                            new favorite\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n    </div>)\r\n}\r\n\r\nexport default FavoritesPage","import {randomInteger} from \"./WorkLogsReducer\";\r\n\r\n\r\nconst SET_CLICKED_MONTH_DAYS = 'CALENDAR/SET_CLICKED_MONTH_DAYS'\r\nconst months  = ['January', 'February', 'March', 'April', 'May',\r\n    'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst GetCurrentDate = () : TCurrentDate => {\r\n    let date = new Date()\r\n    let currentyear =  date.getFullYear()\r\n    let currentmonth    = months[date.getMonth()]\r\n    let currentday = date.getDate()\r\n\r\n    let CurrentDate : TCurrentDate = {\r\n        CurrentYear : currentyear,\r\n        //@ts-ignore\r\n        CurrentMonth : currentmonth,\r\n        CurrentDay : currentday\r\n    }\r\n    return CurrentDate\r\n\r\n}\r\n\r\n\r\nconst RandomStatus = (arr: Array<any>) => {\r\n    if (arr.length <= 0) {\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    }\r\n    let rand = Math.floor(Math.random() * arr.length)\r\n    return arr[rand]\r\n}\r\n\r\n\r\nconst RandomDaysCreate = (statuses: Array<string> = [], IntroDaysCount: number, OutroDaysCount: number, DaysCount: number) => {\r\n    let MaxDaysLength = 35\r\n    let OutArr: Array<TDay> = []\r\n    let IntroDaysArr: Array<TDay> = []\r\n    let OutroDaysArr: Array<TDay> = []\r\n    let DaysArr: Array<TDay> = []\r\n\r\n    if (IntroDaysCount + OutroDaysCount + DaysCount > MaxDaysLength) {\r\n        throw new RangeError(`getRandom: maximum of days it  a ${MaxDaysLength}, please, enter the correct all days counts `);\r\n    } else {\r\n\r\n        for (let j = 1; j <= IntroDaysCount; j++) {\r\n            IntroDaysArr.push({\r\n                Signature: \"intro\",\r\n                DayNumber: j,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let n = 1; n <= DaysCount; n++) {\r\n            DaysArr.push({\r\n                Signature: \"main\",\r\n                DayNumber: n,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let p = 1; p <= OutroDaysCount; p++) {\r\n            OutroDaysArr.push({\r\n                Signature: \"outro\",\r\n                DayNumber: p,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        OutArr.push(...IntroDaysArr)\r\n        OutArr.push(...DaysArr)\r\n        OutArr.push(...OutroDaysArr)\r\n        return OutArr\r\n    }\r\n}\r\n\r\n\r\nexport type TDay = {\r\n    Signature: string\r\n    DayNumber: number\r\n    DayStatus: string\r\n    id: number\r\n}\r\n\r\nexport  type TCalendar = Array<TDay>\r\n\r\nexport type TCalendars = {\r\n    January: TCalendar\r\n    February: TCalendar\r\n    March: TCalendar\r\n    April: TCalendar\r\n    May: TCalendar\r\n    June: TCalendar\r\n    July: TCalendar\r\n    August: TCalendar\r\n    September: TCalendar\r\n    October: TCalendar\r\n    November: TCalendar\r\n    December: TCalendar\r\n}\r\n\r\nexport type TClickedMonthDays = Array<number> | []\r\n\r\nexport type TCurrentDate ={\r\n    CurrentYear : number | string\r\n    CurrentMonth : keyof typeof DefaultState.Calendars\r\n    CurrentDay : number | string\r\n}\r\n\r\n\r\nlet DefaultState = {\r\n    Calendars: {\r\n        January: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        February: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        March: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 4, 30),\r\n        April: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        May: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        June: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        July: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        August: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        September: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        October: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 3, 31),\r\n        November: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        December: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 2, 31)\r\n    } as TCalendars,\r\n    ClickedMonthDays: [] as TClickedMonthDays,\r\n    CurrentDate : GetCurrentDate() as TCurrentDate\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<typeof SetClickedMonthDays>\r\n\r\nconst CalendarReducer = (state = DefaultState, action: TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_CLICKED_MONTH_DAYS : {\r\n            return {\r\n                ...state,\r\n                ClickedMonthDays: action.Method\r\n                    ? [...state.ClickedMonthDays,action.DayId]\r\n                    : state.ClickedMonthDays.filter(id=> id !== action.DayId)\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetClickedMonthDays = (Method: boolean, DayId: number,MonthName?: string ) => {\r\n    return {type: SET_CLICKED_MONTH_DAYS, Method, MonthName, DayId} as const\r\n}\r\nexport type TSetClickedMonthDays = typeof SetClickedMonthDays\r\n\r\nexport default CalendarReducer","import React, {useState} from \"react\";\r\nimport CDS from \"./Calendar.module.css\"\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\nimport {TClickedMonthDays, TSetClickedMonthDays} from \"../../Data/CalendarReducer\";\r\n\r\n\r\nexport type TCalendarDayProps = {\r\n    DayNumber: number\r\n    DayStatus: string\r\n    Signature: string\r\n    id: number\r\n    SetClickedMonthDays: TSetClickedMonthDays\r\n    MonthName: string | null\r\n    ClickedMonthDays: TClickedMonthDays\r\n    CurrentDay: number | string\r\n}\r\n\r\nconst CalendarDay: React.FC<TCalendarDayProps> = (props) => {\r\n    let [DayIsClicked, SetDayIsClicked] = useState(false)\r\n\r\n    const onDayClick = () => {\r\n        SetDayIsClicked(!DayIsClicked)\r\n        props.SetClickedMonthDays(!DayIsClicked, props.id)\r\n    }\r\n\r\n    return (<div className={props.ClickedMonthDays.some(el => el === props.id)\r\n        ? CDS.DayBgClicked\r\n        : props.DayNumber === props.CurrentDay\r\n            ? CDS.DayBgCurrentDay\r\n            : CDS.DayBgDefault}>\r\n        <div onClick={onDayClick}\r\n             className={props.Signature !== \"main\"\r\n                 ? CDS.DropDownCalendarDayFaded : CDS.DropDownCalendarDay}>\r\n            <div className={props.ClickedMonthDays.some(el => el === props.id)\r\n            || props.DayNumber === props.CurrentDay\r\n                ? CDS.DropDownCalendarDayNumberClicked\r\n                : CDS.DropDownCalendarDayNumber}>\r\n                {props.DayNumber}\r\n            </div>\r\n            <img style={{paddingLeft: \"3px\"}} src={props.DayStatus === \"ok\"\r\n                ? OK\r\n                : props.DayStatus === \"warning\"\r\n                    ? Warn\r\n                    : props.DayStatus === \"danger\"\r\n                        ? Danger\r\n                        : undefined\r\n            } alt=\"day status\"/>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default CalendarDay","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\";\r\n\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\n\r\nexport type TDropDownCalendarFooterElementProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\"\r\n    text: string\r\n}\r\nconst DropDownCalendarFooterElement: React.FC<TDropDownCalendarFooterElementProps> = (props) => {\r\n    return (<div className={CS.DropDownCalendarFooterElement}>\r\n\r\n            <img style={{marginTop: \"4px\"}} src={props.status === \"ok\"\r\n                ? OK\r\n                : props.status === \"warning\"\r\n                    ? Warn\r\n                    : props.status === \"danger\"\r\n                        ? Danger\r\n                        : undefined} alt={\"dropDOwnCAlendarFooterStatus\"}/>\r\n\r\n            <div className={CS.DropDownProgressStatus}>\r\n                {props.text}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropDownCalendarFooterElement","import React from \"react\";\r\nimport {\r\n    TCalendars,\r\n    TClickedMonthDays, TCurrentDate,\r\n    TSetClickedMonthDays,\r\n} from \"../../Data/CalendarReducer\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarDay from \"./CalendarDay\";\r\nimport {randomInteger} from \"../../Data/WorkLogsReducer\";\r\nimport DropDownCalendarFooterElement from \"./DropDownCalendarFooterElement\";\r\n\r\nexport type TDropDownCalendarProps = {\r\n    Calendars: TCalendars\r\n    ClickedMonthDays: TClickedMonthDays\r\n    SetClickedMonthDays: TSetClickedMonthDays\r\n    CurrentDate : TCurrentDate\r\n}\r\n\r\nconst DropDownCalendar: React.FC<TDropDownCalendarProps> = (props) => {\r\n    let DaysNamesArr = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\r\n\r\n\r\n    return (<div className={CS.DropDownCalendar}>\r\n        <div className={CS.DropDownCalendarHeader}>\r\n            {props.CurrentDate.CurrentMonth}\r\n        </div>\r\n        <div className={CS.DropDOwnCalendarContentContainer}>\r\n            <div className={CS.DropDownCalendarContent}>\r\n                {DaysNamesArr.map(el => {\r\n                    return <div key={randomInteger(0, 10000)} className={CS.DropDownCalendarDayNames}>\r\n                        {el}\r\n                    </div>\r\n                })}\r\n                {props.Calendars[props.CurrentDate.CurrentMonth].map(day => {\r\n                    return <CalendarDay ClickedMonthDays={props.ClickedMonthDays}\r\n                                        CurrentDay={props.CurrentDate.CurrentDay}\r\n                                        MonthName={props.CurrentDate.CurrentMonth}\r\n                                        key={day.id}\r\n                                        SetClickedMonthDays={props.SetClickedMonthDays}  {...day}/>\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n        <div className={CS.DropDownCalendarFooterContainer}>\r\n\r\n            {/***** fix duplication in the next time    **********/}\r\n            <div className={CS.DropDownCalendarFooter}>\r\n             <DropDownCalendarFooterElement status={\"ok\"} text={\"Done\"}/>\r\n             <DropDownCalendarFooterElement status={\"warning\"} text={\"In progress\"}/>\r\n             <DropDownCalendarFooterElement status={\"danger\"} text={\"Missed\"}/>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DropDownCalendar","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n// import {withRouter} from 'react-router-dom'\r\nimport {GlobalState} from \"../../Data/redux-store\"\r\nimport {\r\n    TCalendars,\r\n    TClickedMonthDays,\r\n    TSetClickedMonthDays,\r\n    SetClickedMonthDays, TCurrentDate,\r\n} from \"../../Data/CalendarReducer\";\r\nimport DropDownCalendar from \"./DropDownCalendar\";\r\n\r\nexport type TDropDownCalendarContainerOwnProps = {}\r\n\r\nexport type T_MSTP_DropDownCalendarContainer = {\r\n    Calendars: TCalendars\r\n    ClickedMonthDays: TClickedMonthDays\r\n    CurrentDate : TCurrentDate\r\n}\r\n\r\nexport type T_MDTP_DropDownCalendarContainer = {\r\n    SetClickedMonthDays: TSetClickedMonthDays\r\n}\r\n\r\n\r\ntype TDropDownCalendarContainerProps = T_MDTP_DropDownCalendarContainer\r\n    & T_MSTP_DropDownCalendarContainer & TDropDownCalendarContainerOwnProps\r\n\r\nclass DropDownCalendarContainer extends React.Component<TDropDownCalendarContainerProps> {\r\n    render() {\r\n        return <DropDownCalendar {...this.props} />\r\n    }\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_DropDownCalendarContainer => ({\r\n    Calendars: state.CalendarData.Calendars,\r\n    ClickedMonthDays: state.CalendarData.ClickedMonthDays,\r\n    CurrentDate : state.CalendarData.CurrentDate\r\n\r\n})\r\n\r\nexport default compose(connect<T_MSTP_DropDownCalendarContainer,\r\n    T_MDTP_DropDownCalendarContainer,\r\n    TDropDownCalendarContainerOwnProps, GlobalState>\r\n(StateToProps, {SetClickedMonthDays}))(DropDownCalendarContainer)","import React, {useState} from \"react\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarIcon from \"../../assets/imgs/calendar.svg\"\r\nimport DropDownCalendarContainer from \"./DropDownCalendarContainer\";\r\nimport {TCurrentDate} from \"../../Data/CalendarReducer\";\r\n\r\nexport type TCalendarProps = {\r\n    CurrentDate: TCurrentDate\r\n}\r\n\r\nconst Calendar: React.FC<TCalendarProps> = (props) => {\r\n    let [ShowDropDownCalendar, SetShowDropDownCalendar] = useState(false)\r\n\r\n    const onShowDropDownCalendar = () => {\r\n        SetShowDropDownCalendar(true)\r\n    }\r\n    const onHideDropDownCalendar = () => {\r\n        SetShowDropDownCalendar(false)\r\n    }\r\n\r\n\r\n    return (<div className=\"Calendar\">\r\n        <div onClick={onShowDropDownCalendar} id=\"calendar-id\" className={CS.CalendarContainer}>\r\n            <div className={CS.CalendarContent}>\r\n                <div className={CS.CalendarDate}>\r\n                    {props.CurrentDate.CurrentDay} {props.CurrentDate.CurrentMonth} {props.CurrentDate.CurrentYear}\r\n                </div>\r\n                <div className={CS.CalendarIcon}>\r\n                    <img src={CalendarIcon} alt=\"calendar icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {ShowDropDownCalendar && <>\r\n            <div className={CS.bg}\r\n                 onClick={onHideDropDownCalendar}/>\r\n            <DropDownCalendarContainer/>\r\n        </>}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Calendar","import React from \"react\";\r\nimport AllS from \"./All.module.css\"\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TAllProps = {\r\n    FavoritesIsClicked: boolean\r\n    OnAllClicked: () => void\r\n}\r\n\r\nconst All: React.FC<TAllProps> = (props) => {\r\n    return (\r\n        <div className={props.FavoritesIsClicked\r\n            ? AllS.AllButtonBg\r\n            : AllS.AllButtonBgActive}>\r\n\r\n            <div  className={props.FavoritesIsClicked\r\n                ? AllS.item\r\n                : AllS.ActiveItem}>\r\n\r\n                <NavLink onClick={props.OnAllClicked}  to={\"/Home/All\"}> All </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All","import React from \"react\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TFavoritesProps = {\r\n    FavoritesIsClicked: boolean\r\n    OnFavoritesClick: () => void\r\n}\r\n\r\nconst FavoritesButton: React.FC<TFavoritesProps> = (props) => {\r\n    return (\r\n        <div\r\n             className={props.FavoritesIsClicked\r\n            ? FS.FavoritesButtonBgActive\r\n            : FS.FavoritesButtonBg}>\r\n\r\n            <div className={!props.FavoritesIsClicked\r\n                ? FS.item\r\n                : FS.ActiveItem}>\r\n\r\n                <NavLink onClick={props.OnFavoritesClick} to={\"/Home/Favorites\"}> Favorites </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesButton","import React from \"react\";\r\nimport AS from \"../../App.module.css\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport All from \"../All/All\";\r\nimport FavoritesButton from \"../Favorites/FavoritesButton\";\r\nimport {TCurrentDate} from \"../../Data/CalendarReducer\";\r\n\r\nexport type TCalendarAndControlButtonsProps = {\r\n    CurrentDate : TCurrentDate\r\n    FavoritesIsClicked : boolean\r\n    OnFavoritesClick : ()=>void\r\n    OnAllClicked : ()=>void\r\n\r\n}\r\n\r\nconst CalendarAndControlButtons : React.FC<TCalendarAndControlButtonsProps> = (props) =>{\r\n\r\n    return ( <div className={AS.CalendarAndButtons}>\r\n        <Calendar CurrentDate={props.CurrentDate}/>\r\n        <All FavoritesIsClicked={props.FavoritesIsClicked} OnAllClicked={props.OnAllClicked} />\r\n        <FavoritesButton OnFavoritesClick={props.OnFavoritesClick} FavoritesIsClicked={props.FavoritesIsClicked}/>\r\n    </div>)\r\n}\r\n\r\nexport default CalendarAndControlButtons","import React from \"react\";\r\nimport LS from \"./TimeSlider.module.css\"\r\nexport type TLeftLabelProps = {\r\n    Position : number | undefined\r\n    value : {\r\n    end : string | null,\r\n    start : string | null\r\n    } | undefined\r\n    offsetLeft : number | undefined\r\n}\r\n\r\nconst RightLabel :React.FC<TLeftLabelProps> = (props) =>{\r\n\r\n    return <div className={LS.LeftLabel}\r\n                style={{display : `${!props.value &&  !props.Position ? \"none\" : \"block\" }`, left : `${props.Position && props.offsetLeft \r\n                    && props.Position - props.offsetLeft + 80 + \"px\"}` }}>\r\n            <div className={LS.LeftLabelImage} > </div>\r\n            <div className={LS.LabelValue}> {props.value && props.value.start && props.value.start } </div>\r\n    </div>\r\n}\r\n\r\nexport default RightLabel\r\n","import React from \"react\";\r\nimport LS from \"./TimeSlider.module.css\"\r\nexport type TLeftLabelProps = {\r\n    Position : number | undefined\r\n    value : {\r\n    end : string | null,\r\n    start : string | null\r\n    } | undefined\r\n    offsetRight : number | undefined\r\n}\r\n\r\nconst LeftLabel :React.FC<TLeftLabelProps> = (props) =>{\r\n\r\n    return <div className={LS.RightLabel}\r\n                style={{ display : `${!props.value && !props.Position ? \"none\" : \"block\" }`,\r\n                    right : `${props.Position && props.offsetRight && props.offsetRight - props.Position + \"px\" }`}}>\r\n            <div className={LS.LeftLabelImage} > </div>\r\n            <div className={LS.LabelValue}> {props.value && props.value.end && props.value.end } </div>\r\n    </div>\r\n}\r\n\r\nexport default LeftLabel\r\n","export const  findPosX =(obj  ) =>{\r\n    var curleft = 0;\r\n    if (obj.offsetParent) {\r\n        while (1) {\r\n            curleft+=obj.offsetLeft;\r\n            if (!obj.offsetParent) {\r\n                break;\r\n            }\r\n            obj=obj.offsetParent;\r\n        }\r\n    } else if (obj.x) {\r\n        curleft+=obj.x;\r\n    }\r\n    return curleft;\r\n}\r\n\r\nexport const  findPosY = (obj) => {\r\n    var curtop = 0;\r\n    if (obj.offsetParent) {\r\n        while (1) {\r\n            curtop+=obj.offsetTop;\r\n            if (!obj.offsetParent) {\r\n                break;\r\n            }\r\n            obj=obj.offsetParent;\r\n        }\r\n    } else if (obj.y) {\r\n        curtop+=obj.y;\r\n    }\r\n    return curtop;\r\n}","import React, {useState, useEffect, Dispatch} from 'react';\r\n//@ts-ignore\r\nimport TimeRangeSlider from 'react-time-range-slider';\r\nimport LeftLabel from \"./SliderValueLeftLabel\";\r\nimport RightLabel from \"./SliderValueRightLabel\";\r\nimport {findPosX} from \"../../../assets/secondary/FindElementPose\";\r\n\r\nexport type TTimeSliderProps = {\r\n    step: number\r\n    maxValue?: string\r\n    minValue?: string\r\n    format?: number\r\n    disabled: boolean\r\n    value?: {\r\n        start: string | null\r\n        end: string | null\r\n    }\r\n    SetTimerValue : Dispatch<any>\r\n}\r\n\r\n\r\nconst TimeSlider: React.FC<TTimeSliderProps> = (props) => {\r\n    let [value, SetValue] = useState({\r\n        start: \"10:00\" as string | null,\r\n        end: \"22:00\" as string | null\r\n    })\r\n\r\n    let [LeftPose,SetLeftPose] = useState<number>()\r\n    let [RightPose,SetRightPose] = useState<number>()\r\n    let [LeftOffset,SetLeftOffset] = useState<number>()\r\n    let [RightOffset,SetRightOffset] = useState<number>()\r\n\r\n\r\n    const TimerButtonsInit = ()=>{\r\n        let slider = document.querySelectorAll(\".input-range\")\r\n        let el =  document.querySelectorAll(\".input-range__slider\")\r\n        // SetLeftPose(el[0].getBoundingClientRect())\r\n        // SetRightPose(el[1].getBoundingClientRect())\r\n        let SliderWidth = getComputedStyle(slider[0],null).width\r\n        let SliderPoseStart = findPosX(slider[0])\r\n        let SliderPoseEnd = SliderPoseStart + Number.parseInt(SliderWidth.substr(0,SliderWidth.length-2))\r\n        let LeftMargin = findPosX(el[0])\r\n        let RightMargin = findPosX(el[1])\r\n        SetLeftOffset(SliderPoseStart)\r\n        SetRightOffset(SliderPoseEnd)\r\n        SetLeftPose(LeftMargin)\r\n        SetRightPose(RightMargin)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            props.value && SetValue(props.value)\r\n        }, [props.value && props.value]\r\n    )\r\n\r\n\r\n    const changeStartHandler = (time: any) => {\r\n        // console.log(\"Start Handler Called\", time);\r\n    }\r\n\r\n    const timeChangeHandler = (time: any) => {\r\n        TimerButtonsInit()\r\n        SetValue(time)\r\n    }\r\n\r\n    const changeCompleteHandler = (time: any) => {\r\n        TimerButtonsInit()\r\n        props.SetTimerValue(value)\r\n        SetValue(time)\r\n        /* console.log(\"Complete Handler Called\", time);*/\r\n    }\r\n\r\n    return (<>\r\n        <TimeRangeSlider\r\n            disabled={props.disabled}\r\n            format={props.format ? props.format : 24}\r\n            maxValue={props.maxValue ? props.maxValue : \"20:59\"}\r\n            minValue={props.minValue ? props.minValue : \"8:00\"}\r\n            name={\"time_range\"}\r\n            onChangeStart={changeStartHandler}\r\n            onChangeComplete={changeCompleteHandler}\r\n            onChange={timeChangeHandler}\r\n            step={props.step}\r\n            value={value}/>\r\n            <LeftLabel Position={LeftPose} offsetLeft={LeftOffset}  value={value} />\r\n            <RightLabel Position={RightPose} value={value} offsetRight={RightOffset}/>\r\n    </>);\r\n\r\n}\r\n\r\n\r\nexport default TimeSlider","import React, {SyntheticEvent, useState,useEffect} from \"react\";\r\nimport MS from \"./ModalWindow.module.css\"\r\nimport ConfirmButton from \"../../assets/imgs/confirmButton.svg\"\r\nimport DeclineButton from \"../../assets/imgs/declineButton.svg\"\r\nimport TimeSlider from \"./TimeSlider/TimeSlider\";\r\nimport {TChangeWorklog, TSetIsPlayingWorklogById, TTimerData, TWorkLog} from \"../../Data/WorkLogsReducer\";\r\nimport {CalculateNewEndTime} from \"../../assets/secondary/CalculateNewEndTime\";\r\n\r\nexport type TModalWindowProps = {\r\n    closeWorklogChangeModal: () => void\r\n    WorklogChangeModalIsOpen: boolean\r\n    SetIsPlayingWorklogById : TSetIsPlayingWorklogById\r\n    PlayingWorklog : TWorkLog\r\n    TimerData : TTimerData | undefined\r\n    ChangeWorklog : TChangeWorklog\r\n}\r\ntype TTimerValue = {\r\n    start : string | null\r\n    end : string | null\r\n}\r\n\r\nconst ChangeWorklogModal: React.FC<TModalWindowProps> = (props) => {\r\n\r\n    let [ModalNewWorklogName, SetModalNewWorklogName] = useState(\"\")\r\n    let [ModalNewIssueName, SetModalNewIssueName] = useState(\"\")\r\n    let [ModalTimeLineValues, SetModalTimeLineValues] = useState<TTimerValue>()\r\n    let [NewWorklogNameIsFilled, SetNewWorklogNameIsFilled] = useState<boolean>(false)\r\n    let [NewIssueNameIsFilled, SetNewIssueNameIsFilled] = useState<boolean>(false)\r\n\r\n    let EmptyWorklogTimerMinutes = props.TimerData?.TimerValue.substr(3, props.TimerData?.TimerValue.length - 6)\r\n    let EmptyWorklogTimerEndHours = props.TimerData?.TimerValue.substr(0, props.TimerData?.TimerValue.length - 6)\r\n    let date = new Date()\r\n    let EmptyWorklogTimeValues = {\r\n        start : date.getHours() + \":\" + date.getMinutes(),\r\n        end : CalculateNewEndTime(date.getHours() + \":\" + date.getMinutes(),EmptyWorklogTimerEndHours,EmptyWorklogTimerMinutes)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.TimerData){\r\n            props.TimerData.TimerTaskField && SetModalNewWorklogName(props.TimerData.TimerTaskField)\r\n            props.TimerData.TimerIssue && SetModalNewIssueName (props.TimerData.TimerIssue)\r\n            if(props.PlayingWorklog.StartTime && props.PlayingWorklog.EndTime){\r\n                SetModalTimeLineValues({\r\n                    start : props.PlayingWorklog.StartTime,\r\n                    end : props.PlayingWorklog.EndTime\r\n                })\r\n            }else  SetModalTimeLineValues(EmptyWorklogTimeValues)\r\n        }\r\n\r\n    },[props.TimerData?.TimerIssue,props.TimerData?.TimerTaskField,props.PlayingWorklog])\r\n\r\n    const OnModalSubmit = (e: SyntheticEvent) => {\r\n        {\r\n             ModalNewWorklogName.length > 0\r\n                ? SetNewWorklogNameIsFilled(false)\r\n                : SetNewWorklogNameIsFilled(true)\r\n        }\r\n        {\r\n             ModalNewIssueName.length > 0\r\n                ? SetNewIssueNameIsFilled(false)\r\n                : SetNewIssueNameIsFilled(true)\r\n        }\r\n\r\n        if (ModalNewWorklogName && ModalNewWorklogName.length > 0\r\n            && ModalNewIssueName\r\n            && ModalNewIssueName.length > 0\r\n            && ModalTimeLineValues) {\r\n\r\n            let NewWL = {\r\n                ...props.PlayingWorklog,\r\n                StartTime: ModalTimeLineValues.start ,\r\n                EndTime:  ModalTimeLineValues.end,\r\n                TaskField: ModalNewWorklogName,\r\n                Issue: ModalNewIssueName,\r\n                status : props.PlayingWorklog.status ? props.PlayingWorklog.status :  \"warning\",\r\n                TimerValue : props.TimerData&& props.TimerData.TimerValue? props.TimerData.TimerValue : \"00:00:00\"\r\n            }\r\n\r\n            if(props.PlayingWorklog.ParrentId){\r\n                props.ChangeWorklog(props.PlayingWorklog.id,NewWL,true,props.PlayingWorklog.ParrentId)\r\n                props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n            }\r\n            else{\r\n                props.ChangeWorklog(props.PlayingWorklog.id,NewWL)\r\n                props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n            }\r\n            props.SetIsPlayingWorklogById(false, NewWL.id)\r\n            SetModalNewWorklogName(\"\")\r\n            SetModalNewIssueName(\"\")\r\n            SetNewWorklogNameIsFilled(false)\r\n            SetNewIssueNameIsFilled(false)\r\n\r\n            close(e)\r\n        }\r\n    }\r\n\r\n    const OnNewWorklogNameType = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetModalNewWorklogName(e.currentTarget.value)\r\n    }\r\n    const OnNewIssueNameType = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetModalNewIssueName(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const close = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (props.closeWorklogChangeModal) {\r\n            props.closeWorklogChangeModal();\r\n        }\r\n    }\r\n    if (!props.WorklogChangeModalIsOpen) return null;\r\n\r\n\r\n    return (\r\n        <div className=\"timer-modal\">\r\n            <div className={MS.modal}>\r\n                <div className={MS.ModalTitle}>New worklog</div>\r\n                <div className={MS.ModalSlider}>\r\n\r\n                    <TimeSlider value={ModalTimeLineValues}\r\n                                disabled={false}\r\n                                step={10}\r\n                                SetTimerValue={SetModalTimeLineValues}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <form name=\"NewWorklogContent\" action=\"\">\r\n                    <div className={MS.ModalTextFields}>\r\n                        <div className={MS.NewWorklogContentContainer}>\r\n\r\n                            <div className={MS.NewWorklogContentTitle}>Worklog name</div>\r\n\r\n                            <div className={MS.marginCheck}>\r\n                                <input\r\n                                    onChange={OnNewWorklogNameType}\r\n                                    value={ModalNewWorklogName}\r\n                                    className={MS.NewWorklogContentInput}\r\n                                    placeholder=\"Enter the worklog name\"\r\n                                    type=\"text\"/>\r\n                            </div>\r\n\r\n                            {NewWorklogNameIsFilled &&\r\n                            <div id=\"new-issue-err\" className={MS.ModalInputError}> Please, enter worklog name</div>\r\n                            }\r\n\r\n                            <div style={{marginTop: \"37px\"}}>\r\n                                <div className={MS.NewWorklogContentTitle}>Issue</div>\r\n                                <div className={MS.marginCheck}>\r\n                                    <input\r\n                                        onChange={OnNewIssueNameType}\r\n                                        value={ModalNewIssueName}\r\n                                        className={MS.NewWorklogContentInput}\r\n                                        placeholder=\"Enter the issue name\"\r\n                                        type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                            {NewIssueNameIsFilled &&\r\n                            <div id=\"new-issue-err\" className={MS.ModalInputError}> Please, enter issue name</div>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={MS.NewWorklogControlButtonsContainer}>\r\n                        <div className={MS.NewWorklogControlButtons}>\r\n                            <div onClick={OnModalSubmit} className=\"modal-open\">\r\n                                <img className={MS.NewWorklogSubmitButtonSize}\r\n                                     src={ConfirmButton} alt={\"submit\"}/>\r\n                            </div>\r\n                            <div className=\"modal-close\">\r\n                                <img onClick={props.closeWorklogChangeModal} className={MS.NewWorklogControlButton}\r\n                                     src={DeclineButton} alt={\"decline\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={MS.bg} onClick={e => close(e)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeWorklogModal\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n// import {withRouter} from 'react-router-dom'\r\nimport ChangeWorklogModal from \"./ChangeWorklogModal\";\r\nimport {GlobalState} from \"../../Data/redux-store\";\r\nimport {\r\n    TAddWorklog, TChangeWorklog, TSetIsPlayingWorklogById,\r\n    TTimerData, TWorkLog, ChangeWorklog\r\n}\r\n    from \"../../Data/WorkLogsReducer\";\r\nimport {AddWorklog, SetIsPlayingWorklogById} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TModalWindowContainerOwnProps = {\r\n    closeWorklogChangeModal: () => void\r\n    WorklogChangeModalIsOpen: boolean\r\n    TimerData: TTimerData | undefined\r\n}\r\n\r\nexport type T_MSTP_ModalWindowContainer = {\r\n    PlayingWorklog: TWorkLog\r\n}\r\n\r\nexport type T_MDTP_ModalWindowContainer = {\r\n    AddWorklog: TAddWorklog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    ChangeWorklog: TChangeWorklog\r\n}\r\ntype TModalWindowContainerProps =\r\n    T_MDTP_ModalWindowContainer\r\n    & T_MSTP_ModalWindowContainer\r\n    & TModalWindowContainerOwnProps\r\n\r\nclass ChangeWorklogModalContainer extends React.Component<TModalWindowContainerProps> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ChangeWorklogModal closeWorklogChangeModal={this.props.closeWorklogChangeModal}\r\n                                WorklogChangeModalIsOpen={this.props.WorklogChangeModalIsOpen}\r\n                                SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                                PlayingWorklog={this.props.PlayingWorklog}\r\n                                TimerData={this.props.TimerData}\r\n                                ChangeWorklog={this.props.ChangeWorklog}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_ModalWindowContainer => ({\r\n    PlayingWorklog: state.WorklogsData.PlayingWorklog\r\n})\r\n\r\nexport default compose(connect<T_MSTP_ModalWindowContainer, T_MDTP_ModalWindowContainer, TModalWindowContainerOwnProps, GlobalState>\r\n(StateToProps, {AddWorklog, SetIsPlayingWorklogById, ChangeWorklog}))(ChangeWorklogModalContainer)","import React, {useState} from 'react';\nimport AS from \"./App.module.css\"\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport WorkLogsContainer from \"./Components/WorkLogs/WorkLogsContainer\";\nimport TimeTracking from \"./Components/TimeTracking/TimeTracking\";\nimport GoogleCalendar from \"./Components/GoogleCalendar/GoogleCalendar\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {GlobalState} from \"./Data/redux-store\";\nimport {\n    SetIsPlayingWorklogById, ChangeWorklog,\n    TWorkLog, TSetIsPlayingWorklogById, TChangeWorklog, TAddWorklog,\n    AddWorklog, TTimerData\n} from \"./Data/WorkLogsReducer\";\n// import {Redirect, Route, withRouter} from \"react-router-dom\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport FavoritesPage from \"./Components/Favorites/FavoritesPage\";\nimport CalendarAndControlButtons from \"./Components/CalendarAndControllButtons/CalendarAndControlButtons\";\nimport {TCurrentDate} from \"./Data/CalendarReducer\";\nimport ChangeWorklogModalContainer from \"./Components/ModalWindow/ChangeWorklogModalContainer\";\n\nexport type TAppOwnProps = {}\n\nexport type T_MSTP_App = {\n    PlayingWorklog: TWorkLog\n    CurrentDate: TCurrentDate\n}\n\nexport type T_MDTP_App = {\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\n    ChangeWorklog: TChangeWorklog\n    AddWorklog: TAddWorklog\n}\n\nexport type TAppProps = T_MSTP_App & T_MDTP_App & TAppOwnProps\n\nconst App: React.FC<TAppProps> = (props) => {\n    let [WorklogChangeModalIsOpen, SetWorklogChangeModalIsOpen] = useState(false)\n    let [FavoritesIsClicked, SetFavoritesIsClicked] = useState(false)\n    let [TimerData, SetTimerData] = useState<TTimerData>()\n\n    const OnSetTimerData = (TimerData : TTimerData) =>{\n        SetTimerData(TimerData)\n    }\n\n    const OnFavoritesClick = () => {\n        SetFavoritesIsClicked(true)\n    }\n    const OnAllClicked = () => {\n        SetFavoritesIsClicked(false)\n    }\n\n    const openWorklogChangeModal = () => {\n        SetWorklogChangeModalIsOpen(true)\n    }\n\n    const closeWorklogChangeModal = () => {\n        SetWorklogChangeModalIsOpen(false)\n    }\n\n    return (<div>\n            <Route exact path='/'\n                   render={() => <Redirect to={\"/Home/All\"}/>}/>\n\n            <div className=\"MainAppWrapper\">\n                <NavBar/>\n\n                <div className={AS.CalendarAndButtonsContainer}>\n                    <CalendarAndControlButtons FavoritesIsClicked={FavoritesIsClicked}\n                                               OnAllClicked={OnAllClicked}\n                                               OnFavoritesClick={OnFavoritesClick}\n                                               CurrentDate={props.CurrentDate}/>\n                </div>\n\n                <div className={AS.MainWrapper}>\n                    <div className=\"WorklogsLayout\">\n                        <Route exact path='/Home/All'\n                               render={() => <div className=\"WorkLogBlock\">\n                                   <div className=\"Worklogs\">\n                                       <WorkLogsContainer/>\n                                   </div>\n                               </div>\n                               }/>\n                        <Route exact path='/Home/Favorites'\n                               render={() => <FavoritesPage FavoritesIsClicked={FavoritesIsClicked}\n                                                            FavoritesWorklogs={[]}/>}/>\n                    </div>\n                    <div className={AS.TImeTracking_and_Calendar}>\n                        <TimeTracking PlayingWorklog={props.PlayingWorklog}\n                                      FavoritesIsClicked={FavoritesIsClicked}\n                                      SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\n                                      AddWorklog={props.AddWorklog}\n                                      SetTimerData={OnSetTimerData}\n                                      openWorklogChangeModal={openWorklogChangeModal}\n                                      ChangeWorklog={props.ChangeWorklog}/>\n                        <div className=\"GoogleCalendar\">\n                            <GoogleCalendar/>\n                        </div>\n                    </div>\n                </div>\n\n                <ChangeWorklogModalContainer\n                    WorklogChangeModalIsOpen={WorklogChangeModalIsOpen}\n                    closeWorklogChangeModal={() => closeWorklogChangeModal()}\n                    TimerData={TimerData}\n                />\n\n            </div>\n\n        </div>\n    );\n}\n\n\nconst MapStateToProps = (state: GlobalState): T_MSTP_App => ({\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\n    CurrentDate: state.CalendarData.CurrentDate\n})\n\nexport default compose(\n    connect<T_MSTP_App, T_MDTP_App, TAppOwnProps, GlobalState>(MapStateToProps, {\n        SetIsPlayingWorklogById,\n        ChangeWorklog, AddWorklog\n    }))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore} from \"redux\"\r\nimport CalendarReducer from \"./CalendarReducer\";\r\nimport WorkLogsReducer from \"./WorkLogsReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\n\r\nlet reducers = combineReducers({\r\n CalendarData : CalendarReducer,\r\n WorklogsData  : WorkLogsReducer,\r\n form : formReducer,\r\n})\r\n\r\ntype Treducers = typeof reducers\r\n\r\nexport type GlobalState = ReturnType<Treducers>\r\n\r\nconst store = createStore(reducers)\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Data/redux-store\";\n\nReactDOM.render(\n\n    <HashRouter  basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <div style={{backgroundColor : \"#F9FAFC\", overflow : \"hidden\"}} className={\"App\"}>\n                <App />\n            </div>\n\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorklogInfoContainer\":\"WorkLog_WorklogInfoContainer__3vBgc\",\"WorklogBlockContainer\":\"WorkLog_WorklogBlockContainer__k3upz\",\"WorklogBlockContainerActive\":\"WorkLog_WorklogBlockContainerActive__awb7y\",\"WLInfoButton\":\"WorkLog_WLInfoButton__2amtG\",\"WLInfoButtonActive\":\"WorkLog_WLInfoButtonActive__2T9on\",\"WLlinestroke\":\"WorkLog_WLlinestroke__2SPgZ\",\"WLlinestrokeActive\":\"WorkLog_WLlinestrokeActive__1wEjg\",\"ColorPointPose\":\"WorkLog_ColorPointPose__2v3Y0\",\"ColorPointPoseActive\":\"WorkLog_ColorPointPoseActive__3Ylmy\",\"WorklogBlock\":\"WorkLog_WorklogBlock__3MTew\",\"WorkTime\":\"WorkLog_WorkTime__35AHM\",\"WbcBlock\":\"WorkLog_WbcBlock__y2-DV\",\"StartTime\":\"WorkLog_StartTime__pO95X\",\"EndTime\":\"WorkLog_EndTime__6ivO2\",\"Minus\":\"WorkLog_Minus__3ysDf\",\"WorklogContentContainer\":\"WorkLog_WorklogContentContainer__Pdl3q\",\"JiraCode\":\"WorkLog_JiraCode__3cju4\",\"TaskField\":\"WorkLog_TaskField__3WyCE\",\"ProgressBarContainer\":\"WorkLog_ProgressBarContainer__2t-30\",\"TimerValueContainer\":\"WorkLog_TimerValueContainer__3bCeV\",\"TimerValue\":\"WorkLog_TimerValue__yfMTJ\",\"ControlButtonsContainer\":\"WorkLog_ControlButtonsContainer__cqNYJ\",\"PlayButton\":\"WorkLog_PlayButton__2v57W\",\"StopButton\":\"WorkLog_StopButton__1uogg\",\"NestingButtonPose\":\"WorkLog_NestingButtonPose__-jdPs\",\"NestingBG\":\"WorkLog_NestingBG__ALW79\",\"TwwContentText\":\"WorkLog_TwwContentText__1n6ua\",\"WorkLogSliderPose\":\"WorkLog_WorkLogSliderPose__2XB8U\",\"TwwContentImg\":\"WorkLog_TwwContentImg__2jKRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainWrapper\":\"App_MainWrapper__3UVmf\",\"CalendarAndButtonsContainer\":\"App_CalendarAndButtonsContainer__1qylj\",\"CalendarAndButtons\":\"App_CalendarAndButtons__gi3vH\",\"TImeTracking_and_Calendar\":\"App_TImeTracking_and_Calendar__2wagN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllButtonBgActive\":\"All_AllButtonBgActive__2raAa\",\"AllButtonBg\":\"All_AllButtonBg__18uYw\",\"item\":\"All_item__2aEna\",\"ActiveItem\":\"All_ActiveItem__129Oh\"};","module.exports = __webpack_public_path__ + \"static/media/play-button.f9fec951.svg\";","module.exports = __webpack_public_path__ + \"static/media/active-issue-more-button.89696082.svg\";","module.exports = __webpack_public_path__ + \"static/media/danger_cp.49659e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning_cp.c2d1e025.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_cp.08ca5cee.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop_button.1eb1b96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirmButton.8d55a976.svg\";","module.exports = __webpack_public_path__ + \"static/media/declineButton.9823975f.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button.ee54e2c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusDanger.168fb5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusWarning.ccaa2bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusOK.b4118d29.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderTimesContainer\":\"WorkLogSlider_SliderTimesContainer__1F60M\",\"SliderTimes\":\"WorkLogSlider_SliderTimes__3TsVZ\",\"TimePickerLine\":\"WorkLogSlider_TimePickerLine__1mjq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarSync\":\"CSCElement_CalendarSync__2zzRN\",\"SyncColorPointContainer\":\"CSCElement_SyncColorPointContainer__1k-CP\",\"SyncInfoContainer\":\"CSCElement_SyncInfoContainer__2WxBs\"};"],"sourceRoot":""}