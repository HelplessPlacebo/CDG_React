{"version":3,"sources":["assets/imgs/CalendarDayStatusWarning.svg","assets/imgs/CalendarDayStatusOK.svg","Components/WorkLogs/SliderTimePicker/WorkLogSlider.module.css","Components/CalendarSyncsElement/CSCElement.module.css","Components/Calendar/Calendar.module.css","assets/imgs/settings.svg","assets/imgs/second_icon.svg","assets/imgs/door.svg","assets/imgs/avatar.svg","Components/LineStroke/LineStroke.module.css","assets/imgs/arrow-up.svg","assets/imgs/download.svg","assets/imgs/separator-line.svg","assets/imgs/stroke_vert.svg","assets/imgs/stroke_horiz.svg","assets/imgs/new_worklog_button_shadowed.svg","assets/imgs/TT-stop-button.svg","assets/imgs/TT-pause-button.svg","assets/imgs/calendar_active.svg","assets/imgs/calendar_gray.svg","assets/imgs/Cyan.svg","assets/imgs/Orange.svg","assets/imgs/Purple.svg","assets/imgs/calendar.svg","Components/ModalWindow/ModalWindow.module.css","Components/TimeTracking/TimeTracking.module.css","Components/NavBar/NavBar.module.css","Components/Favorites/Favorites.module.css","Components/ModalWindow/TimeSlider/TimeSlider.module.css","Components/WorkLogs/WorklogInfo/WorklogInfo.module.css","Components/WorkLogs/DropDown/WorklogDropDown.module.css","Components/DeleteConfirmModal/DeleteConfirm.module.css","Components/Timer/Timer.module.css","Components/NavBar/NavBar.tsx","API/requests.ts","Data/WorkLogsReducer.ts","assets/secondary/DifferenceInTime.js","Components/LineStroke/LineStroke.tsx","Components/WorkLogs/DropDown/WorklogDropDown.tsx","Components/WorkLogs/NestingWorkLog.tsx","Components/DeleteConfirmModal/DeleteConfirmModal.tsx","Components/WorkLogs/WorkLog.tsx","Components/ProgressBar/ProgressBar.tsx","Components/WorkLogs/WorklogInfo/WorklogInfo.tsx","Components/WorkLogs/SliderTimePicker/WorkLogTimeLine.tsx","Components/WorkLogs/WorkLogsBlock.tsx","Components/WorkLogs/WorkLogsContainer.tsx","Components/DropDownMenu/DropDownMenu.jsx","assets/secondary/CalculateTime.js","Components/Timer/Timer.jsx","Components/TimeTracking/TimeTracking.tsx","Components/CalendarSyncsElement/CSCElement.tsx","Components/GoogleCalendar/GoogleCalendar.tsx","Components/Favorites/FavoritesPage.tsx","Data/CalendarReducer.ts","Components/Calendar/CalendarDay.tsx","Components/Calendar/DropDownCalendarFooterElement.tsx","Components/Calendar/DropDownCalendar.tsx","Components/Calendar/DropDownCalendarContainer.tsx","Components/Calendar/Calendar.tsx","Components/All/All.tsx","Components/Favorites/FavoritesButton.tsx","Components/CalendarAndControllButtons/CalendarAndControlButtons.tsx","Components/ModalWindow/TimeSlider/SliderValueLeftLabel.tsx","Components/ModalWindow/TimeSlider/SliderValueRightLabel.tsx","assets/secondary/FindElementPose.js","Components/ModalWindow/TimeSlider/TimeSlider.tsx","Components/ModalWindow/ChangeWorklogModal.tsx","Components/ModalWindow/ChangeWorklogModalContainer.tsx","Components/LoginPage/LoginModal.tsx","App.tsx","serviceWorker.ts","Data/redux-store.ts","index.tsx","Components/GoogleCalendar/GoogleCalendar.module.css","App.module.css","Components/LoginPage/LoginModal.module.css","Components/WorkLogs/WorkLog.module.css","Components/All/All.module.css","assets/imgs/play-button.svg","assets/imgs/active-issue-more-button.svg","assets/imgs/danger_cp.svg","assets/imgs/warning_cp.svg","assets/imgs/ok_cp.svg","assets/imgs/stop_button.svg","assets/imgs/confirmButton.svg","assets/imgs/declineButton.svg","assets/imgs/new_worklog_button.svg","assets/imgs/CalendarDayStatusDanger.svg"],"names":["module","exports","NavBar","props","className","HS","navContainer","navLinksContainer","NavLinksPosition","NavLinks","item","to","NavIconsContainer","NavIcons","SmallIcons","src","settings","alt","FAQ","LogOutIcon","AvatarIcons","AvatarIcon","instance","axios","create","withCredentials","baseURL","headers","API","WorklogData","post","response","data","DEL_WORKLOG","CHANGE_WORKLOG","ADD_TO_FAVORITE","randomInteger","min","max","rand","Math","random","floor","DefaultState","WorkLogsBlocks","BlockInfo","BlockCreatedDate","SummaryStatus","SummaryTime","id","Worklogs","StartTime","EndTime","JiraCode","TaskField","status","IsNesting","TimerValue","NestingItems","PlayingWorklog","FavoritesWorklogs","WorklogToChange","undefined","AddWorklog","NewWorklog","type","SetIsPlayingWorklogById","IsPlaying","ElementId","ParentId","ChangeWorklog","WorkLogId","NewWlIsNesting","NewWlParentId","SetWorklogToChange","AddToFavorite","WorklogId","WorklogsReducer","state","action","GetWorklogsBlockCopy","JSON","parse","stringify","FindWorklogById","WorklogsBlocksCopy","SoughtWorklog","WorklogBlockIndex","WorklogIndex","NestingWorklogIndex","map","WorklogBlock","Index","Worklog","WLIndex","NestingItem","NestingIndex","SoughtNestingItem","WorklogToCreate","EmptyWorklog","Issue","el","unshift","WB","NewWorklogs","NewNestingWorklogs","index","DelParentId","push","filter","DelWorklogId","WL","DifferenceInTime","differentRes","hours","minuts","TimesArr","firstDate","secondDate","getDate","string","Date","split","different","round","abs","LineStroke","LS","lineStroke","WorkLogDropDown","onMouseLeave","onHideMenu","WLDD","Container","onClick","ContentContainer","ContainerFirstEl","ComponentToDraw","CurrentWorklog","ContainerEl","every","e","SetDeleteModalParams","WorkLogToDeleteId","OnDeleteModalOpen","NestingWorkLog","useState","ShowMenu","SetShowMenu","WLS","WorkLogs","WorklogBlockContainerActive","WorklogBlockContainer","WorkTime","Minus","ColorPointPoseActive","ColorPointPose","CP_ok","CP_warning","CP_danger","keys","i","length","openWorklogChangeModal","WorklogContentContainer","TimerValueContainer","ControlButtonsContainer","StopButton","PlayButton","WLInfoButtonActive","WLInfoButton","WLMoreButton","WLlinestrokeActive","WLlinestroke","NestingIsShowing","DeleteWorklogConfirmModal","isOpen","DS","modal","ModalTextContainer","NewWorklogControlButtonsContainer","NewWorklogControlButtons","DeleteModalParams","DeleteWorklog","onClose","NewWorklogSubmitButtonSize","ConfirmButton","NewWorklogControlButton","DeclineButton","MS","bg","WorkLog","NestingButtonPose","OnHideNestingWorklogs","NestingBG","TwwContentImg","ArrowUp","OnShowNestingWorklogs","TwwContentText","DeleteModalIsOpen","OnDeleteModalClose","key","ProgressBar","Fragment","style","width","height","borderRadius","Bar","now","WorklogInfo","FS","SummaryWorklogInfo","DateBlockContainer","DateBlockSize","DateOfCreation","DateTime","Progress","ObjToSend","SendWorklogBlockThunk","DownloadIcon","WLlineStrokeContainer","WorkLogTimeLine","SS","TimePickerLine","SliderTimesContainer","SliderTimes","WorkLogsBlock","SetNestingIsShowing","SetDeleteModalIsOpen","toString","WorklogInfoContainer","WorkLogSliderPose","WorkLogsContainer","this","WorklogsBlocks","TimerData","paddingTop","React","Component","compose","connect","WorklogsData","WorklogBlockData","dispatch","a","console","log","options","LongMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","marginRight","marginTop","maxHeight","backgroundColor","outlined","option","MenuItem","paddingLeft","marginBottom","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","ToFullTime","value","Numbered","Number","parseInt","CalculateNewStartTime","CurrentTime","minutes","CurrentHours","CurrentMinutes","Timer","substr","seconds","setSeconds","setMinutes","setHours","isActive","setIsActive","WorklogInputValue","SetWorklogInputValue","IssueInputValue","SetIssueInputValue","useEffect","interval","clearInterval","setInterval","TS","TimeRContainer","TimerWorklogName","placeholder","defaultValue","onChange","TimerIssueName","TimerControlButtonsContainer","TimerControlButtons","TimerIssue","TimerTaskField","SetTimerData","TTStopButton","TTPauseButton","TimeTracking","TTS","TTLayout","StrokeVert","TTContent","TimetrackingHeaderContainer","TimetrackingHeader","TimeTrackingLogo","TTMainContentRoot","NewWorklogContainer","FavoritesIsClicked","NewWorklogButtonPose","NewWorklogButtonSize","NewWorklogButtonShadowed","NewWorklogButton","NewWorklogButtonDescriptionContainer","NewWorklogButtonDescription","TTHorizStrokePose","StrokeHoriz","CSCElement","CSCS","CalendarSync","SyncColorPointContainer","LineColor","Cyan","Orange","Purple","SyncInfoContainer","Description","SyncTime","GoogleCalendar","CalendarSyncs","CalendarIsClicked","SetCalendarIsClicked","IsChecked","SetIsChecked","GCS","GCSContainer","GCSDescription","GCSSwitchPose","checked","GCSCalendarPose","ActiveSmallCalendar","SmallCalendar","CalendarSyncsContainer","FavoritesPage","NoFavoritesIssuesContainer","FavoritesText","months","RandomStatus","arr","RangeError","RandomDaysCreate","statuses","IntroDaysCount","OutroDaysCount","DaysCount","MaxDaysLength","OutArr","IntroDaysArr","OutroDaysArr","DaysArr","j","Signature","DayNumber","DayStatus","n","p","Calendars","January","February","March","April","May","June","July","August","September","October","November","December","ClickedMonthDay","CurrentDate","date","CurrentYear","getFullYear","CurrentMonth","getMonth","CurrentDay","GetCurrentDate","CalendarReducer","Day","CalendarDay","DayIsClicked","SetDayIsClicked","WrappedDay","MonthName","CDS","DayBgClicked","DayBgCurrentDay","DayBgDefault","WorklogsBlockToBeScroled","StateCopy","WorklogsBlockToBeScrolled","Month","document","getElementById","SearchWorklogBlock","SetClickedMonthDay","scrollIntoView","block","inline","behavior","DropDownCalendarDayFaded","DropDownCalendarDay","DropDownCalendarDayNumberClicked","DropDownCalendarDayNumber","OK","Warn","Danger","DropDownCalendarFooterElement","CS","DropDownProgressStatus","text","DropDownCalendar","DropDownCalendarHeader","DropDOwnCalendarContentContainer","DropDownCalendarContent","DropDownCalendarDayNames","day","DropDownCalendarFooterContainer","DropDownCalendarFooter","DropDownCalendarContainer","CalendarData","Calendar","ShowDropDownCalendar","SetShowDropDownCalendar","CalendarContainer","CalendarContent","CalendarDate","CalendarIcon","All","AllS","AllButtonBg","AllButtonBgActive","ActiveItem","OnAllClicked","FavoritesButton","FavoritesButtonBgActive","FavoritesButtonBg","OnFavoritesClick","CalendarAndControlButtons","AS","CalendarAndButtons","RightLabel","LeftLabel","display","Position","left","offsetLeft","LeftLabelImage","LabelValue","start","right","offsetRight","end","findPosX","obj","curleft","offsetParent","x","TimeSlider","SetValue","LeftPose","SetLeftPose","RightPose","SetRightPose","LeftOffset","SetLeftOffset","RightOffset","SetRightOffset","TimerButtonsInit","slider","querySelectorAll","SliderWidth","getComputedStyle","SliderPoseStart","SliderPoseEnd","LeftMargin","RightMargin","disabled","format","maxValue","minValue","name","onChangeStart","time","onChangeComplete","SetTimerValue","step","ChangeWorklogModal","ModalNewWorklogName","SetModalNewWorklogName","ModalNewIssueName","SetModalNewIssueName","ModalTimeLineValues","SetModalTimeLineValues","NewWorklogNameIsFilled","SetNewWorklogNameIsFilled","NewIssueNameIsFilled","SetNewIssueNameIsFilled","EmptyWorklogTimerMinutes","EmptyWorklogTimerEndHours","getHours","getMinutes","EmptyWorklogTimeValues","close","preventDefault","closeWorklogChangeModal","WorklogChangeModalIsOpen","ModalTitle","ModalSlider","ModalTextFields","NewWorklogContentContainer","NewWorklogContentTitle","marginCheck","NewWorklogContentInput","ModalInputError","Obj","NewWL","ChangeWorklogModalContainer","useStyles","makeStyles","theme","root","margin","spacing","LoginModal","classes","LoginFieldValue","SetLoginFieldValue","PasswordFieldValue","SetPasswordFieldValue","ErrorText","SetErrorText","autoComplete","InputsContainer","LoginContainer","TextField","target","error","label","helperText","PasswordContainer","Button","localStorage","setItem","window","location","reload","variant","SetWorklogChangeModalIsOpen","SetFavoritesIsClicked","getItem","exact","path","render","CalendarAndButtonsContainer","MainWrapper","TImeTracking_and_Calendar","hostname","match","reducers","combineReducers","form","formReducer","WorkLogsReducer","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","basename","process","overflow","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.940ccb5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusWarning.ccaa2bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusOK.b4118d29.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderTimesContainer\":\"WorkLogSlider_SliderTimesContainer__1F60M\",\"SliderTimes\":\"WorkLogSlider_SliderTimes__3TsVZ\",\"TimePickerLine\":\"WorkLogSlider_TimePickerLine__1mjq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarSync\":\"CSCElement_CalendarSync__2zzRN\",\"SyncColorPointContainer\":\"CSCElement_SyncColorPointContainer__1k-CP\",\"SyncInfoContainer\":\"CSCElement_SyncInfoContainer__2WxBs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarContainer\":\"Calendar_CalendarContainer__I7VPR\",\"CalendarContent\":\"Calendar_CalendarContent__7J52V\",\"CalendarIcon\":\"Calendar_CalendarIcon__35v8Z\",\"CalendarDate\":\"Calendar_CalendarDate__1Fc1O\",\"DropDownCalendar\":\"Calendar_DropDownCalendar__rOVL_\",\"DropDownCalendarHeader\":\"Calendar_DropDownCalendarHeader__mMkPr\",\"DropDOwnCalendarContentContainer\":\"Calendar_DropDOwnCalendarContentContainer__1ekcD\",\"DropDownCalendarContent\":\"Calendar_DropDownCalendarContent__3lJK4\",\"DropDownCalendarFooterContainer\":\"Calendar_DropDownCalendarFooterContainer__dEO85\",\"DropDownCalendarFooter\":\"Calendar_DropDownCalendarFooter__3v4wV\",\"DropDownCalendarFooterElement\":\"Calendar_DropDownCalendarFooterElement__2gCAC\",\"DropDownCalendarProgressLineDanger\":\"Calendar_DropDownCalendarProgressLineDanger__k_JjF\",\"DropDownCalendarProgressLineOk\":\"Calendar_DropDownCalendarProgressLineOk__1Tedt\",\"DropDownCalendarProgressLineWarning\":\"Calendar_DropDownCalendarProgressLineWarning__3NPVW\",\"DropDownProgressStatus\":\"Calendar_DropDownProgressStatus__1Hffx\",\"DayBgClicked\":\"Calendar_DayBgClicked__10_xV\",\"DayBgCurrentDay\":\"Calendar_DayBgCurrentDay__35shH\",\"DayBgDefault\":\"Calendar_DayBgDefault__138Ia\",\"DropDownCalendarDay\":\"Calendar_DropDownCalendarDay__1TvNk\",\"DropDownCalendarDayFaded\":\"Calendar_DropDownCalendarDayFaded__3wmG5\",\"DropDownCalendarDayNumber\":\"Calendar_DropDownCalendarDayNumber__3_jQu\",\"DropDownCalendarDayNumberClicked\":\"Calendar_DropDownCalendarDayNumberClicked__YFrra\",\"DropDownCalendarDayNames\":\"Calendar_DropDownCalendarDayNames__qcAdr\",\"bg\":\"Calendar_bg__2aViC\"};","module.exports = __webpack_public_path__ + \"static/media/settings.6677f6c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/second_icon.07aaae67.svg\";","module.exports = __webpack_public_path__ + \"static/media/door.ffe979f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.462c6cf4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineStroke\":\"LineStroke_lineStroke__2pI3T\"};","module.exports = __webpack_public_path__ + \"static/media/arrow-up.0dc941bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.07db24c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/separator-line.ec52537e.svg\";","module.exports = __webpack_public_path__ + \"static/media/stroke_vert.437b2938.svg\";","module.exports = __webpack_public_path__ + \"static/media/stroke_horiz.2e15c5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button_shadowed.6b0a0400.svg\";","module.exports = __webpack_public_path__ + \"static/media/TT-stop-button.3d2bae0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/TT-pause-button.8e7efc77.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar_active.daeb1a9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar_gray.aea2c3bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cyan.a07d9131.svg\";","module.exports = __webpack_public_path__ + \"static/media/Orange.47285204.svg\";","module.exports = __webpack_public_path__ + \"static/media/Purple.f1ff4eee.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.daeb1a9d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalWindow_modal__fVvss\",\"bg\":\"ModalWindow_bg__1aHSY\",\"ModalTitle\":\"ModalWindow_ModalTitle__1JK9n\",\"ModalSlider\":\"ModalWindow_ModalSlider__21VHJ\",\"ModalTextFields\":\"ModalWindow_ModalTextFields__1xPvH\",\"NewWorklogContentContainer\":\"ModalWindow_NewWorklogContentContainer__3XnfK\",\"NewWorklogContentTitle\":\"ModalWindow_NewWorklogContentTitle__3V0FN\",\"ModalInputError\":\"ModalWindow_ModalInputError__2UZpA\",\"NewWorklogContentInput\":\"ModalWindow_NewWorklogContentInput__3GqOw\",\"marginCheck\":\"ModalWindow_marginCheck__2Ndhx\",\"NewWorklogControlButtonsContainer\":\"ModalWindow_NewWorklogControlButtonsContainer__308FZ\",\"NewWorklogControlButtons\":\"ModalWindow_NewWorklogControlButtons__2T_1s\",\"NewWorklogSubmitButtonSize\":\"ModalWindow_NewWorklogSubmitButtonSize__281oc\",\"NewWorklogControlButton\":\"ModalWindow_NewWorklogControlButton__3fYoB\",\"NewWorklogSubmitButton\":\"ModalWindow_NewWorklogSubmitButton__r5R_e\",\"Err\":\"ModalWindow_Err__1uJOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimetrackingHeaderContainer\":\"TimeTracking_TimetrackingHeaderContainer__ON8us\",\"TTLayout\":\"TimeTracking_TTLayout__3veO9\",\"TTContent\":\"TimeTracking_TTContent__EuSq7\",\"TTMainContentRoot\":\"TimeTracking_TTMainContentRoot__1SdVC\",\"TimetrackingHeader\":\"TimeTracking_TimetrackingHeader__2_M3q\",\"TimeTrackingLogo\":\"TimeTracking_TimeTrackingLogo__3Gymw\",\"MoreIconSizeContainer\":\"TimeTracking_MoreIconSizeContainer__CtFXl\",\"MoreIconSize\":\"TimeTracking_MoreIconSize__3hJsc\",\"NewWorklogContainer\":\"TimeTracking_NewWorklogContainer__1Htpq\",\"NewWorklog\":\"TimeTracking_NewWorklog__3l1DI\",\"NewWorklogButtonSize\":\"TimeTracking_NewWorklogButtonSize__1ylBg\",\"NewWorklogButtonPose\":\"TimeTracking_NewWorklogButtonPose__MG6O9\",\"NewWorklogButtonDescriptionContainer\":\"TimeTracking_NewWorklogButtonDescriptionContainer__1V2I5\",\"NewWorklogButtonDescription\":\"TimeTracking_NewWorklogButtonDescription__29EUZ\",\"TTHorizStrokePose\":\"TimeTracking_TTHorizStrokePose__1WjLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"NavBar_navContainer__3sKle\",\"navLinksContainer\":\"NavBar_navLinksContainer__3UvKn\",\"NavLinksPosition\":\"NavBar_NavLinksPosition__2Jq8r\",\"NavLinks\":\"NavBar_NavLinks__22adz\",\"NavLinksItem\":\"NavBar_NavLinksItem__jDCJP\",\"ActiveLink\":\"NavBar_ActiveLink__2agTU\",\"NavIconsContainer\":\"NavBar_NavIconsContainer__2r9Fj\",\"NavIcons\":\"NavBar_NavIcons__1XxNH\",\"SmallIcons\":\"NavBar_SmallIcons__atSWj\",\"AvatarIcons\":\"NavBar_AvatarIcons__yrk4o\",\"item\":\"NavBar_item__fYm3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesButtonBg\":\"Favorites_FavoritesButtonBg__3VELL\",\"FavoritesButtonBgActive\":\"Favorites_FavoritesButtonBgActive__dnGPa\",\"item\":\"Favorites_item__1W2Lk\",\"ActiveItem\":\"Favorites_ActiveItem__3T7aT\",\"FavoritesText\":\"Favorites_FavoritesText__2x9PR\",\"NoFavoritesIssuesContainer\":\"Favorites_NoFavoritesIssuesContainer__3tIde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeftLabel\":\"TimeSlider_LeftLabel__1cFI_\",\"RightLabel\":\"TimeSlider_RightLabel__itdny\",\"LeftLabelImage\":\"TimeSlider_LeftLabelImage__1Hskt\",\"LabelValue\":\"TimeSlider_LabelValue__3snvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SummaryWorklogInfo\":\"WorklogInfo_SummaryWorklogInfo__4-4NV\",\"DateBlockContainer\":\"WorklogInfo_DateBlockContainer__1o7Kx\",\"DateBlockSize\":\"WorklogInfo_DateBlockSize__2QW4p\",\"DownloadIcon\":\"WorklogInfo_DownloadIcon__3DNZg\",\"DateTime\":\"WorklogInfo_DateTime__3Z9a0\",\"Progress\":\"WorklogInfo_Progress__25Rn6\",\"WLlineStrokeContainer\":\"WorklogInfo_WLlineStrokeContainer__1Sgro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"WorklogDropDown_Container__3cI-Y\",\"ContentContainer\":\"WorklogDropDown_ContentContainer__o5kDH\",\"ContainerEl\":\"WorklogDropDown_ContainerEl__2dtp_\",\"ContainerFirstEl\":\"WorklogDropDown_ContainerFirstEl__1skhJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeleteConfirm_modal__NP0te\",\"bg\":\"DeleteConfirm_bg__2icmH\",\"ModalTextContainer\":\"DeleteConfirm_ModalTextContainer__2-EVO\",\"NewWorklogControlButtonsContainer\":\"DeleteConfirm_NewWorklogControlButtonsContainer__2Rt5s\",\"NewWorklogControlButtons\":\"DeleteConfirm_NewWorklogControlButtons__2JHii\",\"NewWorklogSubmitButtonSize\":\"DeleteConfirm_NewWorklogSubmitButtonSize__1d3dd\",\"NewWorklogControlButton\":\"DeleteConfirm_NewWorklogControlButton__3JXRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRContainer\":\"Timer_TimeRContainer__16lLU\",\"TimerWorklogName\":\"Timer_TimerWorklogName__2BtW8\",\"TimerIssueName\":\"Timer_TimerIssueName__i_DiT\",\"TimerControlButtonsContainer\":\"Timer_TimerControlButtonsContainer__2RF33\",\"TimerControlButtons\":\"Timer_TimerControlButtons__3NEwd\",\"Timer\":\"Timer_Timer__ji3V0\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HS from \"./NavBar.module.css\"\r\nimport settings from \"../../assets/imgs/settings.svg\"\r\nimport FAQ from \"../../assets/imgs/second_icon.svg\"\r\nimport LogOutIcon from \"../../assets/imgs/door.svg\"\r\nimport AvatarIcon from \"../../assets/imgs/avatar.svg\"\r\n\r\n\r\nexport type TNavBarProps = {}\r\n\r\nconst NavBar: React.FC<TNavBarProps> = (props) => {\r\n    return (<div className={HS.navContainer}>\r\n        <div className={HS.navLinksContainer}>\r\n            <div className={HS.NavLinksPosition}>\r\n                <div className={HS.NavLinks}>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Home/All\">\r\n                            Home\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Issues/\">\r\n                            Issues\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Filter/\">\r\n                            Filter\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Projects/\">\r\n                            Projects\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={HS.NavIconsContainer}>\r\n            <div className={HS.NavIcons}>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={settings} alt=\"settings\"/>\r\n                </div>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={FAQ} alt=\"info\"/>\r\n                </div>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={LogOutIcon} alt=\"door1\"/>\r\n                </div>\r\n                <div className={HS.AvatarIcons}>\r\n                    <img className=\"\" src={AvatarIcon} alt=\"avatar_icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\nexport default NavBar","import axios from \"axios\";\r\nimport {TSendWorklogsData, TWorklogBlock} from \"../Data/WorkLogsReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:5000/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"\"\r\n    }\r\n})\r\n\r\n\r\nexport type TDefRes = {\r\n    resultCode : number\r\n    messages: Array<string>\r\n    data : any\r\n}\r\n\r\nexport const API = {\r\n\r\n    async SendWorklogBlock(WorklogData : TSendWorklogsData) {\r\n        const response = await instance.post<TDefRes>(`Worklogs`,WorklogData)\r\n        return response.data\r\n    }\r\n}\r\n\r\n","import {GlobalState} from \"../../../my-app/src/data/redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {API} from \"../API/requests\";\r\n\r\nconst ADD_WORKLOG = \"WORKLOGS/ADD_WORKLOG\"\r\nconst DEL_WORKLOG = \"WORKLOGS/DEL_WORKLOG\"\r\nconst SET_IS_PLAYING_WORKLOG_BY_ID = \"WORKLOGS/SET_IS_PLAYING_WORKLOG_BY_ID\"\r\nconst CHANGE_WORKLOG = \"WORKLOGS/CHANGE_WORKLOG\"\r\nconst SET_WORKLOG_TO_CHANGE = \"WORKLOGS/SET_WORKLOG_TO_CHANGE\"\r\nconst ADD_TO_FAVORITE = \"WORKLOGS/ADD_TO_FAVORITE\"\r\n\r\n\r\n\r\nexport const randomInteger = (min: number, max: number): number => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\n\r\n\r\nexport type TNestingItem = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    Issue?: string\r\n    id: number\r\n    TimerValue: string | null\r\n}\r\n\r\nexport type TBlockInfo = {\r\n    BlockCreatedDate: string\r\n    SummaryStatus: \"ok\" | \"warning\" | \"danger\" | string\r\n    SummaryTime: string | null\r\n    id : number\r\n}\r\n\r\nexport type TWorkLog = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    TimerValue : string | null\r\n    IsNesting?: boolean\r\n    NestingItems?: Array<TNestingItem>\r\n    id: number\r\n    Issue?: string\r\n    ParentId?: number\r\n}\r\n\r\nexport type  TWorklogBlock = {\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n}\r\n\r\nexport type TTimerData = {\r\n    TimerValue : string\r\n    TimerIssue : string\r\n    TimerTaskField : string\r\n}\r\nexport type TSendWorklogsData = {\r\n    WorkLogsBlocks : TWorklogBlock\r\n    FavoritesWorklogs : Array<TWorkLog>\r\n}\r\n\r\nlet DefaultState = {\r\n    WorkLogsBlocks: [{\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Wed,September 28\",\r\n            SummaryStatus: \"ok\",\r\n            SummaryTime: \"07:05:00\",\r\n            id: 1\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"11:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"warning\",\r\n            IsNesting: false,\r\n            TimerValue: \"02:00:00\",\r\n            id: 444553452341241\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:15:00\",\r\n            id: 213124124125122\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            IsNesting: true,\r\n            TimerValue: \"03:50:00\",\r\n            id: 2131241255143,\r\n            NestingItems: [{\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 123213213244,\r\n                TimerValue: \"01:30:00\"\r\n            }, {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 1232312351245,\r\n                TimerValue: \"03:20:00\"\r\n            }]\r\n        }]\r\n    },\r\n        {\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Wed,September 27\",\r\n            SummaryStatus: \"warning\",\r\n            SummaryTime: \"06:05:00\",\r\n            id: 2\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"danger\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:00:00\",\r\n            id: 444553452341246\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:15:00\",\r\n            id: 213124124125127\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            IsNesting: true,\r\n            TimerValue: \"03:50:00\",\r\n            id: 2131241255148,\r\n            NestingItems: [{\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 123213213249,\r\n                TimerValue: \"01:30:00\"\r\n            }, {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 12323123512410,\r\n                TimerValue: \"03:20:00\"\r\n            }]\r\n        }]\r\n    },\r\n        { BlockInfo: {\r\n            BlockCreatedDate: \"Wed,September 26\",\r\n            SummaryStatus: \"warning\",\r\n            SummaryTime: \"06:05:00\",\r\n            id: 3\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"danger\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:00:00\",\r\n            id: 4445534523412411\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:15:00\",\r\n            id: 2131241241251212\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            IsNesting: true,\r\n            TimerValue: \"03:50:00\",\r\n            id: 21312412551413,\r\n            NestingItems: [{\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 1232132132414,\r\n                TimerValue: \"01:30:00\"\r\n            }, {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 12323123512415,\r\n                TimerValue: \"03:20:00\"\r\n            }]\r\n        }]\r\n    },\r\n        {BlockInfo: {\r\n            BlockCreatedDate: \"Wed,September 25\",\r\n            SummaryStatus: \"warning\",\r\n            SummaryTime: \"06:05:00\",\r\n            id: 4\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"danger\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:00:00\",\r\n            id: 4445534523412416\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:15:00\",\r\n            id: 2131241241251217\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            IsNesting: true,\r\n            TimerValue: \"03:50:00\",\r\n            id: 21312412551418,\r\n            NestingItems: [{\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 1232132132419,\r\n                TimerValue: \"01:30:00\"\r\n            }, {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 12323123512420,\r\n                TimerValue: \"03:20:00\"\r\n            }]\r\n        }]\r\n    }, {\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Tue,September 24\",\r\n            SummaryStatus: \"ok\",\r\n            SummaryTime: \"08:00:00\",\r\n            id: 5\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:00:00\",\r\n            id: 31232175895321\r\n        },\r\n            {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Meeting with QA\",\r\n                status: \"ok\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:15:00\",\r\n                id: 76967845623522\r\n            }, {\r\n                StartTime: \"11:00\",\r\n                EndTime: \"13:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                IsNesting: false,\r\n                TimerValue: \"03:50:00\",\r\n                id: 12312434256623\r\n            }\r\n        ]\r\n    }] as Array<TWorklogBlock>,\r\n    PlayingWorklog: {} as TWorkLog,\r\n    FavoritesWorklogs : [] as Array<TWorkLog>,\r\n    WorklogToChange : undefined as TWorkLog | undefined\r\n}\r\n\r\nexport const SearchWorklogBlock = (MonthName : string, DayNumber : number) : Element| null=>{\r\n    let StateCopy : DefaultWorklogsState = JSON.parse(JSON.stringify(DefaultState))\r\n    let WorklogsBlockToBeScrolled : HTMLElement | null = null\r\n    StateCopy.WorkLogsBlocks.map(el => {\r\n        let [Month,Day] =  [...el.BlockInfo.BlockCreatedDate?.split(\",\")[1].split(\" \")]\r\n\r\n        if(Month === MonthName && Number.parseInt(Day) === DayNumber){\r\n             WorklogsBlockToBeScrolled =   document.getElementById(el.BlockInfo.id.toString())\r\n        }\r\n    })\r\n    return WorklogsBlockToBeScrolled\r\n}\r\n\r\n\r\ntype  DefaultWorklogsState = typeof DefaultState\r\n\r\n\r\ntype TWorklogsReducerActions = ReturnType<TAddWorklog> | ReturnType<TDeleteWorklog>\r\n    | ReturnType<TSetIsPlayingWorklogById> | ReturnType<TChangeWorklog> \r\n    | ReturnType<TSetWorklogToChange> | ReturnType<TAddToFavorite>\r\ntype TWorklogsThunks = ThunkAction<Promise<void>, GlobalState, unknown, TWorklogsReducerActions>\r\n\r\nconst WorklogsReducer = (state = DefaultState, action: TWorklogsReducerActions): DefaultWorklogsState => {\r\n\r\n    const GetWorklogsBlockCopy = () => {\r\n        return JSON.parse(JSON.stringify(state.WorkLogsBlocks))\r\n    }\r\n\r\n\r\n    const FindWorklogById = (id : number | undefined,IsNesting? : boolean,ParentId? : number | null) =>{\r\n        let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n        let SoughtWorklog  = {} as TWorkLog\r\n        let WorklogBlockIndex  = undefined as number | undefined\r\n        let WorklogIndex = undefined  as number | undefined\r\n        let NestingWorklogIndex = undefined  as number | undefined\r\n\r\n        WorklogsBlocksCopy.map((WorklogBlock,Index) => {\r\n            WorklogBlock.Worklogs.map((Worklog, WLIndex) => {\r\n\r\n                if (IsNesting) {\r\n                    Worklog.NestingItems?.map((NestingItem, NestingIndex) => {\r\n                        if (NestingItem.id === id) {\r\n                            let SoughtNestingItem = {\r\n                                ...NestingItem,\r\n                                    ParentId\r\n                            }\r\n                            //@ts-ignore\r\n                            SoughtWorklog = SoughtNestingItem\r\n                            WorklogBlockIndex = Index\r\n                            NestingWorklogIndex = NestingIndex\r\n                            WorklogIndex = WLIndex\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (Worklog.id === id) {\r\n                        WorklogBlockIndex = Index\r\n                        SoughtWorklog = Worklog\r\n                        WorklogIndex = WLIndex\r\n                    }\r\n                }\r\n             })\r\n           })\r\n        return {SoughtWorklog,WorklogBlockIndex,WorklogIndex,NestingWorklogIndex}\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_WORKLOG: {\r\n\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n\r\n            let WorklogToCreate : TWorkLog\r\n            let EmptyWorklog : TWorkLog = {\r\n                StartTime :  null,\r\n                EndTime : null,\r\n                id : randomInteger(0,10000),\r\n                NestingItems : undefined,\r\n                TaskField : null,\r\n                Issue : undefined,\r\n                TimerValue : \"00:00:00\",\r\n                JiraCode : \"JRM-310\",\r\n                status : \"\",\r\n                IsNesting : false,\r\n                ParentId : undefined\r\n            }\r\n\r\n            action.NewWorklog\r\n                ? WorklogToCreate = action.NewWorklog\r\n                : WorklogToCreate = EmptyWorklog\r\n\r\n            if (action.to) {\r\n                WorklogsBlocksCopy.map(el => {\r\n                    if (el.BlockInfo.BlockCreatedDate === action.to) {\r\n                        el.Worklogs.unshift(WorklogToCreate)\r\n\r\n                    }\r\n                })\r\n            } else {\r\n                WorklogsBlocksCopy[0].Worklogs.unshift(WorklogToCreate)\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                PlayingWorklog: WorklogToCreate\r\n            }\r\n        }\r\n\r\n        case SET_IS_PLAYING_WORKLOG_BY_ID: {\r\n            let SoughtWorklog = FindWorklogById(action.ElementId,action.IsNesting,action.ParentId).SoughtWorklog\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                PlayingWorklog: action.IsPlaying ?\r\n                    SoughtWorklog\r\n                    : {}\r\n            }\r\n        }\r\n        case CHANGE_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n                if (action.NewWlIsNesting) {\r\n                    if (Worklog.id === action.NewWlParentId) {\r\n                        Worklog.NestingItems?.map(NestingItem => {\r\n                            if (NestingItem.id === action.WorkLogId) {\r\n                                NestingItem.TimerValue = action.NewWorklog.TimerValue\r\n                                NestingItem.Issue = action.NewWorklog.Issue\r\n                                NestingItem.TaskField = action.NewWorklog.TaskField\r\n                                NestingItem.EndTime = action.NewWorklog.EndTime\r\n                                NestingItem.StartTime = action.NewWorklog.StartTime\r\n                                //  NestingItem.EndTime = action.NewWorklog.EndTime\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (Worklog.id === action.WorkLogId) {\r\n                        Worklog.TimerValue = action.NewWorklog.TimerValue\r\n                        Worklog.Issue = action.NewWorklog.Issue\r\n                        Worklog.TaskField = action.NewWorklog.TaskField\r\n                        Worklog.StartTime  = action.NewWorklog.StartTime\r\n                        Worklog.EndTime = action.NewWorklog.EndTime\r\n                        Worklog.status = action.NewWorklog.status\r\n\r\n                        // Worklog.EndTime = action.NewWorklog.EndTime\r\n                    }\r\n                }\r\n            }))\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DEL_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let NewWorklogs: Array<Array<TWorkLog>> = []\r\n            let NewNestingWorklogs: Array<Array<TNestingItem> | undefined> = []\r\n\r\n            WorklogsBlocksCopy.map((el, index) => {\r\n                if (action.DelParentId) {\r\n                    el.Worklogs.map((Worklog, WLIndex) => {\r\n                        if (Worklog.id === action.DelParentId) {\r\n                            NewNestingWorklogs.push(Worklog.NestingItems?.filter(NestingItem => NestingItem.id !== action.DelWorklogId))\r\n                            WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems = NewNestingWorklogs[index]\r\n\r\n                            /* Worklog.NestingItems?.map((NestingItem, NestingIndex) => {\r\n                                 if(  NestingItem.id === action.DelWorklogId){\r\n\r\n                                     //@ts-ignore fix this in the next time\r\n                                     WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems[NestingIndex]\r\n                                 }\r\n                             })*/\r\n                        }\r\n                    })\r\n                } else {\r\n                    NewWorklogs.push(el.Worklogs.filter(WL => WL.id !== action.DelWorklogId))\r\n                    WorklogsBlocksCopy[index].Worklogs = NewWorklogs[index]\r\n                }\r\n\r\n            })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case SET_WORKLOG_TO_CHANGE : {\r\n            return {\r\n                ...state,\r\n                WorklogToChange: action.WorklogToChange ? action.WorklogToChange : undefined\r\n            }\r\n        }\r\n        case ADD_TO_FAVORITE : {\r\n\r\n           let {SoughtWorklog,...Indexes} = FindWorklogById(action.WorklogId,action.IsNesting,action.ParentId)\r\n            return {\r\n                ...state,\r\n                FavoritesWorklogs: [...state.FavoritesWorklogs,SoughtWorklog]\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddWorklog = (NewWorklog ? : TWorkLog, to?: string) => {\r\n\r\n    return {type: ADD_WORKLOG, NewWorklog, to} as const\r\n}\r\nexport type TAddWorklog = typeof AddWorklog\r\n\r\nexport const DeleteWorklog = (DelWorklogId: number, DelParentId: number | null = null) => {\r\n    return {type: DEL_WORKLOG, DelWorklogId, DelParentId} as const\r\n}\r\nexport type TDeleteWorklog = typeof DeleteWorklog\r\n\r\nexport const SetIsPlayingWorklogById = (IsPlaying: boolean, ElementId? : number, IsNesting = false, ParentId: number | null = null) => {\r\n    return {type: SET_IS_PLAYING_WORKLOG_BY_ID, IsPlaying, ElementId, IsNesting, ParentId} as const\r\n}\r\nexport type TSetIsPlayingWorklogById = typeof SetIsPlayingWorklogById\r\n\r\nexport const ChangeWorklog = (WorkLogId: number, NewWorklog: TWorkLog, NewWlIsNesting = false, NewWlParentId: number | null = null) => {\r\n\r\n    return {type: CHANGE_WORKLOG, WorkLogId, NewWorklog, NewWlIsNesting, NewWlParentId} as const\r\n}\r\nexport type TChangeWorklog = typeof ChangeWorklog\r\n\r\nexport const SetWorklogToChange = (WorklogToChange : TWorkLog | undefined = undefined ) => {\r\n    return{type : SET_WORKLOG_TO_CHANGE, WorklogToChange} as const\r\n}\r\nexport type TSetWorklogToChange = typeof SetWorklogToChange\r\n\r\nexport const AddToFavorite = (WorklogId : number,IsNesting = false, ParentId: number | null = null) =>{\r\n    return{type : ADD_TO_FAVORITE, WorklogId,IsNesting,ParentId }  as const\r\n}\r\nexport type TAddToFavorite = typeof AddToFavorite\r\n\r\n\r\nexport const SendWorklogBlockThunk = (WorklogBlockData : TSendWorklogsData): TWorklogsThunks => async (dispatch) => {\r\n    console.log(WorklogBlockData)\r\n    const SendNewMessageResult = await API.SendWorklogBlock(WorklogBlockData)\r\n    // if (SendNewMessageResult.resultCode === 0) {\r\n    //     dispatch(GetWorklogs(WorklogBlockId))\r\n    // }\r\n}\r\nexport type TSendWorklogBlockThunk = typeof SendWorklogBlockThunk\r\n\r\nexport default WorklogsReducer","export const DifferenceInTime = (TimesArr = []) => {\r\n    let firstDate = TimesArr[0];\r\n    let secondDate = TimesArr[1];\r\n    let getDate = (string) => new Date(0, 0, 0, string.split(':')[0], string.split(':')[1]);\r\n    let different = (getDate(secondDate) - getDate(firstDate));\r\n    let differentRes, hours, minuts;\r\n    if (different > 0) {\r\n        differentRes = different;\r\n        hours = Math.floor((differentRes % 86400000) / 3600000);\r\n        minuts = Math.round(((differentRes % 86400000) % 3600000) / 60000);\r\n    } else {\r\n        differentRes = Math.abs((getDate(firstDate) - getDate(secondDate)));\r\n        hours = Math.floor(24 - (differentRes % 86400000) / 3600000);\r\n        minuts = Math.round(60 - ((differentRes % 86400000) % 3600000) / 60000);\r\n    }\r\n    if(minuts < 10 ){\r\n        minuts =  minuts + \"0\"\r\n    }\r\n    if (hours < 10) {\r\n        return \"0\" + hours + ':' + minuts + \":00\";\r\n    } else {\r\n        return hours + ':' + minuts + \":00\";\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport LS from \"./LineStroke.module.css\"\r\n\r\nexport type TAllProps = {\r\n\r\n}\r\n\r\nconst LineStroke : React.FC<TAllProps> = (props) => {\r\n    return ( <div className={LS.lineStroke}> </div>)\r\n}\r\n\r\nexport default LineStroke","import React, {Dispatch} from \"react\";\r\nimport WLDD from \"./WorklogDropDown.module.css\"\r\nimport {randomInteger, TAddToFavorite, TAddWorklog, TNestingItem, TWorkLog} from \"../../../Data/WorkLogsReducer\";\r\nimport {TComponentToDraw} from \"../WorkLogsContainer\";\r\n\r\nexport type TWorklogDropDownProps = {\r\n    onHideMenu : ()=> void\r\n    OnDeleteModalOpen : (e : React.MouseEvent<HTMLElement>)=> void\r\n    SetDeleteModalParams : Dispatch<any>\r\n    ParentId ? : number\r\n    PlayingWorklog: TWorkLog\r\n    AddToFavorite : TAddToFavorite\r\n    WorklogId : number\r\n    FavoritesWorklogs : Array<TWorkLog>\r\n    ComponentToDraw : TComponentToDraw\r\n    AddWorklog : TAddWorklog\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue: string | null\r\n    IsNesting?: boolean\r\n    Issue?: string\r\n    NestingItems?: Array<TNestingItem>\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    NestingIsShowing: boolean\r\n}\r\n\r\nconst WorkLogDropDown: React.FC<TWorklogDropDownProps> = (props) => {\r\n\r\n    const OnDeleteModalOpenContainer = (e : React.MouseEvent<HTMLElement>)=>{\r\n        if(!props.PlayingWorklog.id && props.ComponentToDraw === \"Worklogs\"){\r\n            props.SetDeleteModalParams({\r\n                WorkLogToDeleteId : props.WorklogId,\r\n                ParentId : props.ParentId\r\n            })\r\n\r\n            props.OnDeleteModalOpen(e)\r\n        }\r\n    }\r\n    const OnAddToFavorites = () =>{\r\n        if(!props.PlayingWorklog.id && props.ComponentToDraw === \"Worklogs\"\r\n            && props.FavoritesWorklogs.every(el=> el.id !== props.WorklogId)){\r\n            if(props.ParentId)  props.AddToFavorite(props.WorklogId,true,props.ParentId)\r\n            else props.AddToFavorite(props.WorklogId)\r\n        }\r\n\r\n    }\r\n\r\n    const OnDuplicateWorklog = () =>{\r\n   if(!props.PlayingWorklog.id && props.ComponentToDraw === \"Worklogs\" ) {\r\n            let CurrentWorklog : TWorkLog = {\r\n                id: randomInteger(0, 10000),\r\n                TaskField: props.TaskField,\r\n                Issue: props.Issue,\r\n                StartTime: props.StartTime,\r\n                EndTime: props.EndTime,\r\n                NestingItems: props.NestingItems,\r\n                JiraCode: props.JiraCode,\r\n                IsNesting: props.IsNesting,\r\n                status: props.status,\r\n                TimerValue: \"00:00:00\"\r\n            }\r\n            props.AddWorklog(CurrentWorklog)\r\n        }\r\n    }\r\n\r\n\r\n    return (<div onMouseLeave={props.onHideMenu} className={WLDD.Container}>\r\n        <div onClick={props.onHideMenu} className={WLDD.ContentContainer}>\r\n            <div className={WLDD.ContainerFirstEl}>\r\n                Jira Code\r\n            </div>\r\n            <div onClick={OnDuplicateWorklog} className={WLDD.ContainerEl}>\r\n                Duplicate\r\n            </div>\r\n            <div onClick={OnAddToFavorites} className={WLDD.ContainerEl}>\r\n                Add to Favorite\r\n            </div>\r\n            <div onClick={OnDeleteModalOpenContainer} className={WLDD.ContainerEl}>\r\n                Delete\r\n            </div>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\nexport default WorkLogDropDown","import React, {useState} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport PlayButton from \"../../assets/imgs/play-button.svg\"\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport LineStroke from \"../LineStroke/LineStroke\";\r\nimport WLMoreButton from \"../../assets/imgs/active-issue-more-button.svg\"\r\nimport CP_danger from \"../../assets/imgs/danger_cp.svg\"\r\nimport CP_warning from \"../../assets/imgs/warning_cp.svg\"\r\nimport CP_ok from \"../../assets/imgs/ok_cp.svg\"\r\nimport WorkLogDropDown from \"./DropDown/WorklogDropDown\";\r\nimport StopButton from \"../../assets/imgs/stop_button.svg\"\r\nimport {\r\n    TAddToFavorite,\r\n    TAddWorklog, TNestingItem,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogToChange,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport {TComponentToDraw} from \"./WorkLogsContainer\";\r\n\r\n\r\nexport type TNestingWorkLogProps = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue: string | null\r\n    Issue? : string\r\n    NestingItems?: Array<TNestingItem>\r\n    NestingIsShowing: boolean\r\n    IsNesting?: boolean\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    id: number\r\n    ParentId?: number\r\n    SetDeleteModalParams: any\r\n    OnDeleteModalOpen: (e: React.MouseEvent<HTMLElement>) => void\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    openWorklogChangeModal: () => void\r\n    AddToFavorite: TAddToFavorite\r\n    FavoritesWorklogs : Array<TWorkLog>\r\n    ComponentToDraw : TComponentToDraw\r\n    AddWorklog : TAddWorklog\r\n}\r\n\r\nconst NestingWorkLog: React.FC<TNestingWorkLogProps> = (props) => {\r\n\r\n    let [ShowMenu, SetShowMenu] = useState<boolean>()\r\n\r\n    const OnShowMenu = () => {\r\n        SetShowMenu(true)\r\n    }\r\n    const OnHideMenu = () => {\r\n        SetShowMenu(false)\r\n    }\r\n\r\n    const onPlayButtonClicked = () => {\r\n\r\n        !props.PlayingWorklog.id && props.SetIsPlayingWorklogById(true, props.id, true, props.ParentId)\r\n\r\n    }\r\n    const onStopButtonClicked = () => {\r\n        props.SetIsPlayingWorklogById(false, props.id)\r\n    }\r\n\r\n    const OnSetWorklogToChange = () => {\r\n        if (!props.PlayingWorklog.id) {\r\n            let keys = [\"id\", \"StartTime\", \"TaskField\", \"TimerValue\", \"EndTime\"\r\n                , \"status\", \"IsNesting\", \"JiraCode\", \"NestingItems\", \"Issue\", \"ParentId\"]\r\n            let WorklogToChange = {} as TWorkLog\r\n            for (let i = 0; i < keys.length; i++) {\r\n                //@ts-ignore\r\n                WorklogToChange[`${(keys[i])}`] = props[keys[i]]\r\n            }\r\n            props.SetWorklogToChange(WorklogToChange)\r\n            props.openWorklogChangeModal()\r\n        }\r\n    }\r\n\r\n    return (<div className={WLS.WorkLogs}>\r\n        <div className={props.PlayingWorklog.id === props.id\r\n            ? WLS.WorklogBlockContainerActive\r\n            : WLS.WorklogBlockContainer}\r\n        >\r\n\r\n            <div className={WLS.WorklogBlock}>\r\n\r\n                <div className={WLS.WorkTime}>\r\n                    <div className={WLS.StartTime}>\r\n                        {props.StartTime}\r\n                    </div>\r\n                    <div className={WLS.Minus}>\r\n                        -\r\n                    </div>\r\n                    <div className={WLS.EndTime}>\r\n                        {props.EndTime}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={props.PlayingWorklog.id === props.id\r\n                    ? WLS.ColorPointPoseActive\r\n                    : WLS.ColorPointPose}>\r\n                    <img src={props.status === \"ok\"\r\n                        ? CP_ok : props.status === \"warning\"\r\n                            ? CP_warning : props.status === \"danger\"\r\n                                ? CP_danger : undefined} alt=\"\"/>\r\n                </div>\r\n\r\n                <div onClick={OnSetWorklogToChange} className={WLS.WorklogContentContainer}>\r\n                    <div className={WLS.JiraCode}>\r\n                        {props.JiraCode}\r\n                    </div>\r\n                    <div className={WLS.TaskField}>\r\n                        {props.TaskField}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={WLS.TimerValueContainer}>\r\n                    <div className={WLS.TimerValue}> {props.TimerValue}</div>\r\n                </div>\r\n\r\n                {props.PlayingWorklog.id && props.PlayingWorklog.id === props.id\r\n                    ? <div className={WLS.ControlButtonsContainer}>\r\n\r\n                        <div onClick={onStopButtonClicked} className={WLS.StopButton}>\r\n                            <img src={StopButton} alt=\"stop-button\"/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    : <div className={WLS.ControlButtonsContainer}>\r\n\r\n                        <div onClick={onPlayButtonClicked} className={WLS.PlayButton}>\r\n                            <img src={PlayButton} alt=\"play-button\"/>\r\n                        </div>\r\n\r\n                    </div>}\r\n\r\n                <div onClick={OnShowMenu} className={props.PlayingWorklog.id === props.id\r\n                    ? WLS.WLInfoButtonActive\r\n                    : WLS.WLInfoButton}>\r\n                    <img src={WLMoreButton} alt=\"\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={props.PlayingWorklog.id === props.id\r\n                ? WLS.WLlinestrokeActive\r\n                : WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        {ShowMenu && <WorkLogDropDown ParentId={props.ParentId}\r\n                                      SetDeleteModalParams={props.SetDeleteModalParams}\r\n                                      PlayingWorklog={props.PlayingWorklog}\r\n                                      WorklogId={props.id}\r\n                                      OnDeleteModalOpen={props.OnDeleteModalOpen} onHideMenu={OnHideMenu}\r\n                                      AddToFavorite={props.AddToFavorite}\r\n                                      FavoritesWorklogs={props.FavoritesWorklogs}\r\n                                      ComponentToDraw={props.ComponentToDraw}\r\n                                      AddWorklog={props.AddWorklog}\r\n                                      TimerValue={props.TimerValue}\r\n                                      NestingIsShowing={props.NestingIsShowing}\r\n                                      TaskField={props.TaskField}\r\n                                      JiraCode={props.JiraCode}\r\n                                      EndTime={props.EndTime}\r\n                                      StartTime={props.StartTime}\r\n                                      status={props.status}\r\n                                      Issue={props.Issue}\r\n                                      IsNesting={props.IsNesting}\r\n                                      NestingItems={props.NestingItems}\r\n        />}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default NestingWorkLog","import React, {SyntheticEvent, useState} from \"react\";\r\nimport DS from \"./DeleteConfirm.module.css\"\r\nimport ConfirmButton from \"../../assets/imgs/confirmButton.svg\"\r\nimport DeclineButton from \"../../assets/imgs/declineButton.svg\"\r\nimport MS from \"../ModalWindow/ModalWindow.module.css\";\r\nimport {TDeleteWorklog} from \"../../Data/WorkLogsReducer\";\r\nimport {TDeleteModalParams} from \"../WorkLogs/WorkLogsBlock\";\r\n\r\n\r\nexport type TDeleteWorklogConfirmModalProps = {\r\n  isOpen : boolean\r\n    onClose: ()=> void\r\n    WorkLogToDeleteId : number\r\n    DeleteWorklog : TDeleteWorklog\r\n    DeleteModalParams : TDeleteModalParams | undefined\r\n}\r\n\r\nconst DeleteWorklogConfirmModal : React.FC<TDeleteWorklogConfirmModalProps> = (props) => {\r\n    const OnModalSubmit = (e: React.MouseEvent<HTMLElement>) => {\r\n        if(props.DeleteModalParams)\r\n        props.DeleteWorklog(props.DeleteModalParams.WorkLogToDeleteId,props.DeleteModalParams.ParentId)\r\n        props.onClose()\r\n        debugger\r\n    }\r\n        if (!props.isOpen) return null\r\n\r\n        return (\r\n            <div className=\"DeleteConfirmModal\">\r\n                <div className={DS.modal}>\r\n                    <div className={DS.ModalTextContainer}>\r\n                        Are you sure you want to delete the worklog?\r\n                    </div>\r\n                    <div className={DS.NewWorklogControlButtonsContainer}>\r\n                        <div className={DS.NewWorklogControlButtons}>\r\n                            <div onClick={OnModalSubmit} className=\"modal-open\">\r\n                                <img className={DS.NewWorklogSubmitButtonSize}\r\n                                     src={ConfirmButton} alt={\"submit\"}/>\r\n                            </div>\r\n                            <div className=\"modal-close\">\r\n                                <img onClick={props.onClose} className={DS.NewWorklogControlButton}\r\n                                     src={DeclineButton} alt={\"decline\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={MS.bg} onClick={e => props.onClose}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default DeleteWorklogConfirmModal\r\n\r\n","import React, {Dispatch, useState} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport PlayButton from \"../../assets/imgs/play-button.svg\"\r\nimport LineStroke from \"../LineStroke/LineStroke\";\r\nimport WLMoreButton from \"../../assets/imgs/active-issue-more-button.svg\"\r\nimport CP_danger from \"../../assets/imgs/danger_cp.svg\"\r\nimport CP_warning from \"../../assets/imgs/warning_cp.svg\"\r\nimport CP_ok from \"../../assets/imgs/ok_cp.svg\"\r\nimport {\r\n    TSetIsPlayingWorklogById,\r\n    TNestingItem,\r\n    TWorkLog,\r\n    TDeleteWorklog,\r\n    TSetWorklogToChange, TTimerData, TAddToFavorite, TAddWorklog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport ArrowUp from \"../../assets/imgs/arrow-up.svg\"\r\nimport {DifferenceInTime} from \"../../assets/secondary/DifferenceInTime\";\r\nimport WorkLogDropDown from \"./DropDown/WorklogDropDown\";\r\nimport StopButton from \"../../assets/imgs/stop_button.svg\"\r\nimport NestingWorkLog from \"./NestingWorkLog\";\r\nimport DeleteWorklogConfirmModal from \"../DeleteConfirmModal/DeleteConfirmModal\";\r\nimport {TDeleteModalParams} from \"./WorkLogsBlock\";\r\nimport {TComponentToDraw} from \"./WorkLogsContainer\";\r\n\r\n\r\nexport type TWorklogProps = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue: string | null\r\n    IsNesting?: boolean\r\n    Issue?: string\r\n    NestingItems?: Array<TNestingItem>\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    NestingIsShowing: boolean\r\n    OnHideNestingWorklogs: () => void\r\n    OnShowNestingWorklogs: () => void\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    id: number\r\n    OnDeleteModalOpen: (e: React.MouseEvent<HTMLElement>) => void\r\n    OnDeleteModalClose: () => void\r\n    DeleteModalIsOpen: boolean\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetDeleteModalParams: Dispatch<any>\r\n    DeleteModalParams: TDeleteModalParams | undefined\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    ParentId?: number\r\n    openWorklogChangeModal: () => void\r\n    TimerData: TTimerData | undefined\r\n    AddToFavorite : TAddToFavorite\r\n    FavoritesWorklogs : Array<TWorkLog>\r\n    ComponentToDraw : TComponentToDraw\r\n    AddWorklog : TAddWorklog\r\n}\r\n\r\nconst WorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    let [ShowMenu, SetShowMenu] = useState<boolean>()\r\n\r\n    const OnShowMenu = () => {\r\n        SetShowMenu(true)\r\n    }\r\n    const OnHideMenu = () => {\r\n        SetShowMenu(false)\r\n    }\r\n\r\n    const onPlayButtonClicked = () => {\r\n        !props.PlayingWorklog.id && props.SetIsPlayingWorklogById(true, props.id)\r\n\r\n    }\r\n    const onStopButtonClicked = () => {\r\n        props.SetIsPlayingWorklogById(false, props.id)\r\n        // add onOpenModal\r\n    }\r\n\r\n    const OnSetWorklogToChange = () => {\r\n        if (!props.PlayingWorklog.id) {\r\n            let keys = [\"id\", \"StartTime\", \"TaskField\", \"TimerValue\", \"EndTime\"\r\n                , \"status\", \"IsNesting\", \"JiraCode\", \"NestingItems\", \"Issue\", \"ParentId\"]\r\n            let WorklogToChange = {} as TWorkLog\r\n            for (let i = 0; i < keys.length; i++) {\r\n                //@ts-ignore\r\n                WorklogToChange[`${(keys[i])}`] = props[keys[i]]\r\n            }\r\n            props.SetWorklogToChange(WorklogToChange)\r\n            props.openWorklogChangeModal()\r\n        }\r\n    }\r\n\r\n    return (<div className={WLS.WorkLogs}>\r\n        <div className={props.id === props.PlayingWorklog.id\r\n            ? WLS.WorklogBlockContainerActive\r\n            : WLS.WorklogBlockContainer}>\r\n            <div className={WLS.WorklogBlock}>\r\n\r\n                {props.IsNesting\r\n                    ? <div className={WLS.NestingButtonPose}>\r\n                        {props.NestingIsShowing\r\n                            ? <div onClick={props.OnHideNestingWorklogs} className={WLS.NestingBG}><img\r\n                                className={WLS.TwwContentImg} src={ArrowUp} alt=\"\"/>\r\n                            </div>\r\n\r\n                            : <div onClick={props.OnShowNestingWorklogs} className={WLS.NestingBG}> <span\r\n                                className={WLS.TwwContentText}>\r\n                                {props.NestingItems?.length}\r\n                            </span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    : props.StartTime && props.EndTime ? <div className={WLS.WorkTime}>\r\n                            <div className={WLS.StartTime}>\r\n                                {props.StartTime}\r\n                            </div>\r\n                            <div className={WLS.Minus}>\r\n                                -\r\n                            </div>\r\n                            <div className={WLS.EndTime}>\r\n                                {props.EndTime}\r\n                            </div>\r\n                        </div>\r\n                        : <div></div>}\r\n\r\n                <div className={props.PlayingWorklog.id === props.id\r\n                    ? WLS.ColorPointPoseActive\r\n                    : WLS.ColorPointPose}>\r\n                    <img src={props.status === \"ok\"\r\n                        ? CP_ok : props.status === \"warning\"\r\n                            ? CP_warning : props.status === \"danger\"\r\n                                ? CP_danger : undefined} alt=\"\"\r\n                    />\r\n                </div>\r\n\r\n                <div onClick={OnSetWorklogToChange} className={WLS.WorklogContentContainer}>\r\n                    <div className={WLS.JiraCode}>\r\n                        {props.JiraCode}\r\n                    </div>\r\n                    <div className={WLS.TaskField}>\r\n                        {props.TaskField}\r\n                    </div>\r\n                </div>\r\n\r\n                {/*   <div className={WLS.ProgressBarContainer}>\r\n                    <ProgressBar status={props.status}/>\r\n                </div>*/}\r\n\r\n                <div className={WLS.TimerValueContainer}>\r\n                    <div className={WLS.TimerValue}>{props.TimerValue}</div>\r\n                </div>\r\n\r\n                {props.PlayingWorklog.id === props.id\r\n\r\n                    ? <div className={WLS.ControlButtonsContainer}>\r\n                        <div onClick={onStopButtonClicked} className={WLS.StopButton}>\r\n                            <img src={StopButton} alt=\"stop-button\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    : <div className={WLS.ControlButtonsContainer}>\r\n                        <div onClick={onPlayButtonClicked} className={WLS.PlayButton}>\r\n                            <img src={PlayButton} alt=\"play-button\"/>\r\n                        </div>\r\n                    </div>}\r\n\r\n                <div onClick={OnShowMenu} className={props.PlayingWorklog.id === props.id\r\n                    ? WLS.WLInfoButtonActive\r\n                    : WLS.WLInfoButton}>\r\n                    <img src={WLMoreButton} alt=\"\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <DeleteWorklogConfirmModal DeleteModalParams={props.DeleteModalParams} DeleteWorklog={props.DeleteWorklog}\r\n                                       WorkLogToDeleteId={props.id} isOpen={props.DeleteModalIsOpen}\r\n                                       onClose={props.OnDeleteModalClose}/>\r\n\r\n            <div className={props.PlayingWorklog.id === props.id\r\n                ? WLS.WLlinestrokeActive\r\n                : WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </div>\r\n        {ShowMenu && <WorkLogDropDown ParentId={props.ParentId}\r\n                                      SetDeleteModalParams={props.SetDeleteModalParams}\r\n                                      PlayingWorklog={props.PlayingWorklog}\r\n                                      WorklogId={props.id}\r\n                                      OnDeleteModalOpen={props.OnDeleteModalOpen} onHideMenu={OnHideMenu}\r\n                                      AddToFavorite={props.AddToFavorite}\r\n                                      FavoritesWorklogs={props.FavoritesWorklogs}\r\n                                      ComponentToDraw={props.ComponentToDraw}\r\n                                      AddWorklog={props.AddWorklog}\r\n                                      TimerValue={props.TimerValue}\r\n                                      NestingIsShowing={props.NestingIsShowing}\r\n                                      TaskField={props.TaskField}\r\n                                      JiraCode={props.JiraCode}\r\n                                      EndTime={props.EndTime}\r\n                                      StartTime={props.StartTime}\r\n                                      status={props.status}\r\n                                      Issue={props.Issue}\r\n                                      IsNesting={props.IsNesting}\r\n                                      NestingItems={props.NestingItems}\r\n        />}\r\n        {/*fix duplicating */}\r\n        {props.NestingIsShowing && props.NestingItems?.map(el => {\r\n\r\n            return <NestingWorkLog\r\n                ComponentToDraw={props.ComponentToDraw}\r\n                FavoritesWorklogs={props.FavoritesWorklogs}\r\n                AddToFavorite={props.AddToFavorite}\r\n                openWorklogChangeModal={props.openWorklogChangeModal}\r\n                PlayingWorklog={props.PlayingWorklog}\r\n                SetWorklogToChange={props.SetWorklogToChange}\r\n                OnDeleteModalOpen={props.OnDeleteModalOpen}\r\n                SetDeleteModalParams={props.SetDeleteModalParams}\r\n                SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\r\n                ParentId={props.id}\r\n                AddWorklog={props.AddWorklog}\r\n                NestingIsShowing={props.NestingIsShowing}\r\n                {...el}\r\n                key={el.id}\r\n                TimerValue={el.TimerValue\r\n                    ? el.TimerValue\r\n                    : el.StartTime && el.EndTime ? DifferenceInTime([el.StartTime, el.EndTime])\r\n                        : null}\r\n\r\n            />\r\n        })}\r\n    </div>)\r\n}\r\n\r\nexport default WorkLog","import React from \"react\";\r\n//@ts-ignore\r\nimport {Progress} from 'bootstrap-4-react';\r\n\r\nexport type TProgressBarProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | string\r\n}\r\n\r\nconst ProgressBar: React.FC<TProgressBarProps> = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Progress  style={{ width: \"100px\", height: \"8px\", borderRadius : \"20px\"}} >\r\n                <Progress.Bar  min=\"0\" max=\"100\" now={props.status === \"ok\" ?\r\n                    \"90\" : props.status === \"warning\"\r\n                        ? \"50\" : props.status === \"danger\"\r\n                            ? \"25\" : null}\r\n\r\n                              bg={props.status === \"ok\" ?\r\n                                  \"success\" : props.status === \"warning\"\r\n                                      ? \"warning\" : props.status === \"danger\"\r\n                                          ? \"danger\" : null}/>\r\n            </Progress>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from \"react\";\r\nimport FS from \"./WorklogInfo.module.css\"\r\nimport DownloadIcon from \"../../../assets/imgs/download.svg\"\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport LineStroke from \"../../LineStroke/LineStroke\";\r\nimport {TBlockInfo, TSendWorklogBlockThunk, TSendWorklogsData, TWorkLog} from \"../../../Data/WorkLogsReducer\";\r\n\r\nexport type TWorklogInfoProps ={\r\n    DateOfCreation : string | null\r\n    SummaryTime : string | null\r\n    SummaryStatus : \"ok\" | \"danger\" | \"warning\"  | string\r\n    BlockInfo : TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n    SendWorklogBlockThunk : TSendWorklogBlockThunk\r\n    FavoritesWorklogs : Array<TWorkLog>\r\n}\r\n\r\nconst WorklogInfo : React.FC<TWorklogInfoProps> = (props ) => {\r\n\r\n    const OnSendWorklogData = () => {\r\n        let ObjToSend : TSendWorklogsData = {\r\n            FavoritesWorklogs: props.FavoritesWorklogs,\r\n            WorkLogsBlocks : {\r\n                BlockInfo :  props.BlockInfo,\r\n                Worklogs : props.Worklogs\r\n            }\r\n        }\r\n        props.SendWorklogBlockThunk(ObjToSend)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={FS.SummaryWorklogInfo}>\r\n            <div className={FS.DateBlockContainer}>\r\n                <div className={FS.DateBlockSize}>\r\n                    {props.DateOfCreation}\r\n                </div>\r\n            </div>\r\n            <div className={FS.DateTime}>\r\n                <div>\r\n                    {props.SummaryTime}\r\n                </div>\r\n\r\n                <div className={FS.Progress}>\r\n                    <ProgressBar status={props.SummaryStatus}/>\r\n                </div>\r\n            </div>\r\n            <div onClick={OnSendWorklogData} className={FS.DownloadIcon}>\r\n                    <img src={DownloadIcon} alt=\"download-icon\"/>\r\n            </div>\r\n        </div>\r\n            <div className={FS.WLlineStrokeContainer}>\r\n               <LineStroke/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorklogInfo","import React from \"react\";\r\nimport SS from \"./WorkLogSlider.module.css\"\r\nimport TimePickerLine from \"../../../assets/imgs/separator-line.svg\"\r\n\r\nexport type TWorklogInfoProps ={\r\n\r\n}\r\n\r\nconst WorkLogTimeLine : React.FC<TWorklogInfoProps> = (props ) => {\r\n\r\n    return ( <div className=\"WorkLogTimeLine\">\r\n            <div className={SS.TimePickerLine}>\r\n                <img src={TimePickerLine} alt=\"separator-line\"/>\r\n            </div>\r\n            <div className={SS.SliderTimesContainer}>\r\n                <div className={SS.SliderTimes}>\r\n                    <div>7:00</div>\r\n                    <div>8:00</div>\r\n                    <div>9:00</div>\r\n                    <div>10:00</div>\r\n                    <div>11:00</div>\r\n                    <div>12:00</div>\r\n                    <div>13:00</div>\r\n                    <div>14:00</div>\r\n                    <div>15:00</div>\r\n                    <div>16:00</div>\r\n                    <div>17:00</div>\r\n                    <div>18:00</div>\r\n                    <div>19:00</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WorkLogTimeLine","import React, {useState} from \"react\";\r\nimport {DifferenceInTime} from \"../../assets/secondary/DifferenceInTime\";\r\nimport WorkLog from \"./WorkLog\";\r\nimport WorklogInfo from \"./WorklogInfo/WorklogInfo\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {\r\n    TAddToFavorite,\r\n    TAddWorklog,\r\n    TBlockInfo, TDeleteWorklog, TSendWorklogBlockThunk, TSetIsPlayingWorklogById, TSetWorklogToChange, TTimerData,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogTimeLine from \"./SliderTimePicker/WorkLogTimeLine\";\r\nimport {TComponentToDraw} from \"./WorkLogsContainer\";\r\n\r\n\r\nexport type TWorklogsBlockProps = {\r\n    BlockInfo?: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    openWorklogChangeModal: () => void\r\n    TimerData: TTimerData | undefined\r\n    ComponentToDraw: TComponentToDraw\r\n    FavoritesWorklogs: Array<TWorkLog>\r\n    AddToFavorite: TAddToFavorite\r\n    AddWorklog: TAddWorklog\r\n    SendWorklogBlockThunk: TSendWorklogBlockThunk\r\n}\r\n\r\nexport type TDeleteModalParams = {\r\n    ParentId?: number\r\n    WorkLogToDeleteId: number\r\n}\r\n\r\nconst WorkLogsBlock: React.FC<TWorklogsBlockProps> = (props) => {\r\n\r\n    let [NestingIsShowing, SetNestingIsShowing] = useState(false)\r\n    let [DeleteModalIsOpen, SetDeleteModalIsOpen] = useState(false)\r\n    let [DeleteModalParams, SetDeleteModalParams] = useState<TDeleteModalParams>()\r\n\r\n    const OnShowNestingWorklogs = () => {\r\n        SetNestingIsShowing(true)\r\n    }\r\n\r\n    const OnHideNestingWorklogs = () => {\r\n        SetNestingIsShowing(false)\r\n    }\r\n\r\n    const OnDeleteModalOpen = (e: React.MouseEvent<HTMLElement>) => {\r\n        SetDeleteModalIsOpen(true)\r\n    }\r\n    const OnDeleteModalClose = () => {\r\n        SetDeleteModalIsOpen(false)\r\n    }\r\n\r\n    return (<>\r\n        {props.ComponentToDraw === \"Worklogs\" && props.BlockInfo &&\r\n        <div id={(props.BlockInfo?.id).toString()} className={WLS.WorklogInfoContainer}>\r\n            <WorklogInfo DateOfCreation={props.BlockInfo.BlockCreatedDate}\r\n                         SummaryTime={props.BlockInfo.SummaryTime}\r\n                         SummaryStatus={props.BlockInfo.SummaryStatus}\r\n                         FavoritesWorklogs={props.FavoritesWorklogs}\r\n                         Worklogs={props.Worklogs}\r\n                         SendWorklogBlockThunk={props.SendWorklogBlockThunk}\r\n                         BlockInfo={props.BlockInfo}\r\n            />\r\n        </div>\r\n        }\r\n\r\n\r\n        {props[props.ComponentToDraw] && props[props.ComponentToDraw].map(el => {\r\n\r\n            return <div key={el.id} className=\"worklog\">\r\n                <WorkLog\r\n                    {...el}\r\n                    {...props}\r\n                    NestingIsShowing={NestingIsShowing}\r\n                    OnHideNestingWorklogs={OnHideNestingWorklogs}\r\n                    OnShowNestingWorklogs={OnShowNestingWorklogs}\r\n                    TimerValue={el.TimerValue\r\n                        ? el.TimerValue\r\n                        : el.StartTime && el.EndTime\r\n                            ? DifferenceInTime([el.StartTime, el.EndTime])\r\n                            : null}\r\n                    DeleteModalIsOpen={DeleteModalIsOpen}\r\n                    OnDeleteModalClose={OnDeleteModalClose}\r\n                    OnDeleteModalOpen={OnDeleteModalOpen}\r\n                    SetDeleteModalParams={SetDeleteModalParams}\r\n                    DeleteModalParams={DeleteModalParams}\r\n                    AddWorklog={props.AddWorklog}\r\n                />\r\n            </div>\r\n        })}\r\n        }\r\n        <div className={WLS.WorkLogSliderPose}>\r\n            <WorkLogTimeLine/>\r\n        </div>\r\n\r\n    </>)\r\n}\r\n\r\nexport default WorkLogsBlock","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {GlobalState} from \"../../Data/redux-store\"\r\nimport {\r\n    TWorklogBlock,\r\n    AddWorklog,\r\n    SetIsPlayingWorklogById,\r\n    DeleteWorklog, SetWorklogToChange, AddToFavorite, SendWorklogBlockThunk,\r\n    TDeleteWorklog, TAddWorklog, TSetIsPlayingWorklogById, TWorkLog,\r\n    TSetWorklogToChange, TTimerData, TAddToFavorite, TSendWorklogBlockThunk\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogsBlock from \"./WorkLogsBlock\";\r\n\r\n// import {withRouter} from 'react-router-dom'\r\n\r\nexport type TComponentToDraw = \"Worklogs\" | \"FavoritesWorklogs\"\r\n\r\nexport type TWorkLogsContainerOwnProps = {\r\n    openWorklogChangeModal: () => void\r\n    TimerData: TTimerData | undefined\r\n    ComponentToDraw: TComponentToDraw\r\n}\r\n\r\nexport type T_MSTP_WorkLogsContainer = {\r\n    WorklogsBlocks: Array<TWorklogBlock>\r\n    PlayingWorklog: TWorkLog\r\n    FavoritesWorklogs: Array<TWorkLog>\r\n}\r\n\r\nexport type T_MDTP_WorkLogsContainer = {\r\n    AddWorklog: TAddWorklog\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    AddToFavorite: TAddToFavorite\r\n    SendWorklogBlockThunk: TSendWorklogBlockThunk\r\n}\r\n\r\n\r\ntype TDialogsContainerProps = T_MDTP_WorkLogsContainer & T_MSTP_WorkLogsContainer & TWorkLogsContainerOwnProps\r\n\r\nclass WorkLogsContainer extends React.Component<TDialogsContainerProps> {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"WorklogBlockWrapper\">\r\n                {this.props.ComponentToDraw === \"Worklogs\"\r\n                    ? this.props.WorklogsBlocks.map(el => {\r\n                        return <div key={el.BlockInfo.id} className=\"Worklogs\">\r\n                            <WorkLogsBlock BlockInfo={el.BlockInfo}\r\n                                           Worklogs={el.Worklogs}\r\n                                           AddWorklog={this.props.AddWorklog}\r\n                                           SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                                           DeleteWorklog={this.props.DeleteWorklog}\r\n                                           SetWorklogToChange={this.props.SetWorklogToChange}\r\n                                           PlayingWorklog={this.props.PlayingWorklog}\r\n                                           openWorklogChangeModal={this.props.openWorklogChangeModal}\r\n                                           TimerData={this.props.TimerData}\r\n                                           ComponentToDraw={this.props.ComponentToDraw}\r\n                                           FavoritesWorklogs={this.props.FavoritesWorklogs}\r\n                                           AddToFavorite={this.props.AddToFavorite}\r\n                                           SendWorklogBlockThunk={this.props.SendWorklogBlockThunk}\r\n                            />\r\n                        </div>\r\n\r\n                    })\r\n                    :\r\n                    <div style={{paddingTop: \"52px\"}} className=\"FavoritesWorklogsWrapper\">\r\n                        <WorkLogsBlock\r\n                            Worklogs={this.props.FavoritesWorklogs}\r\n                            AddWorklog={this.props.AddWorklog}\r\n                            SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                            DeleteWorklog={this.props.DeleteWorklog}\r\n                            SetWorklogToChange={this.props.SetWorklogToChange}\r\n                            PlayingWorklog={this.props.PlayingWorklog}\r\n                            openWorklogChangeModal={this.props.openWorklogChangeModal}\r\n                            TimerData={this.props.TimerData}\r\n                            ComponentToDraw={this.props.ComponentToDraw}\r\n                            FavoritesWorklogs={this.props.FavoritesWorklogs}\r\n                            AddToFavorite={this.props.AddToFavorite}\r\n                            SendWorklogBlockThunk={this.props.SendWorklogBlockThunk}\r\n                        />\r\n                    </div>\r\n\r\n                } </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_WorkLogsContainer => ({\r\n    WorklogsBlocks: state.WorklogsData.WorkLogsBlocks,\r\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\r\n    FavoritesWorklogs: state.WorklogsData.FavoritesWorklogs\r\n})\r\n\r\nexport default compose(connect<T_MSTP_WorkLogsContainer, T_MDTP_WorkLogsContainer, TWorkLogsContainerOwnProps, GlobalState>\r\n(StateToProps, {\r\n    AddWorklog, DeleteWorklog,\r\n    SetIsPlayingWorklogById, SetWorklogToChange, AddToFavorite, SendWorklogBlockThunk\r\n}))\r\n    //@ts-ignore\r\n    (WorkLogsContainer)","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nconst options = [\r\n    'Jira link',\r\n    'Duplicate',\r\n    'Add to favorite',\r\n    'Delete',\r\n];\r\n\r\nexport default function LongMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropDownMenu\">\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"false\"\r\n\r\n                onClick={handleClick}\r\n\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        marginRight : '200px',\r\n                        marginTop : '55px',\r\n                        maxHeight: '300px',\r\n                        backgroundColor : \"#FFFFFF\",\r\n                        borderRadius : '10px',\r\n                        width: '192px',\r\n                        outlined : \"none\"\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <MenuItem style={{paddingLeft : \"32px\" , paddingTop: \"8px\", marginBottom : \"10px\", fontFamily : \"Roboto\",\r\n                        fontStyle : \"normal\", fontWeight : \"normal\", fontSize : \"16px\", lineHeight : \"144%\",\r\n                             color : \"#4F4F4F\"}}\r\n                              key={option}\r\n                              onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}","\r\n\r\nexport const ToFullTime = (value) =>{\r\n    if(typeof value === \"string\"){\r\n        let Numbered =  Number.parseInt(value)\r\n        if(Numbered < 10){\r\n            return \"0\" + Numbered\r\n        }\r\n        else return value\r\n    }\r\n    else if (typeof value === \"number\"){\r\n        if(value < 10){\r\n            return \"0\" + value\r\n        }\r\n        else return value\r\n    }\r\n}\r\n\r\nexport const CalculateNewStartTime = (CurrentTime,hours,minutes)=>{\r\n    if(CurrentTime && hours && minutes){\r\n        let [CurrentHours,CurrentMinutes] = [...CurrentTime.split(\":\")]\r\n        CurrentHours = Number.parseInt(CurrentHours)\r\n        CurrentMinutes = Number.parseInt(CurrentMinutes)\r\n\r\n         if(CurrentHours <= 0 ) {\r\n             CurrentHours = CurrentHours + 24\r\n        }\r\n        if(CurrentMinutes < minutes) {\r\n            CurrentMinutes = CurrentMinutes + 60\r\n            CurrentHours = CurrentHours -1\r\n         }\r\n        let StartTime = ToFullTime(CurrentHours - hours) + \":\" + ToFullTime(CurrentMinutes - minutes)\r\n         return StartTime\r\n    }\r\n}\r\n\r\n\r\nexport const CalculateTime = (CurrentTime, hours, minutes)=>{\r\n    if(CurrentTime && hours && minutes){\r\n        let HoursAndMinutes = CurrentTime.split(\":\")\r\n        let Res = ToFullTime(Number.parseInt(hours) + Number.parseInt(HoursAndMinutes[0]) )\r\n            +\r\n            \":\"\r\n            + ToFullTime(Number.parseInt(minutes) + Number.parseInt(HoursAndMinutes[1]))\r\n\r\n        return Res\r\n    }\r\n }","import React, {useState, useEffect} from 'react';\r\nimport TS from \"./Timer.module.css\"\r\nimport TTStopButton from \"../../assets/imgs/TT-stop-button.svg\"\r\nimport TTPauseButton from \"../../assets/imgs/TT-pause-button.svg\"\r\nimport PlayButton from \"@material-ui/icons/PlayCircleFilled\"\r\nimport {ToFullTime} from \"../../assets/secondary/CalculateTime\"\r\n\r\n\r\nconst Timer = (props) => {\r\n    const [seconds, setSeconds] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(6, props.PlayingWorklog.TimerValue.length)))\r\n    const [minutes, setMinutes] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(3, props.PlayingWorklog.TimerValue.length - 6)))\r\n    const [hours, setHours] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(0, props.PlayingWorklog.TimerValue.length - 6)))\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [WorklogInputValue,SetWorklogInputValue] = useState()\r\n    const [IssueInputValue,SetIssueInputValue] = useState()\r\n\r\n    const OnWorklogInputValueChange = (e) =>{\r\n        SetWorklogInputValue(e.currentTarget.value)\r\n    }\r\n    const OnIssueInputValueChange = (e) =>{\r\n        SetIssueInputValue(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const  toggle = () => {\r\n        setIsActive(!isActive);\r\n    }\r\n    const OnStopTimer =() =>{\r\n        props.openWorklogChangeModal()\r\n        setIsActive(!isActive)\r\n        let TimerData = {\r\n            TimerValue : ToFullTime(hours) + \":\"+ ToFullTime(minutes) + \":\" +ToFullTime(seconds),\r\n            TimerIssue  : IssueInputValue ? IssueInputValue : props.PlayingWorklog.Issue,\r\n            TimerTaskField: WorklogInputValue ? WorklogInputValue : props.PlayingWorklog.TaskField,\r\n        }\r\n        props.SetTimerData(TimerData)\r\n\r\n        // if(props.PlayingWorklog.ParrentId){\r\n        //     props.ChangeWorklog(props.PlayingWorklog.id,NewWorklog,true,props.PlayingWorklog.ParrentId)\r\n        //     props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n        // }\r\n        // else{\r\n        //     props.ChangeWorklog(props.PlayingWorklog.id,NewWorklog)\r\n        //     props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (!isActive) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                if (seconds > 59) {\r\n                    setMinutes(minutes => minutes + 1)\r\n                    setSeconds(0)\r\n                }\r\n                if (minutes > 59) {\r\n                    setHours(hours => hours + 1)\r\n                    setMinutes(0)\r\n                }\r\n                if (hours > 23) {\r\n                    setHours(0)\r\n                    clearInterval(interval);\r\n                }\r\n            }, 1000);\r\n        } else if (isActive && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive, seconds, minutes, hours]);\r\n\r\n    return (\r\n\r\n        <div className={TS.TimeRContainer}>\r\n            <input className={TS.TimerWorklogName}\r\n                   placeholder={\"add worklog\"}\r\n                   defaultValue={props.PlayingWorklog.TaskField}\r\n                   value={WorklogInputValue}\r\n                   onChange={OnWorklogInputValueChange}\r\n                   type=\"text\"/>\r\n\r\n            <input className={TS.TimerIssueName}\r\n                   placeholder={\"add issue\"}\r\n                   defaultValue={props.PlayingWorklog.Issue && props.PlayingWorklog.Issue}\r\n                   value={IssueInputValue}\r\n                   onChange={OnIssueInputValueChange}\r\n                   type=\"text\"/>\r\n\r\n            <div className={TS.Timer}>\r\n                {ToFullTime(hours)}:{ToFullTime(minutes)}:{ToFullTime(seconds)}\r\n            </div>\r\n\r\n            <div className={TS.TimerControlButtonsContainer}>\r\n                <div className={TS.TimerControlButtons}>\r\n                    <div onClick={OnStopTimer}>\r\n                        <img src={TTStopButton} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"controlButtons\" onClick={toggle}>\r\n                        {!isActive ?\r\n                            <img src={TTPauseButton} alt=\"\"/>\r\n                            : <PlayButton style={{width: \"50px\", height: \"50px\"}} color={\"primary\"}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Timer","import React from \"react\";\r\nimport TTS from \"./TimeTracking.module.css\"\r\nimport StrokeVert from \"../../assets/imgs/stroke_vert.svg\"\r\nimport StrokeHoriz from \"../../assets/imgs/stroke_horiz.svg\"\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\"\r\nimport NewWorklogButtonShadowed from \"../../assets/imgs/new_worklog_button_shadowed.svg\"\r\nimport LongMenu from \"../DropDownMenu/DropDownMenu\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport {TAddWorklog, TChangeWorklog, TSetIsPlayingWorklogById, TTimerData, TWorkLog} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TTimeTrackingProps = {\r\n    AddWorklog : TAddWorklog\r\n    PlayingWorklog: TWorkLog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    ChangeWorklog: TChangeWorklog\r\n    FavoritesIsClicked: boolean\r\n    openWorklogChangeModal : ()=> void\r\n    SetTimerData : (TimerData : TTimerData) => void\r\n}\r\n\r\nconst TimeTracking: React.FC<TTimeTrackingProps> = (props) => {\r\n\r\n    const OnAddEmptyWorklog = () =>{\r\n        props.AddWorklog()\r\n    }\r\n\r\n    return (<div className={TTS.TTLayout}>\r\n            <div className=\"stroke-vert\">\r\n                <img src={StrokeVert} alt=\"stroke-vert\"/>\r\n            </div>\r\n            <div className={TTS.TTContent}>\r\n\r\n\r\n                <div className={TTS.TimetrackingHeaderContainer}>\r\n                    <div className={TTS.TimetrackingHeader}>\r\n\r\n                        <div className={TTS.TimeTrackingLogo}>\r\n                            Time tracking\r\n                        </div>\r\n\r\n                        {!props.PlayingWorklog.id && <LongMenu/>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {props.PlayingWorklog.id\r\n                    ? <Timer SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\r\n                             PlayingWorklog={props.PlayingWorklog}\r\n                             openWorklogChangeModal={props.openWorklogChangeModal}\r\n                             SetTimerData={props.SetTimerData}\r\n                             ChangeWorklog={props.ChangeWorklog}\r\n                    />\r\n                    : <div className={TTS.TTMainContentRoot}>\r\n                            <div className={TTS.NewWorklogContainer}>\r\n                                <div className={TTS.NewWorklog}>\r\n\r\n                                    <div onClick={!props.FavoritesIsClicked\r\n                                        ? OnAddEmptyWorklog\r\n                                        : undefined}\r\n                                         className={TTS.NewWorklogButtonPose}>\r\n\r\n                                        <img className={TTS.NewWorklogButtonSize}\r\n\r\n                                             src={props.FavoritesIsClicked\r\n                                                 ? NewWorklogButtonShadowed\r\n                                                 : NewWorklogButton\r\n                                             }\r\n                                             alt=\"new_worklog_button\"/>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n                                        <div className={TTS.NewWorklogButtonDescription}>\r\n                                            new worklog\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        <div className={TTS.TTHorizStrokePose}>\r\n                            <img src={StrokeHoriz} alt=\"\"/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeTracking","import React from \"react\";\r\nimport CSCS from \"./CSCElement.module.css\"\r\nimport Cyan from \"../../assets/imgs/Cyan.svg\"\r\nimport Orange from \"../../assets/imgs/Orange.svg\"\r\nimport Purple from \"../../assets/imgs/Purple.svg\"\r\nexport type TCSCElementProps = {\r\n    Description: string\r\n    SyncTime : string\r\n    LineColor: string\r\n}\r\n//mb images will be like a link in items\r\n\r\nconst CSCElement: React.FC<TCSCElementProps> = (props) => {\r\n    return (<div className={CSCS.CalendarSync}>\r\n            <div className={CSCS.SyncColorPointContainer}>\r\n                <img src={props.LineColor === \"Cyan\"\r\n                    ? Cyan : props.LineColor === \"Orange\"\r\n                        ? Orange : props.LineColor === \"Purple\"\r\n                            ? Purple\r\n                            : undefined } alt=\"\"/>\r\n            </div>\r\n            <div className={CSCS.SyncInfoContainer}>\r\n                <div>\r\n                    {props.Description}\r\n                </div>\r\n                <div>\r\n                    {props.SyncTime}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default CSCElement","import React, {useState} from \"react\";\r\nimport GCS from \"./GoogleCalendar.module.css\"\r\nimport ActiveSmallCalendar from \"../../assets/imgs/calendar_active.svg\"\r\nimport SmallCalendar from \"../../assets/imgs/calendar_gray.svg\"\r\nimport CSCElement from \"../CalendarSyncsElement/CSCElement\";\r\n\r\n\r\nexport type TCalendarProps = {}\r\n\r\nconst GoogleCalendar: React.FC<TCalendarProps> = (props) => {\r\n    let [CalendarSyncs, SetCalendarSyncs] = useState([{\r\n        Description: \"Logo Redesign\",\r\n        SyncTime: \"09:00 - 10:00\",\r\n        LineColor: \"Cyan\"\r\n    }, {\r\n        Description: \"Meeting with CEO\",\r\n        SyncTime: \"14:00 - 14:15\",\r\n        LineColor: \"Orange\"\r\n    }, {\r\n        Description: \"Brainstorm\",\r\n        SyncTime: \"15:00 - 16:15\",\r\n        LineColor: \"Purple\"\r\n    }])\r\n\r\n    let [CalendarIsClicked, SetCalendarIsClicked] = useState(false)\r\n\r\n    const OnCalendarClicked = () => {\r\n        SetCalendarIsClicked(true)\r\n    }\r\n    const OnActiveCalendarClicked = () => {\r\n        SetCalendarIsClicked(false)\r\n    }\r\n\r\n    let [IsChecked, SetIsChecked] = useState(false)\r\n\r\n    const HandleChecked = (event: React.FormEvent<HTMLInputElement>) => {\r\n        SetIsChecked(event.currentTarget.checked)\r\n    }\r\n\r\n    return (<div className={GCS.GCSContainer}>\r\n        <div className={GCS.GCS}>\r\n            <div className={GCS.GCSDescription}>\r\n                Google calendar sync\r\n            </div>\r\n            <div className={GCS.GCSSwitchPose}>\r\n                <input onClick={HandleChecked} id=\"GCS-toggle\"\r\n                       type=\"checkbox\"/>\r\n            </div>\r\n            <div id=\"small-calendar\" className={GCS.GCSCalendarPose}>\r\n                {!CalendarIsClicked\r\n                    ? <img onClick={OnCalendarClicked} src={SmallCalendar} alt=\"small-calendar\"/>\r\n                    : <img onClick={OnActiveCalendarClicked} src={ActiveSmallCalendar} alt={\"active small calendar\"}/>}\r\n            </div>\r\n        </div>\r\n        {IsChecked ? <div className={GCS.CalendarSyncsContainer}>\r\n            {CalendarSyncs.map(el => {\r\n                return <CSCElement key={el.SyncTime} Description={el.Description}\r\n                                   SyncTime={el.SyncTime}\r\n                                   LineColor={el.LineColor}/>\r\n            })}\r\n        </div> : undefined}\r\n    </div>)\r\n}\r\n\r\nexport default GoogleCalendar","import React from \"react\";\r\nimport TTS from \"../TimeTracking/TimeTracking.module.css\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\";\r\nimport {TTimerData, TWorkLog} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogsContainer from \"../WorkLogs/WorkLogsContainer\";\r\n\r\nexport type TFavoritesPageProps = {\r\n    FavoritesIsClicked: boolean\r\n    FavoritesWorklogs: Array<TWorkLog>\r\n    TimerData: TTimerData | undefined\r\n    openWorklogChangeModal: () => void\r\n}\r\n\r\nconst FavoritesPage: React.FC<TFavoritesPageProps> = (props) => {\r\n    return (<div>\r\n        {props.FavoritesWorklogs.length > 0\r\n            ? <div className=\"Worklogs\">\r\n                <WorkLogsContainer TimerData={props.TimerData}\r\n                                   openWorklogChangeModal={props.openWorklogChangeModal}\r\n                                   ComponentToDraw={\"FavoritesWorklogs\"}/>\r\n            </div>\r\n\r\n            : <div className={FS.NoFavoritesIssuesContainer}>\r\n\r\n                <div className={FS.FavoritesText}>\r\n                    There is no favorites issues yet\r\n                </div>\r\n\r\n                <div style={{paddingTop: \"60px\"}} className={TTS.NewWorklog}>\r\n                    <div className={TTS.NewWorklogButtonPose}>\r\n                        <img className={TTS.NewWorklogButtonSize}\r\n                             src={NewWorklogButton}\r\n                             alt=\"new_worklog_button\"/>\r\n                    </div>\r\n\r\n                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n\r\n                        <div className={TTS.NewWorklogButtonDescription}>\r\n                            new favorite\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n    </div>)\r\n}\r\n\r\nexport default FavoritesPage","import {randomInteger} from \"./WorkLogsReducer\";\r\n\r\n\r\nconst SET_CLICKED_MONTH_DAYS = 'CALENDAR/SET_CLICKED_MONTH_DAYS'\r\nconst months = ['January', 'February', 'March', 'April', 'May',\r\n    'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst GetCurrentDate = (): TCurrentDate => {\r\n    let date = new Date()\r\n    let currentyear = date.getFullYear()\r\n    let currentmonth = months[date.getMonth()]\r\n    let currentday = date.getDate()\r\n\r\n    let CurrentDate: TCurrentDate = {\r\n        CurrentYear: currentyear,\r\n        //@ts-ignore\r\n        CurrentMonth: currentmonth,\r\n        CurrentDay: currentday\r\n    }\r\n    return CurrentDate\r\n\r\n}\r\n\r\n\r\nconst RandomStatus = (arr: Array<any>) => {\r\n    if (arr.length <= 0) {\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    }\r\n    let rand = Math.floor(Math.random() * arr.length)\r\n    return arr[rand]\r\n}\r\n\r\n\r\nconst RandomDaysCreate = (statuses: Array<string> = [], IntroDaysCount: number, OutroDaysCount: number, DaysCount: number) => {\r\n    let MaxDaysLength = 35\r\n    let OutArr: Array<TDay> = []\r\n    let IntroDaysArr: Array<TDay> = []\r\n    let OutroDaysArr: Array<TDay> = []\r\n    let DaysArr: Array<TDay> = []\r\n\r\n    if (IntroDaysCount + OutroDaysCount + DaysCount > MaxDaysLength) {\r\n        throw new RangeError(`getRandom: maximum of days it  a ${MaxDaysLength}, please, enter the correct all days counts `);\r\n    } else {\r\n\r\n        for (let j = 1; j <= IntroDaysCount; j++) {\r\n            IntroDaysArr.push({\r\n                Signature: \"intro\",\r\n                DayNumber: j,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let n = 1; n <= DaysCount; n++) {\r\n            DaysArr.push({\r\n                Signature: \"main\",\r\n                DayNumber: n,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let p = 1; p <= OutroDaysCount; p++) {\r\n            OutroDaysArr.push({\r\n                Signature: \"outro\",\r\n                DayNumber: p,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        OutArr.push(...IntroDaysArr)\r\n        OutArr.push(...DaysArr)\r\n        OutArr.push(...OutroDaysArr)\r\n        return OutArr\r\n    }\r\n}\r\n\r\n\r\nexport type TDay = {\r\n    Signature: string\r\n    DayNumber: number\r\n    DayStatus: string\r\n    id: number\r\n}\r\n\r\nexport  type TCalendar = Array<TDay>\r\n\r\nexport type TCalendars = {\r\n    January: TCalendar\r\n    February: TCalendar\r\n    March: TCalendar\r\n    April: TCalendar\r\n    May: TCalendar\r\n    June: TCalendar\r\n    July: TCalendar\r\n    August: TCalendar\r\n    September: TCalendar\r\n    October: TCalendar\r\n    November: TCalendar\r\n    December: TCalendar\r\n}\r\nexport type TClickedDay = {\r\n    id: number,\r\n    DayNumber: string | number\r\n    MonthName: string\r\n} | null\r\n\r\nexport type TCurrentDate = {\r\n    CurrentYear: number | string\r\n    CurrentMonth: keyof typeof DefaultState.Calendars\r\n    CurrentDay: number | string\r\n}\r\n\r\n\r\nlet DefaultState = {\r\n    Calendars: {\r\n        January: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        February: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        March: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 4, 30),\r\n        April: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        May: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        June: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        July: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        August: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        September: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        October: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 3, 31),\r\n        November: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        December: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 2, 31)\r\n    } as TCalendars,\r\n    ClickedMonthDay: null as TClickedDay,\r\n    CurrentDate: GetCurrentDate() as TCurrentDate\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<TSetClickedMonthDay>\r\n\r\nconst CalendarReducer = (state = DefaultState, action: TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_CLICKED_MONTH_DAYS : {\r\n            return {\r\n                ...state,\r\n                ClickedMonthDay: action.Day\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetClickedMonthDay = (Day: TClickedDay) => {\r\n    return {type: SET_CLICKED_MONTH_DAYS, Day} as const\r\n}\r\nexport type TSetClickedMonthDay = typeof SetClickedMonthDay\r\n\r\nexport default CalendarReducer","import React, {useState} from \"react\";\r\nimport CDS from \"./Calendar.module.css\"\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\nimport {TClickedDay, TSetClickedMonthDay} from \"../../Data/CalendarReducer\";\r\nimport {SearchWorklogBlock} from \"../../Data/WorkLogsReducer\";\r\n\r\n\r\nexport type TCalendarDayProps = {\r\n    DayNumber: number\r\n    DayStatus: string\r\n    Signature: string\r\n    id: number\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n    MonthName: string\r\n    ClickedMonthDay: TClickedDay\r\n    CurrentDay: number | string\r\n}\r\n\r\nconst CalendarDay: React.FC<TCalendarDayProps> = (props) => {\r\n    let [DayIsClicked, SetDayIsClicked] = useState(false)\r\n    let WrappedDay = {\r\n        id : props.id,\r\n        DayNumber : props.DayNumber,\r\n        MonthName : props.MonthName\r\n    }\r\n\r\n    const onDayClick = () => {\r\n        let WorklogsBlockToBeScroled = SearchWorklogBlock(WrappedDay.MonthName,WrappedDay.DayNumber)\r\n        SetDayIsClicked(!DayIsClicked)\r\n        props.SetClickedMonthDay(WrappedDay)\r\n        if(WorklogsBlockToBeScroled) WorklogsBlockToBeScroled.scrollIntoView({block :\"center\",inline : \"center\", behavior : \"smooth\" })\r\n    }\r\n\r\n    return (<div className={props.ClickedMonthDay?.id === props.id\r\n        ? CDS.DayBgClicked\r\n        : props.DayNumber === props.CurrentDay\r\n            ? CDS.DayBgCurrentDay\r\n            : CDS.DayBgDefault}>\r\n        <div onClick={onDayClick}\r\n             className={props.Signature !== \"main\"\r\n                 ? CDS.DropDownCalendarDayFaded : CDS.DropDownCalendarDay}>\r\n            <div className={props.ClickedMonthDay?.id === props.id\r\n            || props.DayNumber === props.CurrentDay\r\n                ? CDS.DropDownCalendarDayNumberClicked\r\n                : CDS.DropDownCalendarDayNumber}>\r\n                {props.DayNumber}\r\n            </div>\r\n            <img style={{paddingLeft: \"3px\"}} src={props.DayStatus === \"ok\"\r\n                ? OK\r\n                : props.DayStatus === \"warning\"\r\n                    ? Warn\r\n                    : props.DayStatus === \"danger\"\r\n                        ? Danger\r\n                        : undefined\r\n            } alt=\"day status\"/>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default CalendarDay","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\";\r\n\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\n\r\nexport type TDropDownCalendarFooterElementProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\"\r\n    text: string\r\n}\r\nconst DropDownCalendarFooterElement: React.FC<TDropDownCalendarFooterElementProps> = (props) => {\r\n    return (<div className={CS.DropDownCalendarFooterElement}>\r\n\r\n            <img style={{marginTop: \"4px\"}} src={props.status === \"ok\"\r\n                ? OK\r\n                : props.status === \"warning\"\r\n                    ? Warn\r\n                    : props.status === \"danger\"\r\n                        ? Danger\r\n                        : undefined} alt={\"dropDOwnCAlendarFooterStatus\"}/>\r\n\r\n            <div className={CS.DropDownProgressStatus}>\r\n                {props.text}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropDownCalendarFooterElement","import React from \"react\";\r\nimport {\r\n    TCalendars, TClickedDay,\r\n    TCurrentDate,\r\n    TSetClickedMonthDay,\r\n} from \"../../Data/CalendarReducer\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarDay from \"./CalendarDay\";\r\nimport {randomInteger} from \"../../Data/WorkLogsReducer\";\r\nimport DropDownCalendarFooterElement from \"./DropDownCalendarFooterElement\";\r\n\r\nexport type TDropDownCalendarProps = {\r\n    Calendars: TCalendars\r\n    ClickedMonthDay: TClickedDay\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n    CurrentDate: TCurrentDate\r\n}\r\n\r\nconst DropDownCalendar: React.FC<TDropDownCalendarProps> = (props) => {\r\n    let DaysNamesArr = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\r\n\r\n\r\n    return (<div className={CS.DropDownCalendar}>\r\n        <div className={CS.DropDownCalendarHeader}>\r\n            {props.CurrentDate.CurrentMonth}\r\n        </div>\r\n        <div className={CS.DropDOwnCalendarContentContainer}>\r\n            <div className={CS.DropDownCalendarContent}>\r\n                {DaysNamesArr.map(el => {\r\n                    return <div key={randomInteger(0, 10000)} className={CS.DropDownCalendarDayNames}>\r\n                        {el}\r\n                    </div>\r\n                })}\r\n                {props.Calendars[props.CurrentDate.CurrentMonth].map(day => {\r\n                    return <CalendarDay ClickedMonthDay={props.ClickedMonthDay}\r\n                                        CurrentDay={props.CurrentDate.CurrentDay}\r\n                                        MonthName={props.CurrentDate.CurrentMonth}\r\n                                        key={day.id}\r\n                                        SetClickedMonthDay={props.SetClickedMonthDay}  {...day}/>\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n        <div className={CS.DropDownCalendarFooterContainer}>\r\n\r\n            <div className={CS.DropDownCalendarFooter}>\r\n                <DropDownCalendarFooterElement status={\"ok\"} text={\"Done\"}/>\r\n                <DropDownCalendarFooterElement status={\"warning\"} text={\"In progress\"}/>\r\n                <DropDownCalendarFooterElement status={\"danger\"} text={\"Missed\"}/>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DropDownCalendar","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n// import {withRouter} from 'react-router-dom'\r\nimport {GlobalState} from \"../../Data/redux-store\"\r\nimport {\r\n    TCalendars,\r\n    TSetClickedMonthDay,\r\n    SetClickedMonthDay, TCurrentDate, TClickedDay,\r\n} from \"../../Data/CalendarReducer\";\r\nimport DropDownCalendar from \"./DropDownCalendar\";\r\n\r\nexport type TDropDownCalendarContainerOwnProps = {}\r\n\r\nexport type T_MSTP_DropDownCalendarContainer = {\r\n    Calendars: TCalendars\r\n    ClickedMonthDay: TClickedDay\r\n    CurrentDate : TCurrentDate\r\n}\r\n\r\nexport type T_MDTP_DropDownCalendarContainer = {\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n}\r\n\r\n\r\ntype TDropDownCalendarContainerProps = T_MDTP_DropDownCalendarContainer\r\n    & T_MSTP_DropDownCalendarContainer & TDropDownCalendarContainerOwnProps\r\n\r\nclass DropDownCalendarContainer extends React.Component<TDropDownCalendarContainerProps> {\r\n    render() {\r\n        return <DropDownCalendar {...this.props} />\r\n    }\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_DropDownCalendarContainer => ({\r\n    Calendars: state.CalendarData.Calendars,\r\n    ClickedMonthDay: state.CalendarData.ClickedMonthDay,\r\n    CurrentDate : state.CalendarData.CurrentDate\r\n\r\n})\r\n\r\nexport default compose(connect<T_MSTP_DropDownCalendarContainer,\r\n    T_MDTP_DropDownCalendarContainer,\r\n    TDropDownCalendarContainerOwnProps, GlobalState>\r\n(StateToProps, {SetClickedMonthDay}))(DropDownCalendarContainer)","import React, {useState} from \"react\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarIcon from \"../../assets/imgs/calendar.svg\"\r\nimport DropDownCalendarContainer from \"./DropDownCalendarContainer\";\r\nimport {TCurrentDate} from \"../../Data/CalendarReducer\";\r\n\r\nexport type TCalendarProps = {\r\n    CurrentDate: TCurrentDate\r\n}\r\n\r\nconst Calendar: React.FC<TCalendarProps> = (props) => {\r\n    let [ShowDropDownCalendar, SetShowDropDownCalendar] = useState(false)\r\n\r\n    const onShowDropDownCalendar = () => {\r\n        SetShowDropDownCalendar(true)\r\n    }\r\n    const onHideDropDownCalendar = () => {\r\n        SetShowDropDownCalendar(false)\r\n    }\r\n\r\n\r\n    return (<div className=\"Calendar\">\r\n        <div onClick={onShowDropDownCalendar} id=\"calendar-id\" className={CS.CalendarContainer}>\r\n            <div className={CS.CalendarContent}>\r\n                <div className={CS.CalendarDate}>\r\n                    {props.CurrentDate.CurrentDay} {props.CurrentDate.CurrentMonth} {props.CurrentDate.CurrentYear}\r\n                </div>\r\n                <div className={CS.CalendarIcon}>\r\n                    <img src={CalendarIcon} alt=\"calendar icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {ShowDropDownCalendar && <>\r\n            <div className={CS.bg}\r\n                 onClick={onHideDropDownCalendar}/>\r\n            <DropDownCalendarContainer/>\r\n        </>}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Calendar","import React from \"react\";\r\nimport AllS from \"./All.module.css\"\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TAllProps = {\r\n    FavoritesIsClicked: boolean\r\n    OnAllClicked: () => void\r\n}\r\n\r\nconst All: React.FC<TAllProps> = (props) => {\r\n    return (\r\n        <div className={props.FavoritesIsClicked\r\n            ? AllS.AllButtonBg\r\n            : AllS.AllButtonBgActive}>\r\n\r\n            <div  className={props.FavoritesIsClicked\r\n                ? AllS.item\r\n                : AllS.ActiveItem}>\r\n\r\n                <NavLink onClick={props.OnAllClicked}  to={\"/Home/All\"}> All </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All","import React from \"react\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {TAddToFavorite} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TFavoritesProps = {\r\n    FavoritesIsClicked: boolean\r\n    OnFavoritesClick: () => void\r\n\r\n}\r\n\r\nconst FavoritesButton: React.FC<TFavoritesProps> = (props) => {\r\n    return (\r\n        <div\r\n             className={props.FavoritesIsClicked\r\n            ? FS.FavoritesButtonBgActive\r\n            : FS.FavoritesButtonBg}>\r\n\r\n            <div className={!props.FavoritesIsClicked\r\n                ? FS.item\r\n                : FS.ActiveItem}>\r\n\r\n                <NavLink onClick={props.OnFavoritesClick} to={\"/Home/Favorites\"}> Favorites </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesButton","import React from \"react\";\r\nimport AS from \"../../App.module.css\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport All from \"../All/All\";\r\nimport FavoritesButton from \"../Favorites/FavoritesButton\";\r\nimport {TCurrentDate} from \"../../Data/CalendarReducer\";\r\n\r\nexport type TCalendarAndControlButtonsProps = {\r\n    CurrentDate: TCurrentDate\r\n    FavoritesIsClicked: boolean\r\n    OnFavoritesClick: () => void\r\n    OnAllClicked: () => void\r\n\r\n}\r\n\r\nconst CalendarAndControlButtons: React.FC<TCalendarAndControlButtonsProps> = (props) => {\r\n\r\n    return (<div className={AS.CalendarAndButtons}>\r\n        <Calendar CurrentDate={props.CurrentDate}/>\r\n        <All FavoritesIsClicked={props.FavoritesIsClicked} OnAllClicked={props.OnAllClicked}/>\r\n        <FavoritesButton OnFavoritesClick={props.OnFavoritesClick}\r\n                         FavoritesIsClicked={props.FavoritesIsClicked}/>\r\n    </div>)\r\n}\r\n\r\nexport default CalendarAndControlButtons","import React, {useEffect} from \"react\";\r\nimport LS from \"./TimeSlider.module.css\"\r\nexport type TLeftLabelProps = {\r\n    Position : number | undefined\r\n    value : {\r\n    end : string | null,\r\n    start : string | null\r\n    } | undefined\r\n    offsetLeft : number | undefined\r\n}\r\n\r\nconst RightLabel :React.FC<TLeftLabelProps> = (props) =>{\r\n\r\n    return <div className={LS.LeftLabel}\r\n                style={{display : `${!props.value &&  !props.Position ? \"none\" : \"block\" }`, left : `${props.Position && props.offsetLeft \r\n                    && props.Position - props.offsetLeft +70 + \"px\"}` }}>\r\n            <div className={LS.LeftLabelImage} > </div>\r\n            <div className={LS.LabelValue}> {props.value && props.value.start && props.value.start } </div>\r\n    </div>\r\n}\r\n\r\nexport default RightLabel\r\n","import React, {useEffect} from \"react\";\r\nimport LS from \"./TimeSlider.module.css\"\r\nexport type TLeftLabelProps = {\r\n    Position : number | undefined\r\n    value : {\r\n    end : string | null,\r\n    start : string | null\r\n    } | undefined\r\n    offsetRight : number | undefined\r\n}\r\n\r\nconst LeftLabel :React.FC<TLeftLabelProps> = (props) =>{\r\n\r\n    return <div className={LS.RightLabel}\r\n                style={{ display : `${!props.value && !props.Position ? \"none\" : \"block\" }`,\r\n                    right : `${props.Position && props.offsetRight && props.offsetRight - props.Position - 10 + \"px\" }`}}>\r\n            <div className={LS.LeftLabelImage} > </div>\r\n            <div className={LS.LabelValue}> {props.value && props.value.end && props.value.end } </div>\r\n    </div>\r\n}\r\n\r\nexport default LeftLabel\r\n","export const  findPosX =(obj  ) =>{\r\n    var curleft = 0;\r\n    if (obj.offsetParent) {\r\n        while (1) {\r\n            curleft+=obj.offsetLeft;\r\n            if (!obj.offsetParent) {\r\n                break;\r\n            }\r\n            obj=obj.offsetParent;\r\n        }\r\n    } else if (obj.x) {\r\n        curleft+=obj.x;\r\n    }\r\n    return curleft;\r\n}\r\n\r\nexport const  findPosY = (obj) => {\r\n    var curtop = 0;\r\n    if (obj.offsetParent) {\r\n        while (1) {\r\n            curtop+=obj.offsetTop;\r\n            if (!obj.offsetParent) {\r\n                break;\r\n            }\r\n            obj=obj.offsetParent;\r\n        }\r\n    } else if (obj.y) {\r\n        curtop+=obj.y;\r\n    }\r\n    return curtop;\r\n}","import React, {useState, useEffect, Dispatch} from 'react';\r\n//@ts-ignore\r\nimport TimeRangeSlider from 'react-time-range-slider';\r\nimport LeftLabel from \"./SliderValueLeftLabel\";\r\nimport RightLabel from \"./SliderValueRightLabel\";\r\nimport {findPosX} from \"../../../assets/secondary/FindElementPose\";\r\n\r\nexport type TTimeSliderProps = {\r\n    step: number\r\n    maxValue?: string\r\n    minValue?: string\r\n    format?: number\r\n    disabled: boolean\r\n    value?: {\r\n        start: string | null\r\n        end: string | null\r\n    }\r\n    SetTimerValue : Dispatch<any>\r\n}\r\n\r\n\r\nconst TimeSlider: React.FC<TTimeSliderProps> = (props) => {\r\n    let [value, SetValue] = useState({\r\n        start: props.value?.start ? props.value.start as string | null : \"08:00\",\r\n        end: props.value?.end ? props.value.end as string | null : \"22:00\"\r\n    })\r\n\r\n    let [LeftPose,SetLeftPose] = useState<number>()\r\n    let [RightPose,SetRightPose] = useState<number>()\r\n    let [LeftOffset,SetLeftOffset] = useState<number>()\r\n    let [RightOffset,SetRightOffset] = useState<number>()\r\n\r\n\r\n    const TimerButtonsInit = ()=>{\r\n        let slider = document.querySelectorAll(\".input-range\")\r\n        let el =  document.querySelectorAll(\".input-range__slider\")\r\n        // SetLeftPose(el[0].getBoundingClientRect())\r\n        // SetRightPose(el[1].getBoundingClientRect())\r\n        let SliderWidth = getComputedStyle(slider[0],null).width\r\n        let SliderPoseStart = findPosX(slider[0])\r\n        let SliderPoseEnd = SliderPoseStart + Number.parseInt(SliderWidth.substr(0,SliderWidth.length-2))\r\n        let LeftMargin = findPosX(el[0])\r\n        let RightMargin = findPosX(el[1])\r\n        SetLeftOffset(SliderPoseStart)\r\n        SetRightOffset(SliderPoseEnd)\r\n        SetLeftPose(LeftMargin)\r\n        SetRightPose(RightMargin)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            props.value && SetValue(props.value)\r\n             TimerButtonsInit()\r\n        }, [props.value && props.value]\r\n    );\r\n\r\n\r\n    const changeStartHandler = (time: any) => {\r\n        // console.log(\"Start Handler Called\", time);\r\n\r\n    }\r\n\r\n    const timeChangeHandler = (time: any) => {\r\n        TimerButtonsInit()\r\n        SetValue(time)\r\n    }\r\n\r\n    const changeCompleteHandler = (time: any) => {\r\n        TimerButtonsInit()\r\n        props.SetTimerValue(value)\r\n        SetValue(time)\r\n        /* console.log(\"Complete Handler Called\", time);*/\r\n    }\r\n\r\n    return (<>\r\n        <TimeRangeSlider\r\n            disabled={props.disabled}\r\n            format={props.format ? props.format : 24}\r\n            maxValue={props.maxValue ? props.maxValue : \"21:59\"}\r\n            minValue={props.minValue ? props.minValue : \"8:00\"}\r\n            name={\"time_range\"}\r\n            onChangeStart={changeStartHandler}\r\n            onChangeComplete={changeCompleteHandler}\r\n            onChange={timeChangeHandler}\r\n            step={props.step}\r\n            value={value}/>\r\n            <LeftLabel Position={LeftPose} offsetLeft={LeftOffset}  value={value} />\r\n            <RightLabel Position={RightPose} value={value} offsetRight={RightOffset}/>\r\n    </>);\r\n\r\n}\r\n\r\n\r\nexport default TimeSlider","import React, {SyntheticEvent, useState, useEffect, Dispatch, SetStateAction} from \"react\";\r\nimport MS from \"./ModalWindow.module.css\"\r\nimport ConfirmButton from \"../../assets/imgs/confirmButton.svg\"\r\nimport DeclineButton from \"../../assets/imgs/declineButton.svg\"\r\nimport TimeSlider from \"./TimeSlider/TimeSlider\";\r\nimport {\r\n    TChangeWorklog,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogToChange,\r\n    TTimerData,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport {CalculateNewStartTime, ToFullTime} from \"../../assets/secondary/CalculateTime\";\r\n\r\nexport type TModalWindowProps = {\r\n    closeWorklogChangeModal: () => void\r\n    WorklogChangeModalIsOpen: boolean\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    TimerData: TTimerData | undefined\r\n    ChangeWorklog: TChangeWorklog\r\n    WorklogToChange: TWorkLog | undefined\r\n    SetTimerData: Dispatch<SetStateAction<TTimerData | undefined>>\r\n    SetWorklogToChange: TSetWorklogToChange\r\n}\r\ntype TTimerValue = {\r\n    start: string | null\r\n    end: string | null\r\n}\r\n\r\nconst ChangeWorklogModal: React.FC<TModalWindowProps> = (props) => {\r\n\r\n    let [ModalNewWorklogName, SetModalNewWorklogName] = useState(\"\")\r\n    let [ModalNewIssueName, SetModalNewIssueName] = useState(\"\")\r\n    let [ModalTimeLineValues, SetModalTimeLineValues] = useState<TTimerValue>()\r\n    let [NewWorklogNameIsFilled, SetNewWorklogNameIsFilled] = useState<boolean>(false)\r\n    let [NewIssueNameIsFilled, SetNewIssueNameIsFilled] = useState<boolean>(false)\r\n\r\n\r\n    let EmptyWorklogTimerMinutes = props.TimerData?.TimerValue.substr(3, props.TimerData?.TimerValue.length - 6)\r\n    let EmptyWorklogTimerEndHours = props.TimerData?.TimerValue.substr(0, props.TimerData?.TimerValue.length - 6)\r\n    let date = new Date()\r\n    let CurrentTime = ToFullTime(date.getHours()) + \":\" + ToFullTime(date.getMinutes())\r\n    let EmptyWorklogTimeValues = {\r\n        start: CalculateNewStartTime(CurrentTime, EmptyWorklogTimerEndHours, EmptyWorklogTimerMinutes) as string | null,\r\n        end: CurrentTime as string | null\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.TimerData) {\r\n            props.TimerData.TimerTaskField && SetModalNewWorklogName(props.TimerData.TimerTaskField)\r\n            props.TimerData.TimerIssue && SetModalNewIssueName(props.TimerData.TimerIssue)\r\n            if (props.PlayingWorklog.StartTime && props.PlayingWorklog.EndTime) {\r\n                SetModalTimeLineValues({\r\n                    start: props.PlayingWorklog.StartTime,\r\n                    end: props.PlayingWorklog.EndTime\r\n                })\r\n            } else SetModalTimeLineValues(EmptyWorklogTimeValues)\r\n        } else if (props.WorklogToChange) {\r\n            props.WorklogToChange.TaskField && SetModalNewWorklogName(props.WorklogToChange.TaskField)\r\n            props.WorklogToChange.Issue && SetModalNewIssueName(props.WorklogToChange.Issue)\r\n            SetModalTimeLineValues({\r\n                start: props.WorklogToChange.StartTime,\r\n                end: props.WorklogToChange.EndTime\r\n            })\r\n        }\r\n    }, [props.TimerData?.TimerIssue, props.TimerData?.TimerTaskField, props.TimerData?.TimerValue,\r\n        props.WorklogToChange?.EndTime, props.WorklogToChange?.StartTime,\r\n        props.WorklogToChange?.Issue, props.WorklogToChange?.TaskField])\r\n\r\n    const OnModalSubmit = (e: SyntheticEvent) => {\r\n        {\r\n            ModalNewWorklogName.length > 0\r\n                ? SetNewWorklogNameIsFilled(false)\r\n                : SetNewWorklogNameIsFilled(true)\r\n        }\r\n        {\r\n            ModalNewIssueName.length > 0\r\n                ? SetNewIssueNameIsFilled(false)\r\n                : SetNewIssueNameIsFilled(true)\r\n        }\r\n\r\n        if (ModalNewWorklogName && ModalNewWorklogName.length > 0\r\n            && ModalNewIssueName\r\n            && ModalNewIssueName.length > 0\r\n            && ModalTimeLineValues) {\r\n\r\n            let Obj: string\r\n            if (props.TimerData) Obj = \"PlayingWorklog\"; else Obj = \"WorklogToChange\"\r\n            let NewWL = {\r\n                //@ts-ignore\r\n                ...props[Obj],\r\n                StartTime: ModalTimeLineValues.start,\r\n                EndTime: ModalTimeLineValues.end,\r\n                TaskField: ModalNewWorklogName,\r\n                Issue: ModalNewIssueName,\r\n                //@ts-ignore\r\n                status: props[Obj].status ? props[Obj].status : \"warning\",\r\n                //@ts-ignore\r\n                TimerValue: props.TimerData && props.TimerData.TimerValue ? props.TimerData.TimerValue\r\n                    //@ts-ignore\r\n                    : props[Obj].TimerValue ? props[Obj].TimerValue : \"00:00:00\"\r\n            }\r\n\r\n            //@ts-ignore\r\n            if (props[Obj].ParentId) {\r\n                //@ts-ignore\r\n                props.ChangeWorklog(props[Obj].id, NewWL, true, props[Obj].ParentId)\r\n                //@ts-ignore\r\n                props.SetIsPlayingWorklogById(false, props[Obj].id)\r\n            } else {\r\n                //@ts-ignore\r\n                props.ChangeWorklog(props[Obj].id, NewWL)\r\n                //@ts-ignore\r\n                props.SetIsPlayingWorklogById(false, props[Obj].id)\r\n            }\r\n            SetModalNewWorklogName(\"\")\r\n            SetModalNewIssueName(\"\")\r\n            SetNewWorklogNameIsFilled(false)\r\n            SetNewIssueNameIsFilled(false)\r\n            close(e)\r\n        }\r\n    }\r\n\r\n    const OnNewWorklogNameType = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetModalNewWorklogName(e.currentTarget.value)\r\n    }\r\n    const OnNewIssueNameType = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetModalNewIssueName(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const close = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (props.closeWorklogChangeModal) {\r\n            props.closeWorklogChangeModal();\r\n        }\r\n        props.SetTimerData(undefined)\r\n        props.SetWorklogToChange(undefined)\r\n        props.SetIsPlayingWorklogById(false)\r\n    }\r\n    if (!props.WorklogChangeModalIsOpen) return null;\r\n\r\n\r\n    return (\r\n        <div className=\"timer-modal\">\r\n            <div className={MS.modal}>\r\n                <div className={MS.ModalTitle}>New worklog</div>\r\n                <div className={MS.ModalSlider}>\r\n\r\n                    {ModalTimeLineValues?.start && ModalTimeLineValues?.end &&\r\n                    <TimeSlider value={ModalTimeLineValues}\r\n                                disabled={false}\r\n                                step={10}\r\n                                SetTimerValue={SetModalTimeLineValues}\r\n                    />\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <form name=\"NewWorklogContent\" action=\"\">\r\n                    <div className={MS.ModalTextFields}>\r\n                        <div className={MS.NewWorklogContentContainer}>\r\n\r\n                            <div className={MS.NewWorklogContentTitle}>Worklog name</div>\r\n\r\n                            <div className={MS.marginCheck}>\r\n                                <input\r\n                                    onChange={OnNewWorklogNameType}\r\n                                    value={ModalNewWorklogName}\r\n                                    className={MS.NewWorklogContentInput}\r\n                                    placeholder=\"Enter the worklog name\"\r\n                                    type=\"text\"/>\r\n                            </div>\r\n\r\n                            {NewWorklogNameIsFilled &&\r\n                            <div id=\"new-issue-err\" className={MS.ModalInputError}> Please, enter worklog name</div>\r\n                            }\r\n\r\n                            <div style={{marginTop: \"37px\"}}>\r\n                                <div className={MS.NewWorklogContentTitle}>Issue</div>\r\n                                <div className={MS.marginCheck}>\r\n                                    <input\r\n                                        onChange={OnNewIssueNameType}\r\n                                        value={ModalNewIssueName}\r\n                                        className={MS.NewWorklogContentInput}\r\n                                        placeholder=\"Enter the issue name\"\r\n                                        type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                            {NewIssueNameIsFilled &&\r\n                            <div id=\"new-issue-err\" className={MS.ModalInputError}> Please, enter issue name</div>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={MS.NewWorklogControlButtonsContainer}>\r\n                        <div className={MS.NewWorklogControlButtons}>\r\n                            <div onClick={OnModalSubmit} className=\"modal-open\">\r\n                                <img className={MS.NewWorklogSubmitButtonSize}\r\n                                     src={ConfirmButton} alt={\"submit\"}/>\r\n                            </div>\r\n                            <div className=\"modal-close\">\r\n                                <img onClick={close} className={MS.NewWorklogControlButton}\r\n                                     src={DeclineButton} alt={\"decline\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={MS.bg} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeWorklogModal\r\n\r\n","import React, {Dispatch, SetStateAction} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n// import {withRouter} from 'react-router-dom'\r\nimport ChangeWorklogModal from \"./ChangeWorklogModal\";\r\nimport {GlobalState} from \"../../Data/redux-store\";\r\nimport {\r\n    TAddWorklog, TChangeWorklog, TSetIsPlayingWorklogById,\r\n    TTimerData, TWorkLog, ChangeWorklog, TSetWorklogToChange,\r\n    SetWorklogToChange\r\n}\r\n    from \"../../Data/WorkLogsReducer\";\r\nimport {AddWorklog, SetIsPlayingWorklogById} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TModalWindowContainerOwnProps = {\r\n    closeWorklogChangeModal: () => void\r\n    WorklogChangeModalIsOpen: boolean\r\n    TimerData: TTimerData | undefined\r\n    SetTimerData: Dispatch<SetStateAction<TTimerData | undefined>>\r\n}\r\n\r\nexport type T_MSTP_ModalWindowContainer = {\r\n    PlayingWorklog: TWorkLog\r\n    WorklogToChange: TWorkLog | undefined\r\n}\r\n\r\nexport type T_MDTP_ModalWindowContainer = {\r\n    AddWorklog: TAddWorklog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    ChangeWorklog: TChangeWorklog\r\n    SetWorklogToChange: TSetWorklogToChange\r\n}\r\ntype TModalWindowContainerProps =\r\n    T_MDTP_ModalWindowContainer\r\n    & T_MSTP_ModalWindowContainer\r\n    & TModalWindowContainerOwnProps\r\n\r\nclass ChangeWorklogModalContainer extends React.Component<TModalWindowContainerProps> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ChangeWorklogModal closeWorklogChangeModal={this.props.closeWorklogChangeModal}\r\n                                WorklogChangeModalIsOpen={this.props.WorklogChangeModalIsOpen}\r\n                                SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                                PlayingWorklog={this.props.PlayingWorklog}\r\n                                TimerData={this.props.TimerData}\r\n                                WorklogToChange={this.props.WorklogToChange}\r\n                                ChangeWorklog={this.props.ChangeWorklog}\r\n                                SetTimerData={this.props.SetTimerData}\r\n                                SetWorklogToChange={this.props.SetWorklogToChange}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_ModalWindowContainer => ({\r\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\r\n    WorklogToChange: state.WorklogsData.WorklogToChange\r\n})\r\n\r\nexport default compose(connect<T_MSTP_ModalWindowContainer, T_MDTP_ModalWindowContainer, TModalWindowContainerOwnProps, GlobalState>\r\n(StateToProps, {\r\n    AddWorklog, SetIsPlayingWorklogById, SetWorklogToChange,\r\n    ChangeWorklog\r\n}))(ChangeWorklogModalContainer)","import React, {useState} from \"react\";\r\nimport LS from \"./LoginModal.module.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 300,\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst LoginModal = () => {\r\n    const classes = useStyles();\r\n    let [LoginFieldValue, SetLoginFieldValue] = useState(\"\")\r\n    let [PasswordFieldValue, SetPasswordFieldValue] = useState(\"\")\r\n    let [ErrorText,SetErrorText] = useState<string>()\r\n\r\n    const onLoginInputChange = (e: any) => {\r\n            SetLoginFieldValue(e.target.value)\r\n    }\r\n\r\n    const onPasswordInputChange = (e: any) => {\r\n            SetPasswordFieldValue(e.target.value)\r\n    }\r\n\r\n    const LoginHandler = () => {\r\n        if(LoginFieldValue === \"test\" && PasswordFieldValue === \"test\"){\r\n            localStorage.setItem(\"IsAuth\",\"true\")\r\n            SetErrorText(undefined)\r\n            SetLoginFieldValue(\"\")\r\n            SetPasswordFieldValue(\"\")\r\n            window.location.reload()\r\n        }\r\n        else {\r\n            SetErrorText(\"Incorrect login or password \")\r\n\r\n        }\r\n    }\r\n\r\n    return (<div className=\"login-modal\">\r\n            <div className={LS.modal}>\r\n                <form className={classes.root} autoComplete=\"off\">\r\n                    <div className={LS.InputsContainer}>\r\n                        <div className={LS.LoginContainer}>\r\n\r\n                            <TextField\r\n                                onChange={onLoginInputChange}\r\n                                error={!!ErrorText}\r\n                                id=\"standard-error-helper-text\"\r\n                                label=\"login\"\r\n                                value={LoginFieldValue}\r\n                                placeholder=\"Please, enter the login\"\r\n                                helperText={ErrorText}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className={LS.PasswordContainer}>\r\n\r\n                            <TextField\r\n                                onChange={onPasswordInputChange}\r\n                                error={!!ErrorText}\r\n                                type={\"password\"}\r\n                                id=\"standard-error-helper-text\"\r\n                                label=\"password\"\r\n                                value={PasswordFieldValue}\r\n                                placeholder=\"Please, enter the password\"\r\n                                helperText={ErrorText}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div style={{paddingTop: \"45px\", paddingLeft: \"110px\"}}>\r\n                            <Button style={{width : \"120px\"}} onClick={LoginHandler} variant=\"outlined\" color=\"secondary\">\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={LS.bg}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal","import React, {useEffect, useState} from 'react';\nimport AS from \"./App.module.css\"\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport WorkLogsContainer from \"./Components/WorkLogs/WorkLogsContainer\";\nimport TimeTracking from \"./Components/TimeTracking/TimeTracking\";\nimport GoogleCalendar from \"./Components/GoogleCalendar/GoogleCalendar\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {GlobalState} from \"./Data/redux-store\";\nimport {\n    SetIsPlayingWorklogById, ChangeWorklog,\n    TWorkLog, TSetIsPlayingWorklogById, TChangeWorklog, TAddWorklog,\n    AddWorklog, TTimerData, TAddToFavorite,AddToFavorite\n} from \"./Data/WorkLogsReducer\";\nimport {Redirect, Route,withRouter} from \"react-router-dom\";\nimport FavoritesPage from \"./Components/Favorites/FavoritesPage\";\nimport CalendarAndControlButtons from \"./Components/CalendarAndControllButtons/CalendarAndControlButtons\";\nimport {TCurrentDate} from \"./Data/CalendarReducer\";\nimport ChangeWorklogModalContainer from \"./Components/ModalWindow/ChangeWorklogModalContainer\";\nimport LoginModal from \"./Components/LoginPage/LoginModal\";\n\n\n\nexport type TAppOwnProps = {\n}\n\nexport type T_MSTP_App = {\n    PlayingWorklog: TWorkLog\n    CurrentDate: TCurrentDate\n    FavoritesWorklogs : Array<TWorkLog>\n}\n\nexport type T_MDTP_App = {\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\n    ChangeWorklog: TChangeWorklog\n    AddWorklog: TAddWorklog\n    AddToFavorite : TAddToFavorite\n}\n\nexport type TAppProps = T_MSTP_App & T_MDTP_App & TAppOwnProps\n\nconst App: React.FC<TAppProps> = (props) => {\n    let [WorklogChangeModalIsOpen, SetWorklogChangeModalIsOpen] = useState(false)\n    let [FavoritesIsClicked, SetFavoritesIsClicked] = useState(false)\n    let [TimerData, SetTimerData] = useState<TTimerData | undefined>(undefined)\n\n    const OnSetTimerData = (TimerData: TTimerData) => {\n        SetTimerData(TimerData)\n    }\n\n    const OnFavoritesClick = () => {\n        SetFavoritesIsClicked(true)\n    }\n    const OnAllClicked = () => {\n        SetFavoritesIsClicked(false)\n    }\n\n    const openWorklogChangeModal = () => {\n        SetWorklogChangeModalIsOpen(true)\n    }\n\n    const closeWorklogChangeModal = () => {\n        SetWorklogChangeModalIsOpen(false)\n    }\n\n\n    return (<div className=\"AppWrapper\">\n\n            {localStorage.getItem(\"IsAuth\") === \"true\"\n                ? <>\n                    <Route exact path='/'\n                           render={() => <Redirect to={\"/Home/All\"}/>}/>\n\n                    <div className=\"MainAppWrapper\">\n                        <NavBar/>\n\n                        <div className={AS.CalendarAndButtonsContainer}>\n                            <CalendarAndControlButtons FavoritesIsClicked={FavoritesIsClicked}\n                                                       OnAllClicked={OnAllClicked}\n                                                       OnFavoritesClick={OnFavoritesClick}\n                                                       CurrentDate={props.CurrentDate}\n\n                            />\n                        </div>\n\n                        <div className={AS.MainWrapper}>\n                            <div className=\"WorklogsLayout\">\n\n                                <Route exact path='/Home/All'\n                                       render={() => <div className=\"WorkLogBlock\">\n                                           <div className=\"Worklogs\">\n                                               <WorkLogsContainer TimerData={TimerData}\n                                                                  openWorklogChangeModal={openWorklogChangeModal}\n                                                                  ComponentToDraw={\"Worklogs\"}/>\n                                           </div>\n                                       </div>\n                                       }/>\n\n                                <Route exact path='/Home/Favorites'\n                                       render={() => <FavoritesPage FavoritesIsClicked={FavoritesIsClicked}\n                                                                    FavoritesWorklogs={props.FavoritesWorklogs}\n                                                                    openWorklogChangeModal={openWorklogChangeModal}\n                                                                    TimerData={TimerData}\n                                       />}/>\n\n                            </div>\n                            <div className={AS.TImeTracking_and_Calendar}>\n                                <TimeTracking PlayingWorklog={props.PlayingWorklog}\n                                              FavoritesIsClicked={FavoritesIsClicked}\n                                              SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\n                                              AddWorklog={props.AddWorklog}\n                                              SetTimerData={OnSetTimerData}\n                                              openWorklogChangeModal={openWorklogChangeModal}\n                                              ChangeWorklog={props.ChangeWorklog}/>\n                                <div className=\"GoogleCalendar\">\n                                    <GoogleCalendar/>\n                                </div>\n                            </div>\n                        </div>\n\n                        <ChangeWorklogModalContainer\n                            SetTimerData={SetTimerData}\n                            WorklogChangeModalIsOpen={WorklogChangeModalIsOpen}\n                            closeWorklogChangeModal={() => closeWorklogChangeModal()}\n                            TimerData={TimerData}\n                        />\n\n                    </div>\n                </>\n\n                : <LoginModal/>\n\n            }\n\n\n        </div>\n    );\n}\n\n\nconst MapStateToProps = (state: GlobalState): T_MSTP_App => ({\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\n    CurrentDate: state.CalendarData.CurrentDate,\n    FavoritesWorklogs : state.WorklogsData.FavoritesWorklogs\n})\n\nexport default compose(\n    connect<T_MSTP_App, T_MDTP_App, TAppOwnProps, GlobalState>(MapStateToProps, {\n        SetIsPlayingWorklogById,\n        ChangeWorklog, AddWorklog,AddToFavorite\n    }))(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport CalendarReducer from \"./CalendarReducer\";\r\nimport WorkLogsReducer from \"./WorkLogsReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n form : formReducer,\r\n CalendarData : CalendarReducer,\r\n WorklogsData  : WorkLogsReducer,\r\n})\r\n\r\ntype Treducers = typeof reducers\r\n\r\nexport type GlobalState = ReturnType<Treducers>\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Data/redux-store\";\n\n{!localStorage.getItem(\"IsAuth\") &&  localStorage.setItem(\"IsAuth\", \"false\") }\n\nReactDOM.render(\n\n    <HashRouter  basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <div style={{backgroundColor : \"#F9FAFC\", overflow : \"hidden\"}} className={\"App\"}>\n                    <App/>\n            </div>\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GCSContainer\":\"GoogleCalendar_GCSContainer__2skR-\",\"GCS\":\"GoogleCalendar_GCS__1JofJ\",\"GCSDescription\":\"GoogleCalendar_GCSDescription__1KeuU\",\"GCSSwitchPose\":\"GoogleCalendar_GCSSwitchPose__2zX0p\",\"GCSCalendarPose\":\"GoogleCalendar_GCSCalendarPose__hvnAI\",\"CalendarSyncsContainer\":\"GoogleCalendar_CalendarSyncsContainer__6QN1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainWrapper\":\"App_MainWrapper__3UVmf\",\"CalendarAndButtonsContainer\":\"App_CalendarAndButtonsContainer__1qylj\",\"CalendarAndButtons\":\"App_CalendarAndButtons__gi3vH\",\"TImeTracking_and_Calendar\":\"App_TImeTracking_and_Calendar__2wagN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"LoginModal_modal__xh2O6\",\"bg\":\"LoginModal_bg__2rem_\",\"InputsContainer\":\"LoginModal_InputsContainer__BSJ44\",\"LoginContainer\":\"LoginModal_LoginContainer__3G6Hk\",\"PasswordContainer\":\"LoginModal_PasswordContainer__2mRxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorklogInfoContainer\":\"WorkLog_WorklogInfoContainer__3vBgc\",\"WorklogBlockContainer\":\"WorkLog_WorklogBlockContainer__k3upz\",\"WorklogBlockContainerActive\":\"WorkLog_WorklogBlockContainerActive__awb7y\",\"WLInfoButton\":\"WorkLog_WLInfoButton__2amtG\",\"WLInfoButtonActive\":\"WorkLog_WLInfoButtonActive__2T9on\",\"WLlinestroke\":\"WorkLog_WLlinestroke__2SPgZ\",\"WLlinestrokeActive\":\"WorkLog_WLlinestrokeActive__1wEjg\",\"ColorPointPose\":\"WorkLog_ColorPointPose__2v3Y0\",\"ColorPointPoseActive\":\"WorkLog_ColorPointPoseActive__3Ylmy\",\"WorklogBlock\":\"WorkLog_WorklogBlock__3MTew\",\"WorkTime\":\"WorkLog_WorkTime__35AHM\",\"WbcBlock\":\"WorkLog_WbcBlock__y2-DV\",\"StartTime\":\"WorkLog_StartTime__pO95X\",\"EndTime\":\"WorkLog_EndTime__6ivO2\",\"Minus\":\"WorkLog_Minus__3ysDf\",\"WorklogContentContainer\":\"WorkLog_WorklogContentContainer__Pdl3q\",\"JiraCode\":\"WorkLog_JiraCode__3cju4\",\"TaskField\":\"WorkLog_TaskField__3WyCE\",\"ProgressBarContainer\":\"WorkLog_ProgressBarContainer__2t-30\",\"TimerValueContainer\":\"WorkLog_TimerValueContainer__3bCeV\",\"TimerValue\":\"WorkLog_TimerValue__yfMTJ\",\"ControlButtonsContainer\":\"WorkLog_ControlButtonsContainer__cqNYJ\",\"PlayButton\":\"WorkLog_PlayButton__2v57W\",\"StopButton\":\"WorkLog_StopButton__1uogg\",\"NestingButtonPose\":\"WorkLog_NestingButtonPose__-jdPs\",\"NestingBG\":\"WorkLog_NestingBG__ALW79\",\"TwwContentText\":\"WorkLog_TwwContentText__1n6ua\",\"WorkLogSliderPose\":\"WorkLog_WorkLogSliderPose__2XB8U\",\"TwwContentImg\":\"WorkLog_TwwContentImg__2jKRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllButtonBgActive\":\"All_AllButtonBgActive__2raAa\",\"AllButtonBg\":\"All_AllButtonBg__18uYw\",\"item\":\"All_item__2aEna\",\"ActiveItem\":\"All_ActiveItem__129Oh\"};","module.exports = __webpack_public_path__ + \"static/media/play-button.f9fec951.svg\";","module.exports = __webpack_public_path__ + \"static/media/active-issue-more-button.89696082.svg\";","module.exports = __webpack_public_path__ + \"static/media/danger_cp.49659e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning_cp.c2d1e025.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_cp.08ca5cee.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop_button.1eb1b96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirmButton.8d55a976.svg\";","module.exports = __webpack_public_path__ + \"static/media/declineButton.9823975f.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button.ee54e2c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusDanger.168fb5a4.svg\";"],"sourceRoot":""}