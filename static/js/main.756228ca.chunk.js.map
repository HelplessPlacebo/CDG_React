{"version":3,"sources":["Components/WorkLogs/WorkLog.module.css","Components/Calendar/Calendar.module.css","assets/imgs/settings.svg","assets/imgs/second_icon.svg","assets/imgs/door.svg","assets/imgs/avatar.svg","assets/imgs/play-button.svg","Components/LineStroke/LineStroke.module.css","assets/imgs/worklogMoreButtonBG.svg","assets/imgs/worklogMoreVertical.svg","assets/imgs/danger_cp.svg","assets/imgs/warning_cp.svg","assets/imgs/ok_cp.svg","assets/imgs/arrow-up.svg","assets/imgs/stop_button.svg","assets/imgs/download.svg","assets/imgs/separator-line.svg","assets/imgs/stroke_vert.svg","assets/imgs/stroke_horiz.svg","assets/imgs/new_worklog_button_shadowed.svg","assets/imgs/TT-stop-button.svg","assets/imgs/TT-pause-button.svg","assets/imgs/calendar_active.svg","assets/imgs/calendar_gray.svg","assets/imgs/Cyan.svg","assets/imgs/Orange.svg","assets/imgs/Purple.svg","assets/imgs/calendar.svg","assets/imgs/Tooltip_Close_button.svg","Components/ModalWindow/ModalWindow.module.css","Components/TimeTracking/TimeTracking.module.css","Components/NavBar/NavBar.module.css","Components/Tooltip/Tooltip.module.css","App.module.css","Components/Favorites/Favorites.module.css","Components/ModalWindow/TimeSlider/TimeSlider.module.css","Components/WorkLogs/WorklogInfo/WorklogInfo.module.css","Components/WorkLogs/DropDown/WorklogDropDown.module.css","serviceWorker.ts","API/requests.ts","Data/WorkLogsReducer.ts","Data/CalendarReducer.ts","Data/redux-store.ts","Components/NavBar/NavBar.tsx","assets/secondary/DifferenceInTime.js","Components/LineStroke/LineStroke.tsx","Components/WorkLogs/DropDown/WorklogDropDown.tsx","Components/DeleteConfirmModal/DeleteConfirmModal.tsx","Components/WorkLogs/NestingWorkLog.tsx","Components/WorkLogs/WorkLog.tsx","Components/ProgressBar/ProgressBar.tsx","Components/WorkLogs/WorklogInfo/WorklogInfo.tsx","Components/WorkLogs/SliderTimePicker/WorkLogTimeLine.tsx","Components/WorkLogs/WorkLogsBlock.tsx","Components/WorkLogs/WorkLogsContainer.tsx","Components/DropDownMenu/DropDownMenu.jsx","assets/secondary/CalculateTime.js","Components/Timer/Timer.jsx","Components/TimeTracking/TimeTracking.tsx","Components/CalendarSyncsElement/CSCElement.tsx","Components/GoogleCalendar/GoogleCalendar.tsx","Components/Favorites/FavoritesPage.tsx","Components/Calendar/CalendarDay.tsx","Components/Calendar/DropDownCalendarFooterElement.tsx","Components/Calendar/DropDownCalendar.tsx","Components/Calendar/DropDownCalendarContainer.tsx","Components/Calendar/Calendar.tsx","Components/All/All.tsx","Components/Favorites/FavoritesButton.tsx","Components/CalendarAndControllButtons/CalendarAndControlButtons.tsx","Components/ModalWindow/TimeSlider/SliderValueLeftLabel.tsx","Components/ModalWindow/TimeSlider/SliderValueRightLabel.tsx","assets/secondary/FindElementPose.js","Components/ModalWindow/TimeSlider/TimeSlider.tsx","Components/ModalWindow/ChangeWorklogModal.tsx","Components/ModalWindow/ChangeWorklogModalContainer.tsx","Components/LoginPage/LoginModal.tsx","Components/Tooltip/Tooltip.tsx","App.tsx","index.tsx","Components/DeleteConfirmModal/DeleteConfirm.module.css","Components/Timer/Timer.module.css","Components/GoogleCalendar/GoogleCalendar.module.css","Components/LoginPage/LoginModal.module.css","Components/All/All.module.css","assets/imgs/confirmButton.svg","assets/imgs/declineButton.svg","assets/imgs/new_worklog_button.svg","assets/imgs/CalendarDayStatusDanger.svg","assets/imgs/CalendarDayStatusWarning.svg","assets/imgs/CalendarDayStatusOK.svg","Components/WorkLogs/SliderTimePicker/WorkLogSlider.module.css","Components/CalendarSyncsElement/CSCElement.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","create","withCredentials","baseURL","API","WorklogData","post","response","data","DEL_WORKLOG","CHANGE_WORKLOG","ADD_TO_FAVORITE","randomInteger","min","max","rand","Math","random","floor","DefaultState","WorkLogsBlocks","BlockInfo","BlockCreatedDate","SummaryStatus","SummaryTime","id","Worklogs","StartTime","EndTime","JiraCode","TaskField","status","IsNesting","TimerValue","IsFavorites","NestingItems","PlayingWorklog","WorklogToChange","undefined","AddWorklog","NewWorklog","to","type","SetIsPlayingWorklogById","IsPlaying","ElementId","ParentId","ChangeWorklog","WorkLogId","parentId","NewWlParentId","SetWorklogToChange","AddToFavorite","WorklogId","WorklogsReducer","state","action","GetWorklogsBlockCopy","JSON","parse","stringify","FindWorklogById","WorklogsBlocksCopy","SoughtWorklog","WorklogBlockIndex","WorklogIndex","NestingWorklogIndex","map","WorklogBlock","Index","Worklog","WLIndex","NestingItem","NestingIndex","SoughtNestingItem","WorklogToCreate","EmptyWorklog","Issue","el","unshift","WB","NewWorklogs","NewNestingWorklogs","index","DelParentId","push","filter","DelWorklogId","WL","Indexes","options","target","months","RandomStatus","arr","length","RangeError","RandomDaysCreate","statuses","IntroDaysCount","OutroDaysCount","DaysCount","MaxDaysLength","OutArr","IntroDaysArr","OutroDaysArr","DaysArr","j","Signature","DayNumber","DayStatus","n","p","Calendars","January","February","March","April","May","June","July","August","September","October","November","December","ClickedMonthDay","CurrentDate","date","Date","CurrentYear","getFullYear","CurrentMonth","getMonth","CurrentDay","getDate","GetCurrentDate","CalendarReducer","Day","reducers","combineReducers","form","formReducer","CalendarData","WorklogsData","WorkLogsReducer","store","createStore","applyMiddleware","thunkMiddleWare","NavBar","props","className","HS","navContainer","navLinksContainer","NavLinksPosition","NavLinks","item","NavIconsContainer","NavIcons","SmallIcons","src","settings","alt","FAQ","LogOutIcon","AvatarIcons","AvatarIcon","DifferenceInTime","differentRes","hours","minuts","TimesArr","firstDate","secondDate","string","split","different","round","abs","LineStroke","LS","lineStroke","WorkLogDropDown","onMouseLeave","onHideMenu","WLDD","Container","onClick","ContentContainer","ContainerFirstEl","ComponentToDraw","CurrentWorklog","ContainerEl","e","SetDeleteModalParams","WorkLogToDeleteId","OnDeleteModalOpen","DeleteWorklogConfirmModal","isOpen","DS","modal","ModalTextContainer","NewWorklogControlButtonsContainer","NewWorklogControlButtons","DeleteModalParams","DeleteWorklog","onClose","NewWorklogSubmitButtonSize","ConfirmButton","NewWorklogControlButton","DeclineButton","MS","bg","NestingWorkLog","key","WorkLog","useState","ShowMenu","SetShowMenu","NestingIsShowing","SetNestingIsShowing","WLS","WorkLogs","WorklogBlockContainerActive","WorklogBlockContainer","WorklogActive","NestingButtonPose","NestingBG","TwwContentImg","ArrowUp","TwwContentText","WorkTime","Minus","ColorPointPoseActive","ColorPointPose","CP_ok","CP_warning","CP_danger","keys","i","openWorklogChangeModal","WorklogContentContainer","TimerValueContainer","ControlButtonsContainer","StopButton","PlayButton","WLInfoButtonActive","WorklogMoreButton","WLMoreButtonBG","WorklogMoreVerticalActive","WorklogMoreVertical","WLMoreButtonVertical","DeleteModalIsOpen","OnDeleteModalClose","WLlinestrokeActive","WLlinestroke","ProgressBar","Fragment","style","width","height","borderRadius","Bar","now","WorklogInfo","FS","SummaryWorklogInfo","DateBlockContainer","DateBlockSize","DateOfCreation","DateTime","Progress","showTooltip","text","SetWorklogStatus","every","ObjToSend","SendWorklogBlockThunk","DownloadIcon","WLlineStrokeContainer","WorkLogTimeLine","SS","TimePickerLine","SliderTimesContainer","SliderTimes","WorkLogsBlock","SetDeleteModalIsOpen","toString","WorklogInfoContainer","paddingTop","WorkLogSliderPose","WorkLogsContainer","this","WorklogsBlocks","TimerData","React","Component","compose","connect","WorklogBlockData","dispatch","a","console","log","LongMenu","anchorEl","setAnchorEl","open","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","marginRight","marginTop","maxHeight","backgroundColor","outlined","option","MenuItem","paddingLeft","marginBottom","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","ToFullTime","value","Numbered","Number","parseInt","CalculateNewStartTime","CurrentTime","minutes","CurrentHours","CurrentMinutes","Timer","substr","seconds","setSeconds","setMinutes","setHours","isActive","setIsActive","WorklogInputValue","SetWorklogInputValue","IssueInputValue","SetIssueInputValue","useEffect","interval","clearInterval","setInterval","TS","TimeRContainer","TimerWorklogName","placeholder","defaultValue","onChange","TimerIssueName","TimerControlButtonsContainer","TimerControlButtons","TimerIssue","TimerTaskField","SetTimerData","TTStopButton","TTPauseButton","TimeTracking","TTS","TTLayout","StrokeVert","TTContent","TimetrackingHeaderContainer","TimetrackingHeader","TimeTrackingLogo","TTMainContentRoot","NewWorklogContainer","FavoritesIsClicked","NewWorklogButtonPose","NewWorklogButtonSize","NewWorklogButtonShadowed","NewWorklogButton","NewWorklogButtonDescriptionContainer","NewWorklogButtonDescription","TTHorizStrokePose","StrokeHoriz","CSCElement","CSCS","CalendarSync","SyncColorPointContainer","LineColor","Cyan","Orange","Purple","SyncInfoContainer","Description","SyncTime","GoogleCalendar","CalendarSyncs","CalendarIsClicked","SetCalendarIsClicked","IsChecked","SetIsChecked","GCS","GCSContainer","GCSDescription","GCSSwitchPose","checked","GCSCalendarPose","ActiveSmallCalendar","SmallCalendar","CalendarSyncsContainer","FavoritesPage","WBL","some","includes","NoFavoritesIssuesContainer","FavoritesText","CalendarDay","DayIsClicked","SetDayIsClicked","WrappedDay","MonthName","CDS","DayBgClicked","DayBgCurrentDay","DayBgDefault","WorklogsBlockToBeScroled","StateCopy","WorklogsBlockToBeScrolled","Month","document","getElementById","SearchWorklogBlock","SetClickedMonthDay","scrollIntoView","block","inline","behavior","DropDownCalendarDayFaded","DropDownCalendarDay","DropDownCalendarDayNumberClicked","DropDownCalendarDayNumber","OK","Warn","Danger","DropDownCalendarFooterElement","CS","DropDownProgressStatus","DropDownCalendar","DropDownCalendarHeader","DropDOwnCalendarContentContainer","DropDownCalendarContent","DropDownCalendarDayNames","day","DropDownCalendarFooterContainer","DropDownCalendarFooter","DropDownCalendarContainer","Calendar","ShowDropDownCalendar","SetShowDropDownCalendar","CalendarContainer","CalendarContent","CalendarDate","CalendarIcon","All","AllS","AllButtonBg","AllButtonBgActive","ActiveItem","OnAllClicked","FavoritesButton","FavoritesButtonBgActive","FavoritesButtonBg","OnFavoritesClick","CalendarAndControlButtons","AS","CalendarAndButtons","RightLabel","LeftLabel","display","Position","left","offsetLeft","LeftLabelImage","LabelValue","start","right","offsetRight","end","findPosX","obj","curleft","offsetParent","x","TimeSlider","SetValue","LeftPose","SetLeftPose","RightPose","SetRightPose","LeftOffset","SetLeftOffset","RightOffset","SetRightOffset","TimerButtonsInit","slider","querySelectorAll","SliderWidth","getComputedStyle","SliderPoseStart","SliderPoseEnd","LeftMargin","RightMargin","disabled","format","maxValue","minValue","name","onChangeStart","time","onChangeComplete","SetTimerValue","step","ChangeWorklogModal","ModalNewWorklogName","SetModalNewWorklogName","ModalNewIssueName","SetModalNewIssueName","ModalTimeLineValues","SetModalTimeLineValues","NewWorklogNameIsFilled","SetNewWorklogNameIsFilled","NewIssueNameIsFilled","SetNewIssueNameIsFilled","EmptyWorklogTimerMinutes","EmptyWorklogTimerEndHours","getHours","getMinutes","EmptyWorklogTimeValues","close","preventDefault","closeWorklogChangeModal","WorklogChangeModalIsOpen","ModalTitle","ModalSlider","ModalTextFields","NewWorklogContentContainer","NewWorklogContentTitle","marginCheck","NewWorklogContentInput","ModalInputError","Obj","NewWL","ChangeWorklogModalContainer","useStyles","makeStyles","theme","root","margin","spacing","LoginModal","classes","LoginFieldValue","SetLoginFieldValue","PasswordFieldValue","SetPasswordFieldValue","ErrorText","SetErrorText","autoComplete","InputsContainer","LoginContainer","TextField","error","label","helperText","PasswordContainer","Button","localStorage","setItem","reload","variant","Tooltip","TooltipIsShowed","TooltipContainer","TooltipContent","StatusAndCloseButtonContainer","TooltipInfo","TooltipStatusOk","TooltipStatusWarning","TooltipStatusDanger","hideTooltil","TooltipCloseButtonContainer","TooltipCloseButton","TooltipTextContainer","SetWorklogChangeModalIsOpen","SetFavoritesIsClicked","SetTooltipIsShowed","SetTooltipInfo","getItem","exact","path","render","CalendarAndButtonsContainer","MainWrapper","TImeTracking_and_Calendar","ReactDOM","basename","process","AppContainer","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.756228ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorklogInfoContainer\":\"WorkLog_WorklogInfoContainer__3vBgc\",\"WorklogBG\":\"WorkLog_WorklogBG__3k2mr\",\"WorklogBlockContainer\":\"WorkLog_WorklogBlockContainer__k3upz\",\"WorklogActive\":\"WorkLog_WorklogActive__1k6f0\",\"WorklogMoreButton\":\"WorkLog_WorklogMoreButton__1p1cl\",\"WorklogMoreVertical\":\"WorkLog_WorklogMoreVertical__2_aPH\",\"WorklogMoreVerticalActive\":\"WorkLog_WorklogMoreVerticalActive__LDc95\",\"WorklogBlockContainerActive\":\"WorkLog_WorklogBlockContainerActive__awb7y\",\"WLInfoButton\":\"WorkLog_WLInfoButton__2amtG\",\"WLInfoButtonActive\":\"WorkLog_WLInfoButtonActive__2T9on\",\"WLlinestroke\":\"WorkLog_WLlinestroke__2SPgZ\",\"WLlinestrokeActive\":\"WorkLog_WLlinestrokeActive__1wEjg\",\"ColorPointPose\":\"WorkLog_ColorPointPose__2v3Y0\",\"ColorPointPoseActive\":\"WorkLog_ColorPointPoseActive__3Ylmy\",\"WorklogBlock\":\"WorkLog_WorklogBlock__3MTew\",\"WorkTime\":\"WorkLog_WorkTime__35AHM\",\"WbcBlock\":\"WorkLog_WbcBlock__y2-DV\",\"StartTime\":\"WorkLog_StartTime__pO95X\",\"EndTime\":\"WorkLog_EndTime__6ivO2\",\"Minus\":\"WorkLog_Minus__3ysDf\",\"WorklogContentContainer\":\"WorkLog_WorklogContentContainer__Pdl3q\",\"JiraCode\":\"WorkLog_JiraCode__3cju4\",\"TaskField\":\"WorkLog_TaskField__3WyCE\",\"ProgressBarContainer\":\"WorkLog_ProgressBarContainer__2t-30\",\"TimerValueContainer\":\"WorkLog_TimerValueContainer__3bCeV\",\"TimerValue\":\"WorkLog_TimerValue__yfMTJ\",\"ControlButtonsContainer\":\"WorkLog_ControlButtonsContainer__cqNYJ\",\"PlayButton\":\"WorkLog_PlayButton__2v57W\",\"StopButton\":\"WorkLog_StopButton__1uogg\",\"NestingButtonPose\":\"WorkLog_NestingButtonPose__-jdPs\",\"NestingBG\":\"WorkLog_NestingBG__ALW79\",\"TwwContentText\":\"WorkLog_TwwContentText__1n6ua\",\"WorkLogSliderPose\":\"WorkLog_WorkLogSliderPose__2XB8U\",\"TwwContentImg\":\"WorkLog_TwwContentImg__2jKRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarContainer\":\"Calendar_CalendarContainer__I7VPR\",\"CalendarContent\":\"Calendar_CalendarContent__7J52V\",\"CalendarIcon\":\"Calendar_CalendarIcon__35v8Z\",\"CalendarDate\":\"Calendar_CalendarDate__1Fc1O\",\"DropDownCalendar\":\"Calendar_DropDownCalendar__rOVL_\",\"DropDownCalendarHeader\":\"Calendar_DropDownCalendarHeader__mMkPr\",\"DropDOwnCalendarContentContainer\":\"Calendar_DropDOwnCalendarContentContainer__1ekcD\",\"DropDownCalendarContent\":\"Calendar_DropDownCalendarContent__3lJK4\",\"DropDownCalendarFooterContainer\":\"Calendar_DropDownCalendarFooterContainer__dEO85\",\"DropDownCalendarFooter\":\"Calendar_DropDownCalendarFooter__3v4wV\",\"DropDownCalendarFooterElement\":\"Calendar_DropDownCalendarFooterElement__2gCAC\",\"DropDownCalendarProgressLineDanger\":\"Calendar_DropDownCalendarProgressLineDanger__k_JjF\",\"DropDownCalendarProgressLineOk\":\"Calendar_DropDownCalendarProgressLineOk__1Tedt\",\"DropDownCalendarProgressLineWarning\":\"Calendar_DropDownCalendarProgressLineWarning__3NPVW\",\"DropDownProgressStatus\":\"Calendar_DropDownProgressStatus__1Hffx\",\"DayBgClicked\":\"Calendar_DayBgClicked__10_xV\",\"DayBgCurrentDay\":\"Calendar_DayBgCurrentDay__35shH\",\"DayBgDefault\":\"Calendar_DayBgDefault__138Ia\",\"DropDownCalendarDay\":\"Calendar_DropDownCalendarDay__1TvNk\",\"DropDownCalendarDayFaded\":\"Calendar_DropDownCalendarDayFaded__3wmG5\",\"DropDownCalendarDayNumber\":\"Calendar_DropDownCalendarDayNumber__3_jQu\",\"DropDownCalendarDayNumberClicked\":\"Calendar_DropDownCalendarDayNumberClicked__YFrra\",\"DropDownCalendarDayNames\":\"Calendar_DropDownCalendarDayNames__qcAdr\",\"bg\":\"Calendar_bg__2aViC\"};","module.exports = __webpack_public_path__ + \"static/media/settings.6677f6c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/second_icon.07aaae67.svg\";","module.exports = __webpack_public_path__ + \"static/media/door.ffe979f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.462c6cf4.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-button.f9fec951.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineStroke\":\"LineStroke_lineStroke__2pI3T\"};","module.exports = __webpack_public_path__ + \"static/media/worklogMoreButtonBG.622f8f21.svg\";","module.exports = __webpack_public_path__ + \"static/media/worklogMoreVertical.37dfcf19.svg\";","module.exports = __webpack_public_path__ + \"static/media/danger_cp.49659e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning_cp.c2d1e025.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_cp.08ca5cee.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-up.0dc941bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop_button.1eb1b96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.07db24c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/separator-line.ec52537e.svg\";","module.exports = __webpack_public_path__ + \"static/media/stroke_vert.437b2938.svg\";","module.exports = __webpack_public_path__ + \"static/media/stroke_horiz.2e15c5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button_shadowed.6b0a0400.svg\";","module.exports = __webpack_public_path__ + \"static/media/TT-stop-button.3d2bae0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/TT-pause-button.8e7efc77.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar_active.daeb1a9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar_gray.aea2c3bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cyan.a07d9131.svg\";","module.exports = __webpack_public_path__ + \"static/media/Orange.47285204.svg\";","module.exports = __webpack_public_path__ + \"static/media/Purple.f1ff4eee.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.daeb1a9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Tooltip_Close_button.103aa85b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalWindow_modal__fVvss\",\"bg\":\"ModalWindow_bg__1aHSY\",\"ModalTitle\":\"ModalWindow_ModalTitle__1JK9n\",\"ModalSlider\":\"ModalWindow_ModalSlider__21VHJ\",\"ModalTextFields\":\"ModalWindow_ModalTextFields__1xPvH\",\"NewWorklogContentContainer\":\"ModalWindow_NewWorklogContentContainer__3XnfK\",\"NewWorklogContentTitle\":\"ModalWindow_NewWorklogContentTitle__3V0FN\",\"ModalInputError\":\"ModalWindow_ModalInputError__2UZpA\",\"NewWorklogContentInput\":\"ModalWindow_NewWorklogContentInput__3GqOw\",\"marginCheck\":\"ModalWindow_marginCheck__2Ndhx\",\"NewWorklogControlButtonsContainer\":\"ModalWindow_NewWorklogControlButtonsContainer__308FZ\",\"NewWorklogControlButtons\":\"ModalWindow_NewWorklogControlButtons__2T_1s\",\"NewWorklogSubmitButtonSize\":\"ModalWindow_NewWorklogSubmitButtonSize__281oc\",\"NewWorklogControlButton\":\"ModalWindow_NewWorklogControlButton__3fYoB\",\"NewWorklogSubmitButton\":\"ModalWindow_NewWorklogSubmitButton__r5R_e\",\"Err\":\"ModalWindow_Err__1uJOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimetrackingHeaderContainer\":\"TimeTracking_TimetrackingHeaderContainer__ON8us\",\"TTLayout\":\"TimeTracking_TTLayout__3veO9\",\"TTContent\":\"TimeTracking_TTContent__EuSq7\",\"TTMainContentRoot\":\"TimeTracking_TTMainContentRoot__1SdVC\",\"TimetrackingHeader\":\"TimeTracking_TimetrackingHeader__2_M3q\",\"TimeTrackingLogo\":\"TimeTracking_TimeTrackingLogo__3Gymw\",\"MoreIconSizeContainer\":\"TimeTracking_MoreIconSizeContainer__CtFXl\",\"MoreIconSize\":\"TimeTracking_MoreIconSize__3hJsc\",\"NewWorklogContainer\":\"TimeTracking_NewWorklogContainer__1Htpq\",\"NewWorklog\":\"TimeTracking_NewWorklog__3l1DI\",\"NewWorklogButtonSize\":\"TimeTracking_NewWorklogButtonSize__1ylBg\",\"NewWorklogButtonPose\":\"TimeTracking_NewWorklogButtonPose__MG6O9\",\"NewWorklogButtonDescriptionContainer\":\"TimeTracking_NewWorklogButtonDescriptionContainer__1V2I5\",\"NewWorklogButtonDescription\":\"TimeTracking_NewWorklogButtonDescription__29EUZ\",\"TTHorizStrokePose\":\"TimeTracking_TTHorizStrokePose__1WjLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"NavBar_navContainer__3sKle\",\"navLinksContainer\":\"NavBar_navLinksContainer__3UvKn\",\"NavLinksPosition\":\"NavBar_NavLinksPosition__2Jq8r\",\"NavLinks\":\"NavBar_NavLinks__22adz\",\"NavLinksItem\":\"NavBar_NavLinksItem__jDCJP\",\"ActiveLink\":\"NavBar_ActiveLink__2agTU\",\"NavIconsContainer\":\"NavBar_NavIconsContainer__2r9Fj\",\"NavIcons\":\"NavBar_NavIcons__1XxNH\",\"SmallIcons\":\"NavBar_SmallIcons__atSWj\",\"AvatarIcons\":\"NavBar_AvatarIcons__yrk4o\",\"item\":\"NavBar_item__fYm3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TooltipContainer\":\"Tooltip_TooltipContainer__1GAZV\",\"TooltipContent\":\"Tooltip_TooltipContent__3cqtU\",\"StatusAndCloseButtonContainer\":\"Tooltip_StatusAndCloseButtonContainer__3sV8b\",\"TooltipCloseButtonContainer\":\"Tooltip_TooltipCloseButtonContainer__XoffU\",\"TooltipStatusWarning\":\"Tooltip_TooltipStatusWarning__1X3_l\",\"TooltipStatusDanger\":\"Tooltip_TooltipStatusDanger__3M61h\",\"TooltipStatusOk\":\"Tooltip_TooltipStatusOk__3odhk\",\"TooltipTextContainer\":\"Tooltip_TooltipTextContainer__QJNFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainWrapper\":\"App_MainWrapper__3UVmf\",\"CalendarAndButtonsContainer\":\"App_CalendarAndButtonsContainer__1qylj\",\"CalendarAndButtons\":\"App_CalendarAndButtons__gi3vH\",\"TImeTracking_and_Calendar\":\"App_TImeTracking_and_Calendar__2wagN\",\"AppContainer\":\"App_AppContainer__3te8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesButtonBg\":\"Favorites_FavoritesButtonBg__3VELL\",\"FavoritesButtonBgActive\":\"Favorites_FavoritesButtonBgActive__dnGPa\",\"item\":\"Favorites_item__1W2Lk\",\"ActiveItem\":\"Favorites_ActiveItem__3T7aT\",\"FavoritesText\":\"Favorites_FavoritesText__2x9PR\",\"NoFavoritesIssuesContainer\":\"Favorites_NoFavoritesIssuesContainer__3tIde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeftLabel\":\"TimeSlider_LeftLabel__1cFI_\",\"RightLabel\":\"TimeSlider_RightLabel__itdny\",\"LeftLabelImage\":\"TimeSlider_LeftLabelImage__1Hskt\",\"LabelValue\":\"TimeSlider_LabelValue__3snvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SummaryWorklogInfo\":\"WorklogInfo_SummaryWorklogInfo__4-4NV\",\"DateBlockContainer\":\"WorklogInfo_DateBlockContainer__1o7Kx\",\"DateBlockSize\":\"WorklogInfo_DateBlockSize__2QW4p\",\"DownloadIcon\":\"WorklogInfo_DownloadIcon__3DNZg\",\"DateTime\":\"WorklogInfo_DateTime__3Z9a0\",\"Progress\":\"WorklogInfo_Progress__25Rn6\",\"WLlineStrokeContainer\":\"WorklogInfo_WLlineStrokeContainer__1Sgro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"WorklogDropDown_Container__3cI-Y\",\"ContentContainer\":\"WorklogDropDown_ContentContainer__o5kDH\",\"ContainerEl\":\"WorklogDropDown_ContainerEl__2dtp_\",\"ContainerFirstEl\":\"WorklogDropDown_ContainerFirstEl__1skhJ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\nimport {TSendWorklogsData} from \"../Data/WorkLogsReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:5000/api/1.0/'\r\n})\r\n\r\n\r\nexport type TDefRes = {\r\n    resultCode : number\r\n    messages: Array<string>\r\n    data : any\r\n}\r\n\r\nexport const API = {\r\n    async SendWorklogBlock(WorklogData : TSendWorklogsData) {\r\n        const response = await instance.post<TDefRes>(`Worklogs`,WorklogData)\r\n        return response.data\r\n    }\r\n}\r\n\r\n","import {GlobalState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {API} from \"../API/requests\"\r\n\r\nconst ADD_WORKLOG = \"WORKLOGS/ADD_WORKLOG\"\r\nconst DEL_WORKLOG = \"WORKLOGS/DEL_WORKLOG\"\r\nconst SET_IS_PLAYING_WORKLOG_BY_ID = \"WORKLOGS/SET_IS_PLAYING_WORKLOG_BY_ID\"\r\nconst CHANGE_WORKLOG = \"WORKLOGS/CHANGE_WORKLOG\"\r\nconst SET_WORKLOG_TO_CHANGE = \"WORKLOGS/SET_WORKLOG_TO_CHANGE\"\r\nconst ADD_TO_FAVORITE = \"WORKLOGS/ADD_TO_FAVORITE\"\r\nconst SET_WORKLOG_STATUS = \"WORKLOGS/SET_WORKLOG_STATUS\"\r\n\r\nexport const randomInteger = (min: number, max: number): number => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport type TNestingItem = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    Issue?: string\r\n    id: number\r\n    TimerValue: string | null\r\n    IsFavorites : boolean\r\n}\r\n\r\nexport type TBlockInfo = {\r\n    BlockCreatedDate: string\r\n    SummaryStatus: \"ok\" | \"warning\" | \"danger\" | string\r\n    SummaryTime: string | null\r\n    id: number\r\n}\r\n\r\nexport type TWorkLog = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    TimerValue: string | null\r\n    IsNesting?: boolean\r\n    NestingItems?: Array<TNestingItem>\r\n    id: number\r\n    Issue?: string\r\n    ParentId?: number\r\n    IsFavorites : boolean\r\n}\r\n\r\nexport type  TWorklogBlock = {\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n}\r\n\r\nexport type TTimerData = {\r\n    TimerValue: string\r\n    TimerIssue: string\r\n    TimerTaskField: string\r\n}\r\nexport type TSendWorklogsData = {\r\n    WorkLogsBlocks: TWorklogBlock\r\n}\r\n\r\nlet DefaultState = {\r\n    WorkLogsBlocks: [{\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Wed,September 28\",\r\n            SummaryStatus: \"ok\",\r\n            SummaryTime: \"07:05:00\",\r\n            id: 1\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"11:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Team standup\",\r\n            status: \"warning\",\r\n            IsNesting: false,\r\n            TimerValue: \"02:00:00\",\r\n            id: 444553452341241,\r\n            IsFavorites : false\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            IsNesting: false,\r\n            TimerValue: \"01:15:00\",\r\n            id: 213124124125122,\r\n            IsFavorites : false\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            JiraCode: \"JRM-310\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            IsNesting: true,\r\n            TimerValue: \"03:50:00\",\r\n            id: 2131241255143,\r\n            IsFavorites : false,\r\n            NestingItems: [{\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 123213213244,\r\n                TimerValue: \"01:30:00\",\r\n                IsFavorites : false,\r\n            }, {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 1232312351245,\r\n                TimerValue: \"03:20:00\",\r\n                IsFavorites : false\r\n            }]\r\n        }]\r\n    },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Wed,September 27\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 2\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Team standup\",\r\n                status: \"danger\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:00:00\",\r\n                id: 444553452341246,\r\n                IsFavorites : false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Meeting with QA\",\r\n                status: \"ok\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:15:00\",\r\n                id: 213124124125127,\r\n                IsFavorites : false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                IsNesting: true,\r\n                TimerValue: \"03:50:00\",\r\n                id: 2131241255148,\r\n                IsFavorites : false,\r\n                NestingItems: [{\r\n                    StartTime: \"11:30\",\r\n                    EndTime: \"13:00\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Marketing strategy\",\r\n                    status: \"warning\",\r\n                    id: 123213213249,\r\n                    TimerValue: \"01:30:00\",\r\n                    IsFavorites : false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Moodboarding\",\r\n                    status: \"ok\",\r\n                    id: 12323123512410,\r\n                    TimerValue: \"03:20:00\",\r\n                    IsFavorites : false\r\n                }]\r\n            }]\r\n        },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Wed,September 26\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 3\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Team standup\",\r\n                status: \"danger\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:00:00\",\r\n                id: 4445534523412411,\r\n                IsFavorites : false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Meeting with QA\",\r\n                status: \"ok\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:15:00\",\r\n                id: 2131241241251212,\r\n                IsFavorites : false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                IsNesting: true,\r\n                TimerValue: \"03:50:00\",\r\n                id: 21312412551413,\r\n                IsFavorites : false,\r\n                NestingItems: [{\r\n                    StartTime: \"11:30\",\r\n                    EndTime: \"13:00\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Marketing strategy\",\r\n                    status: \"warning\",\r\n                    id: 1232132132414,\r\n                    TimerValue: \"01:30:00\",\r\n                    IsFavorites : false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Moodboarding\",\r\n                    status: \"ok\",\r\n                    id: 12323123512415,\r\n                    TimerValue: \"03:20:00\",\r\n                    IsFavorites : false\r\n                }]\r\n            }]\r\n        },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Wed,September 25\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 4\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Team standup\",\r\n                status: \"danger\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:00:00\",\r\n                id: 4445534523412416,\r\n                IsFavorites : false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Meeting with QA\",\r\n                status: \"ok\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:15:00\",\r\n                id: 2131241241251217,\r\n                IsFavorites : false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                IsNesting: true,\r\n                TimerValue: \"03:50:00\",\r\n                id: 21312412551418,\r\n                IsFavorites : false,\r\n                NestingItems: [{\r\n                    StartTime: \"11:30\",\r\n                    EndTime: \"13:00\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Marketing strategy\",\r\n                    status: \"warning\",\r\n                    id: 1232132132419,\r\n                    TimerValue: \"01:30:00\",\r\n                    IsFavorites : false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Moodboarding\",\r\n                    status: \"ok\",\r\n                    id: 12323123512420,\r\n                    TimerValue: \"03:20:00\",\r\n                    IsFavorites : false\r\n                }]\r\n            }]\r\n        }, {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Tue,September 24\",\r\n                SummaryStatus: \"ok\",\r\n                SummaryTime: \"08:00:00\",\r\n                id: 5\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                JiraCode: \"JRM-310\",\r\n                TaskField: \"Team standup\",\r\n                status: \"ok\",\r\n                IsNesting: false,\r\n                TimerValue: \"01:00:00\",\r\n                id: 31232175895321,\r\n                IsFavorites : false\r\n            },\r\n                {\r\n                    StartTime: \"10:00\",\r\n                    EndTime: \"11:15\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Meeting with QA\",\r\n                    status: \"ok\",\r\n                    IsNesting: false,\r\n                    TimerValue: \"01:15:00\",\r\n                    id: 76967845623522,\r\n                    IsFavorites : false\r\n                }, {\r\n                    StartTime: \"11:00\",\r\n                    EndTime: \"13:15\",\r\n                    JiraCode: \"JRM-310\",\r\n                    TaskField: \"Company Branding\",\r\n                    status: \"warning\",\r\n                    IsNesting: false,\r\n                    TimerValue: \"03:50:00\",\r\n                    id: 12312434256623,\r\n                    IsFavorites : false\r\n                }\r\n            ]\r\n        }] as Array<TWorklogBlock>,\r\n    PlayingWorklog: {} as TWorkLog,\r\n    WorklogToChange: undefined as TWorkLog | undefined\r\n}\r\n\r\nexport const SearchWorklogBlock = (MonthName: string, DayNumber: number): Element | null => {\r\n    let StateCopy: DefaultWorklogsState = JSON.parse(JSON.stringify(DefaultState))\r\n    let WorklogsBlockToBeScrolled: HTMLElement | null = null\r\n    StateCopy.WorkLogsBlocks.map(el => {\r\n        let [Month, Day] = [...el.BlockInfo.BlockCreatedDate?.split(\",\")[1].split(\" \")]\r\n\r\n        if (Month === MonthName && Number.parseInt(Day) === DayNumber) {\r\n            WorklogsBlockToBeScrolled = document.getElementById(el.BlockInfo.id.toString())\r\n        }\r\n    })\r\n    return WorklogsBlockToBeScrolled\r\n}\r\n\r\n\r\ntype  DefaultWorklogsState = typeof DefaultState\r\n\r\n\r\ntype TWorklogsReducerActions = ReturnType<TAddWorklog> | ReturnType<TDeleteWorklog>\r\n    | ReturnType<TSetIsPlayingWorklogById> | ReturnType<TChangeWorklog>\r\n    | ReturnType<TSetWorklogToChange> | ReturnType<TAddToFavorite> | ReturnType<TSetWorklogStatus>\r\n\r\ntype TWorklogsThunks = ThunkAction<Promise<void>, GlobalState, unknown, TWorklogsReducerActions>\r\n\r\nconst WorklogsReducer = (state = DefaultState, action: TWorklogsReducerActions): DefaultWorklogsState => {\r\n\r\n    const GetWorklogsBlockCopy = () => {\r\n        return JSON.parse(JSON.stringify(state.WorkLogsBlocks))\r\n    }\r\n\r\n\r\n    const FindWorklogById = (id: number | undefined, ParentId?: number | null) => {\r\n        let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n        let SoughtWorklog = {} as TWorkLog\r\n        let WorklogBlockIndex = undefined as number | undefined\r\n        let WorklogIndex = undefined as number | undefined\r\n        let NestingWorklogIndex = undefined as number | undefined\r\n\r\n        WorklogsBlocksCopy.map((WorklogBlock, Index) => {\r\n            WorklogBlock.Worklogs.map((Worklog, WLIndex) => {\r\n\r\n                if (ParentId) {\r\n                    Worklog.NestingItems?.map((NestingItem, NestingIndex) => {\r\n                        if (NestingItem.id === id) {\r\n                            let SoughtNestingItem = {\r\n                                ...NestingItem,\r\n                                ParentId\r\n                            }\r\n                            //@ts-ignore\r\n                            SoughtWorklog = SoughtNestingItem\r\n                            WorklogBlockIndex = Index\r\n                            NestingWorklogIndex = NestingIndex\r\n                            WorklogIndex = WLIndex\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (Worklog.id === id) {\r\n                        WorklogBlockIndex = Index\r\n                        SoughtWorklog = Worklog\r\n                        WorklogIndex = WLIndex\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        return {SoughtWorklog, WorklogBlockIndex, WorklogIndex, NestingWorklogIndex}\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_WORKLOG: {\r\n\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n\r\n            let WorklogToCreate: TWorkLog\r\n            let EmptyWorklog: TWorkLog = {\r\n                StartTime: null,\r\n                EndTime: null,\r\n                id: randomInteger(0, 10000),\r\n                NestingItems: undefined,\r\n                TaskField: null,\r\n                Issue: undefined,\r\n                TimerValue: \"00:00:00\",\r\n                JiraCode: \"JRM-310\",\r\n                status: \"danger\",\r\n                IsNesting: false,\r\n                ParentId: undefined,\r\n                IsFavorites : !!action.IsFavorites\r\n            }\r\n\r\n            action.NewWorklog\r\n                ? WorklogToCreate = action.NewWorklog\r\n                : WorklogToCreate = EmptyWorklog\r\n\r\n            if (action.to) {\r\n                WorklogsBlocksCopy.map(el => {\r\n                    if (el.BlockInfo.BlockCreatedDate === action.to) {\r\n                        el.Worklogs.unshift(WorklogToCreate)\r\n\r\n                    }\r\n                })\r\n            } else {\r\n                WorklogsBlocksCopy[0].Worklogs.unshift(WorklogToCreate)\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                PlayingWorklog: WorklogToCreate\r\n            }\r\n        }\r\n\r\n        case SET_IS_PLAYING_WORKLOG_BY_ID: {\r\n            let SoughtWorklog = FindWorklogById(action.ElementId, action.ParentId).SoughtWorklog\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                PlayingWorklog: action.IsPlaying ?\r\n                    SoughtWorklog\r\n                    : {}\r\n            }\r\n        }\r\n        case CHANGE_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n                if (action.parentId) {\r\n                    if (Worklog.id === action.NewWlParentId) {\r\n                        Worklog.NestingItems?.map(NestingItem => {\r\n                            if (NestingItem.id === action.WorkLogId) {\r\n                                NestingItem.TimerValue = action.NewWorklog.TimerValue\r\n                                NestingItem.Issue = action.NewWorklog.Issue\r\n                                NestingItem.TaskField = action.NewWorklog.TaskField\r\n                                NestingItem.EndTime = action.NewWorklog.EndTime\r\n                                NestingItem.StartTime = action.NewWorklog.StartTime\r\n                                //  NestingItem.EndTime = action.NewWorklog.EndTime\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (Worklog.id === action.WorkLogId) {\r\n                        Worklog.TimerValue = action.NewWorklog.TimerValue\r\n                        Worklog.Issue = action.NewWorklog.Issue\r\n                        Worklog.TaskField = action.NewWorklog.TaskField\r\n                        Worklog.StartTime = action.NewWorklog.StartTime\r\n                        Worklog.EndTime = action.NewWorklog.EndTime\r\n                        Worklog.status = action.NewWorklog.status\r\n\r\n                        // Worklog.EndTime = action.NewWorklog.EndTime\r\n                    }\r\n                }\r\n            }))\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DEL_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let NewWorklogs: Array<Array<TWorkLog>> = []\r\n            let NewNestingWorklogs: Array<Array<TNestingItem> | undefined> = []\r\n\r\n            WorklogsBlocksCopy.map((el, index) => {\r\n                if (action.DelParentId) {\r\n                    el.Worklogs.map((Worklog, WLIndex) => {\r\n                        if (Worklog.id === action.DelParentId) {\r\n                            NewNestingWorklogs.push(Worklog.NestingItems?.filter(NestingItem => NestingItem.id !== action.DelWorklogId))\r\n                            WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems = NewNestingWorklogs[index]\r\n                        }\r\n                    })\r\n                } else {\r\n                    NewWorklogs.push(el.Worklogs.filter(WL => WL.id !== action.DelWorklogId))\r\n                    WorklogsBlocksCopy[index].Worklogs = NewWorklogs[index]\r\n                }\r\n\r\n            })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case SET_WORKLOG_TO_CHANGE : {\r\n            return {\r\n                ...state,\r\n                WorklogToChange: action.WorklogToChange ? action.WorklogToChange : undefined\r\n            }\r\n        }\r\n        case ADD_TO_FAVORITE : {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let {SoughtWorklog, ...Indexes} = FindWorklogById(action.WorklogId, action.ParentId)\r\n            if(action.ParentId){\r\n                if(Indexes.WorklogBlockIndex !== undefined && Indexes.WorklogIndex !== undefined && Indexes.NestingWorklogIndex !== undefined){\r\n                    //@ts-ignore\r\n                  WorklogsBlocksCopy[Indexes.WorklogBlockIndex].Worklogs[Indexes.WorklogIndex].NestingItems[Indexes.NestingWorklogIndex].IsFavorites = true\r\n                }\r\n            }else {\r\n                if (Indexes.WorklogBlockIndex !== undefined && Indexes.WorklogIndex !== undefined) {\r\n                    WorklogsBlocksCopy[Indexes.WorklogBlockIndex].Worklogs[Indexes.WorklogIndex].IsFavorites = true\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case SET_WORKLOG_STATUS: {\r\n\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            if(action.options.target === \"worklog\"){\r\n                WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n                    if (Worklog.id === action.options.id) Worklog.status = action.options.status\r\n                }))\r\n            } else {\r\n                WorklogsBlocksCopy.map(WB=>{\r\n                    if(WB.BlockInfo.id === action.options.id) WB.BlockInfo.SummaryStatus = action.options.status\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddWorklog = (NewWorklog ?: TWorkLog, to?: string, IsFavorites?: boolean) => {\r\n\r\n    return {type: ADD_WORKLOG, NewWorklog, to, IsFavorites} as const\r\n}\r\nexport type TAddWorklog = typeof AddWorklog\r\n\r\nexport const DeleteWorklog = (DelWorklogId: number, DelParentId: number | null = null) => {\r\n    return {type: DEL_WORKLOG, DelWorklogId, DelParentId} as const\r\n}\r\nexport type TDeleteWorklog = typeof DeleteWorklog\r\n\r\nexport const SetIsPlayingWorklogById = (IsPlaying: boolean, ElementId?: number,  ParentId: number | null = null) => {\r\n    return {type: SET_IS_PLAYING_WORKLOG_BY_ID, IsPlaying, ElementId, ParentId} as const\r\n}\r\nexport type TSetIsPlayingWorklogById = typeof SetIsPlayingWorklogById\r\n\r\nexport const ChangeWorklog = (WorkLogId: number,parentId : number, NewWorklog: TWorkLog, NewWlParentId: number | null = null) => {\r\n\r\n    return {type: CHANGE_WORKLOG, WorkLogId, NewWorklog, parentId, NewWlParentId} as const\r\n}\r\nexport type TChangeWorklog = typeof ChangeWorklog\r\n\r\nexport const SetWorklogToChange = (WorklogToChange: TWorkLog | undefined = undefined) => {\r\n    return {type: SET_WORKLOG_TO_CHANGE, WorklogToChange} as const\r\n}\r\nexport type TSetWorklogToChange = typeof SetWorklogToChange\r\n\r\nexport const AddToFavorite = (WorklogId: number,  ParentId: number | null = null) => {\r\n    return {type: ADD_TO_FAVORITE, WorklogId, ParentId} as const\r\n}\r\nexport type TAddToFavorite = typeof AddToFavorite\r\n\r\n\r\nexport const SendWorklogBlockThunk = (WorklogBlockData: TSendWorklogsData): TWorklogsThunks => async (dispatch) => {\r\n    console.log(WorklogBlockData)\r\n    const SendNewMessageResult = await API.SendWorklogBlock(WorklogBlockData)\r\n    // if (SendNewMessageResult.resultCode === 0) {\r\n    //     dispatch(GetWorklogs(WorklogBlockId))\r\n    // }\r\n}\r\nexport type TSendWorklogBlockThunk = typeof SendWorklogBlockThunk\r\n\r\nexport const SetWorklogStatus = (options: {\r\n    target: \"worklog\" | \"worklogblock\",\r\n    id: number,\r\n    status: \"ok\" | \"danger\" | \"warning\"\r\n}) => {\r\n    return {type: SET_WORKLOG_STATUS, options} as const\r\n}\r\nexport type TSetWorklogStatus = typeof SetWorklogStatus\r\n\r\n\r\nexport default WorklogsReducer","import {randomInteger} from \"./WorkLogsReducer\";\r\n\r\n\r\nconst SET_CLICKED_MONTH_DAYS = 'CALENDAR/SET_CLICKED_MONTH_DAYS'\r\nconst months = ['January', 'February', 'March', 'April', 'May',\r\n    'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst GetCurrentDate = (): TCurrentDate => {\r\n    let date = new Date()\r\n    let currentyear = date.getFullYear()\r\n    let currentmonth = months[date.getMonth()]\r\n    let currentday = date.getDate()\r\n\r\n    let CurrentDate: TCurrentDate = {\r\n        CurrentYear: currentyear,\r\n        //@ts-ignore\r\n        CurrentMonth: currentmonth,\r\n        CurrentDay: currentday\r\n    }\r\n    return CurrentDate\r\n\r\n}\r\n\r\n\r\nconst RandomStatus = (arr: Array<any>) => {\r\n    if (arr.length <= 0) {\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    }\r\n    let rand = Math.floor(Math.random() * arr.length)\r\n    return arr[rand]\r\n}\r\n\r\n\r\nconst RandomDaysCreate = (statuses: Array<string> = [], IntroDaysCount: number, OutroDaysCount: number, DaysCount: number) => {\r\n    let MaxDaysLength = 35\r\n    let OutArr: Array<TDay> = []\r\n    let IntroDaysArr: Array<TDay> = []\r\n    let OutroDaysArr: Array<TDay> = []\r\n    let DaysArr: Array<TDay> = []\r\n\r\n    if (IntroDaysCount + OutroDaysCount + DaysCount > MaxDaysLength) {\r\n        throw new RangeError(`getRandom: maximum of days it  a ${MaxDaysLength}, please, enter the correct all days counts `);\r\n    } else {\r\n\r\n        for (let j = 1; j <= IntroDaysCount; j++) {\r\n            IntroDaysArr.push({\r\n                Signature: \"intro\",\r\n                DayNumber: j,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let n = 1; n <= DaysCount; n++) {\r\n            DaysArr.push({\r\n                Signature: \"main\",\r\n                DayNumber: n,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let p = 1; p <= OutroDaysCount; p++) {\r\n            OutroDaysArr.push({\r\n                Signature: \"outro\",\r\n                DayNumber: p,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        OutArr.push(...IntroDaysArr)\r\n        OutArr.push(...DaysArr)\r\n        OutArr.push(...OutroDaysArr)\r\n        return OutArr\r\n    }\r\n}\r\n\r\n\r\nexport type TDay = {\r\n    Signature: string\r\n    DayNumber: number\r\n    DayStatus: string\r\n    id: number\r\n}\r\n\r\nexport  type TCalendar = Array<TDay>\r\n\r\nexport type TCalendars = {\r\n    January: TCalendar\r\n    February: TCalendar\r\n    March: TCalendar\r\n    April: TCalendar\r\n    May: TCalendar\r\n    June: TCalendar\r\n    July: TCalendar\r\n    August: TCalendar\r\n    September: TCalendar\r\n    October: TCalendar\r\n    November: TCalendar\r\n    December: TCalendar\r\n}\r\nexport type TClickedDay = {\r\n    id: number,\r\n    DayNumber: string | number\r\n    MonthName: string\r\n} | null\r\n\r\nexport type TCurrentDate = {\r\n    CurrentYear: number | string\r\n    CurrentMonth: keyof typeof DefaultState.Calendars\r\n    CurrentDay: number | string\r\n}\r\n\r\n\r\nlet DefaultState = {\r\n    Calendars: {\r\n        January: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        February: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        March: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 4, 30),\r\n        April: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        May: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        June: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        July: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        August: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        September: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        October: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 3, 31),\r\n        November: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        December: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 2, 31)\r\n    } as TCalendars,\r\n    ClickedMonthDay: null as TClickedDay,\r\n    CurrentDate: GetCurrentDate() as TCurrentDate\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<TSetClickedMonthDay>\r\n\r\nconst CalendarReducer = (state = DefaultState, action: TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_CLICKED_MONTH_DAYS : {\r\n            return {\r\n                ...state,\r\n                ClickedMonthDay: action.Day\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetClickedMonthDay = (Day: TClickedDay) => {\r\n    return {type: SET_CLICKED_MONTH_DAYS, Day} as const\r\n}\r\nexport type TSetClickedMonthDay = typeof SetClickedMonthDay\r\n\r\nexport default CalendarReducer","import { combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport CalendarReducer from \"./CalendarReducer\";\r\nimport WorkLogsReducer from \"./WorkLogsReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n form : formReducer,\r\n CalendarData : CalendarReducer,\r\n WorklogsData  : WorkLogsReducer,\r\n})\r\n\r\ntype Treducers = typeof reducers\r\n\r\nexport type GlobalState = ReturnType<Treducers>\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\nexport default store\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HS from \"./NavBar.module.css\"\r\nimport settings from \"../../assets/imgs/settings.svg\"\r\nimport FAQ from \"../../assets/imgs/second_icon.svg\"\r\nimport LogOutIcon from \"../../assets/imgs/door.svg\"\r\nimport AvatarIcon from \"../../assets/imgs/avatar.svg\"\r\n\r\n\r\nexport type TNavBarProps = {}\r\n\r\nconst NavBar: React.FC<TNavBarProps> = (props) => {\r\n    return (<div className={HS.navContainer}>\r\n        <div className={HS.navLinksContainer}>\r\n            <div className={HS.NavLinksPosition}>\r\n                <div className={HS.NavLinks}>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Home/All\">\r\n                            Home\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Issues/\">\r\n                            Issues\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Filter/\">\r\n                            Filter\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={HS.item}>\r\n                        <NavLink to=\"/Projects/\">\r\n                            Projects\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={HS.NavIconsContainer}>\r\n            <div className={HS.NavIcons}>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={settings} alt=\"settings\"/>\r\n                </div>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={FAQ} alt=\"info\"/>\r\n                </div>\r\n                <div className={HS.SmallIcons}>\r\n                    <img src={LogOutIcon} alt=\"door1\"/>\r\n                </div>\r\n                <div className={HS.AvatarIcons}>\r\n                    <img className=\"\" src={AvatarIcon} alt=\"avatar_icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\nexport default NavBar","export const DifferenceInTime = (TimesArr = []) => {\r\n    let firstDate = TimesArr[0];\r\n    let secondDate = TimesArr[1];\r\n    let getDate = (string) => new Date(0, 0, 0, string.split(':')[0], string.split(':')[1]);\r\n    let different = (getDate(secondDate) - getDate(firstDate));\r\n    let differentRes, hours, minuts;\r\n    if (different > 0) {\r\n        differentRes = different;\r\n        hours = Math.floor((differentRes % 86400000) / 3600000);\r\n        minuts = Math.round(((differentRes % 86400000) % 3600000) / 60000);\r\n    } else {\r\n        differentRes = Math.abs((getDate(firstDate) - getDate(secondDate)));\r\n        hours = Math.floor(24 - (differentRes % 86400000) / 3600000);\r\n        minuts = Math.round(60 - ((differentRes % 86400000) % 3600000) / 60000);\r\n    }\r\n    if(minuts < 10 ){\r\n        minuts =  minuts + \"0\"\r\n    }\r\n    if (hours < 10) {\r\n        return \"0\" + hours + ':' + minuts + \":00\";\r\n    } else {\r\n        return hours + ':' + minuts + \":00\";\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport LS from \"./LineStroke.module.css\"\r\n\r\nexport type TAllProps = {\r\n\r\n}\r\n\r\nconst LineStroke : React.FC<TAllProps> = (props) => {\r\n    return ( <div className={LS.lineStroke}> </div>)\r\n}\r\n\r\nexport default LineStroke","import React, {Dispatch} from \"react\";\r\nimport WLDD from \"./WorklogDropDown.module.css\"\r\nimport {randomInteger, TAddToFavorite, TAddWorklog, TNestingItem, TWorkLog} from \"../../../Data/WorkLogsReducer\";\r\nimport {TComponentToDraw} from \"../WorkLogsContainer\";\r\n\r\nexport type TWorklogDropDownProps = {\r\n    onHideMenu : ()=> void\r\n    OnDeleteModalOpen : (e : React.MouseEvent<HTMLElement>)=> void\r\n    SetDeleteModalParams : Dispatch<any>\r\n    ParentId ? : number\r\n    PlayingWorklog: TWorkLog\r\n    AddToFavorite : TAddToFavorite\r\n    WorklogId : number\r\n    ComponentToDraw : TComponentToDraw\r\n    AddWorklog : TAddWorklog\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue: string | null\r\n    IsNesting?: boolean\r\n    Issue?: string\r\n    NestingItems?: Array<TNestingItem>\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    NestingIsShowing: boolean\r\n    IsFavorites : boolean\r\n}\r\n\r\nconst WorkLogDropDown: React.FC<TWorklogDropDownProps> = (props) => {\r\n\r\n    const OnDeleteModalOpenContainer = (e : React.MouseEvent<HTMLElement>)=>{\r\n        if(!props.PlayingWorklog.id && props.ComponentToDraw === \"Worklogs\"){\r\n            props.SetDeleteModalParams({\r\n                WorkLogToDeleteId : props.WorklogId,\r\n                ParentId : props.ParentId\r\n            })\r\n\r\n            props.OnDeleteModalOpen(e)\r\n        }\r\n    }\r\n    const OnAddToFavorites = () =>{\r\n        if(!props.PlayingWorklog.id && props.ComponentToDraw === \"Worklogs\"){\r\n            if(props.ParentId)  props.AddToFavorite(props.WorklogId,props.ParentId)\r\n            else props.AddToFavorite(props.WorklogId)\r\n        }\r\n\r\n    }\r\n\r\n    const OnDuplicateWorklog = () =>{\r\n   if(!props.PlayingWorklog.id && props.ComponentToDraw === \"Worklogs\" ) {\r\n            let CurrentWorklog : TWorkLog = {\r\n                id: randomInteger(0, 10000),\r\n                TaskField: props.TaskField,\r\n                Issue: props.Issue,\r\n                StartTime: props.StartTime,\r\n                EndTime: props.EndTime,\r\n                NestingItems: props.NestingItems,\r\n                JiraCode: props.JiraCode,\r\n                IsNesting: props.IsNesting,\r\n                status: props.status,\r\n                TimerValue: \"00:00:00\",\r\n                IsFavorites : props.IsFavorites\r\n            }\r\n            props.AddWorklog(CurrentWorklog)\r\n        }\r\n    }\r\n\r\n\r\n    return (<div onMouseLeave={props.onHideMenu} className={WLDD.Container}>\r\n        <div onClick={props.onHideMenu} className={WLDD.ContentContainer}>\r\n            <div className={WLDD.ContainerFirstEl}>\r\n                Jira Code\r\n            </div>\r\n            <div onClick={OnDuplicateWorklog} className={WLDD.ContainerEl}>\r\n                Duplicate\r\n            </div>\r\n            <div onClick={OnAddToFavorites} className={WLDD.ContainerEl}>\r\n                Add to Favorite\r\n            </div>\r\n            <div onClick={OnDeleteModalOpenContainer} className={WLDD.ContainerEl}>\r\n                Delete\r\n            </div>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\nexport default WorkLogDropDown","import React from \"react\";\r\nimport DS from \"./DeleteConfirm.module.css\"\r\nimport ConfirmButton from \"../../assets/imgs/confirmButton.svg\"\r\nimport DeclineButton from \"../../assets/imgs/declineButton.svg\"\r\nimport MS from \"../ModalWindow/ModalWindow.module.css\";\r\nimport {TDeleteWorklog} from \"../../Data/WorkLogsReducer\";\r\nimport {TDeleteModalParams} from \"../WorkLogs/WorkLogsBlock\";\r\n\r\n\r\nexport type TDeleteWorklogConfirmModalProps = {\r\n  isOpen : boolean\r\n    onClose: ()=> void\r\n    WorkLogToDeleteId : number\r\n    DeleteWorklog : TDeleteWorklog\r\n    DeleteModalParams : TDeleteModalParams | undefined\r\n}\r\n\r\nconst DeleteWorklogConfirmModal : React.FC<TDeleteWorklogConfirmModalProps> = (props) => {\r\n    const OnModalSubmit = (e: React.MouseEvent<HTMLElement>) => {\r\n        if(props.DeleteModalParams)\r\n        props.DeleteWorklog(props.DeleteModalParams.WorkLogToDeleteId,props.DeleteModalParams.ParentId)\r\n        props.onClose()\r\n        debugger\r\n    }\r\n        if (!props.isOpen) return null\r\n\r\n        return (\r\n            <div className=\"DeleteConfirmModal\">\r\n                <div className={DS.modal}>\r\n                    <div className={DS.ModalTextContainer}>\r\n                        Are you sure you want to delete the worklog?\r\n                    </div>\r\n                    <div className={DS.NewWorklogControlButtonsContainer}>\r\n                        <div className={DS.NewWorklogControlButtons}>\r\n                            <div onClick={OnModalSubmit} className=\"modal-open\">\r\n                                <img className={DS.NewWorklogSubmitButtonSize}\r\n                                     src={ConfirmButton} alt={\"submit\"}/>\r\n                            </div>\r\n                            <div className=\"modal-close\">\r\n                                <img onClick={props.onClose} className={DS.NewWorklogControlButton}\r\n                                     src={DeclineButton} alt={\"decline\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={MS.bg} onClick={e => props.onClose}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default DeleteWorklogConfirmModal\r\n\r\n","import React from \"react\";\r\nimport {\r\n    TAddToFavorite,\r\n    TAddWorklog, TDeleteWorklog, TNestingItem,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogToChange, TTimerData,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport {TComponentToDraw} from \"./WorkLogsContainer\";\r\nimport WorkLog from \"./WorkLog\";\r\nimport {TDeleteModalParams} from \"./WorkLogsBlock\";\r\n\r\n\r\nexport type TNestingWorkLogProps = {\r\n    NestingItems?: Array<TNestingItem>\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    ParentId?: number\r\n    SetDeleteModalParams: any\r\n    OnDeleteModalOpen: (e: React.MouseEvent<HTMLElement>) => void\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    openWorklogChangeModal: () => void\r\n    AddToFavorite: TAddToFavorite\r\n    ComponentToDraw : TComponentToDraw\r\n    AddWorklog : TAddWorklog\r\n    OnDeleteModalClose: () => void\r\n    DeleteModalIsOpen: boolean\r\n    DeleteWorklog: TDeleteWorklog\r\n    DeleteModalParams: TDeleteModalParams | undefined\r\n    TimerData: TTimerData | undefined\r\n    id : number\r\n    IsFavorites : boolean\r\n}\r\n\r\nconst NestingWorkLog: React.FC<TNestingWorkLogProps> = (props) => {\r\n\r\n    return (<div className=\"NestedItem\">\r\n        {props.NestingItems?.map(NestingItem=>{\r\n            return(\r\n                <WorkLog {...props}\r\n                        key={NestingItem.id}\r\n                         StartTime={NestingItem.StartTime}\r\n                         EndTime={NestingItem.EndTime}\r\n                         JiraCode={NestingItem.JiraCode}\r\n                         TaskField={NestingItem.TaskField}\r\n                         TimerValue={NestingItem.TimerValue}\r\n                         status={NestingItem.status}\r\n                         id={NestingItem.id}\r\n                         IsNesting={false}\r\n                         ParentId={props.id}\r\n                         IsFavorites={NestingItem.IsFavorites}\r\n                        />\r\n            )})\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default NestingWorkLog","import React, {Dispatch, useState} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport PlayButton from \"../../assets/imgs/play-button.svg\"\r\nimport LineStroke from \"../LineStroke/LineStroke\";\r\nimport WLMoreButtonBG from \"../../assets/imgs/worklogMoreButtonBG.svg\"\r\nimport WLMoreButtonVertical from \"../../assets/imgs/worklogMoreVertical.svg\"\r\nimport CP_danger from \"../../assets/imgs/danger_cp.svg\"\r\nimport CP_warning from \"../../assets/imgs/warning_cp.svg\"\r\nimport CP_ok from \"../../assets/imgs/ok_cp.svg\"\r\nimport {\r\n    TSetIsPlayingWorklogById,\r\n    TNestingItem,\r\n    TWorkLog,\r\n    TDeleteWorklog,\r\n    TSetWorklogToChange, TTimerData, TAddToFavorite, TAddWorklog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport ArrowUp from \"../../assets/imgs/arrow-up.svg\"\r\nimport WorkLogDropDown from \"./DropDown/WorklogDropDown\";\r\nimport StopButton from \"../../assets/imgs/stop_button.svg\"\r\nimport DeleteWorklogConfirmModal from \"../DeleteConfirmModal/DeleteConfirmModal\";\r\nimport {TDeleteModalParams} from \"./WorkLogsBlock\";\r\nimport {TComponentToDraw} from \"./WorkLogsContainer\";\r\nimport NestingWorkLog from \"./NestingWorkLog\";\r\n\r\n\r\nexport type TWorklogProps = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    JiraCode: string | null\r\n    TaskField: string | null\r\n    TimerValue: string | null\r\n    IsNesting?: boolean\r\n    Issue?: string\r\n    IsFavorites : boolean\r\n    NestingItems?: Array<TNestingItem>\r\n    status: \"ok\" | \"warning\" | \"danger\" | string\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    id: number\r\n    OnDeleteModalOpen: (e: React.MouseEvent<HTMLElement>) => void\r\n    OnDeleteModalClose: () => void\r\n    DeleteModalIsOpen: boolean\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetDeleteModalParams: Dispatch<any>\r\n    DeleteModalParams: TDeleteModalParams | undefined\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    ParentId?: number\r\n    openWorklogChangeModal: () => void\r\n    TimerData: TTimerData | undefined\r\n    AddToFavorite: TAddToFavorite\r\n    ComponentToDraw: TComponentToDraw\r\n    AddWorklog: TAddWorklog\r\n}\r\n\r\nconst WorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    let [ShowMenu, SetShowMenu] = useState<boolean>()\r\n    let [NestingIsShowing, SetNestingIsShowing] = useState(false)\r\n\r\n    const OnShowNestingWorklogs = () => {\r\n        SetNestingIsShowing(true)\r\n    }\r\n\r\n    const OnHideNestingWorklogs = () => {\r\n        SetNestingIsShowing(false)\r\n    }\r\n    const OnShowMenu = () => {\r\n        SetShowMenu(true)\r\n    }\r\n    const OnHideMenu = () => {\r\n        SetShowMenu(false)\r\n    }\r\n\r\n    const onPlayButtonClicked = () => {\r\n\r\n        !props.PlayingWorklog.id && props.SetIsPlayingWorklogById(true, props.id,props.ParentId)\r\n\r\n    }\r\n    const onStopButtonClicked = () => {\r\n        props.SetIsPlayingWorklogById(false, props.id)\r\n        // add onOpenModal\r\n    }\r\n\r\n    const OnSetWorklogToChange = () => {\r\n        if (!props.PlayingWorklog.id) {\r\n            let keys = [\"id\", \"StartTime\", \"TaskField\", \"TimerValue\", \"EndTime\"\r\n                , \"status\", \"IsNesting\", \"JiraCode\", \"NestingItems\", \"Issue\", \"ParentId\"]\r\n            let WorklogToChange = {} as TWorkLog\r\n            for (let i = 0; i < keys.length; i++) {\r\n                //@ts-ignore\r\n                WorklogToChange[`${(keys[i])}`] = props[keys[i]]\r\n            }\r\n            props.SetWorklogToChange(WorklogToChange)\r\n            props.openWorklogChangeModal()\r\n        }\r\n    }\r\n\r\n    return  (<div className={WLS.WorkLogs}>\r\n\r\n        <div className={props.id === props.PlayingWorklog.id\r\n            ? WLS.WorklogBlockContainerActive\r\n            : WLS.WorklogBlockContainer}>\r\n            <div className=\"WorklogBG\">\r\n                <div className={WLS.WorklogActive}>\r\n                    <div className={WLS.WorklogBlock}>\r\n\r\n                        {props.IsNesting\r\n                            ? <div className={WLS.NestingButtonPose}>\r\n                                {NestingIsShowing\r\n                                    ? <div onClick={OnHideNestingWorklogs} className={WLS.NestingBG}><img\r\n                                        className={WLS.TwwContentImg} src={ArrowUp} alt=\"\"/>\r\n                                    </div>\r\n\r\n                                    : <div onClick={OnShowNestingWorklogs} className={WLS.NestingBG}> <span\r\n                                        className={WLS.TwwContentText}>\r\n                                {props.NestingItems?.length}\r\n                            </span>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n\r\n                            : props.StartTime && props.EndTime ? <div className={WLS.WorkTime}>\r\n                                    <div className={WLS.StartTime}>\r\n                                        {props.StartTime}\r\n                                    </div>\r\n                                    <div className={WLS.Minus}>\r\n                                        -\r\n                                    </div>\r\n                                    <div className={WLS.EndTime}>\r\n                                        {props.EndTime}\r\n                                    </div>\r\n                                </div>\r\n                                : <div> </div>}\r\n\r\n                        <div className={props.PlayingWorklog.id === props.id\r\n                            ? WLS.ColorPointPoseActive\r\n                            : WLS.ColorPointPose}>\r\n                            <img src={props.status === \"ok\"\r\n                                ? CP_ok : props.status === \"warning\"\r\n                                    ? CP_warning : props.status === \"danger\"\r\n                                        ? CP_danger : undefined} alt=\"\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div onClick={OnSetWorklogToChange} className={WLS.WorklogContentContainer}>\r\n                            <div className={WLS.JiraCode}>\r\n                                {props.JiraCode}\r\n                            </div>\r\n                            <div className={WLS.TaskField}>\r\n                                {props.TaskField}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className={WLS.TimerValueContainer}>\r\n                            <div className={WLS.TimerValue}>{props.TimerValue}</div>\r\n                        </div>\r\n\r\n                        {props.PlayingWorklog.id === props.id\r\n\r\n                            ? <div className={WLS.ControlButtonsContainer}>\r\n                                <div onClick={onStopButtonClicked} className={WLS.StopButton}>\r\n                                    <img src={StopButton} alt=\"stop-button\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            : <div className={WLS.ControlButtonsContainer}>\r\n                                <div onClick={onPlayButtonClicked} className={WLS.PlayButton}>\r\n                                    <img src={PlayButton} alt=\"play-button\"/>\r\n                                </div>\r\n                            </div>}\r\n\r\n                        <div className=\"WLMoreContainer\">\r\n                            <div  className={props.PlayingWorklog.id === props.id\r\n                                ? WLS.WLInfoButtonActive\r\n                                : WLS.WorklogMoreButton}>\r\n                                <img src={WLMoreButtonBG} alt=\"\"/>\r\n                            </div>\r\n                            <div onClick={OnShowMenu} className={props.PlayingWorklog.id === props.id\r\n                                ? WLS.WorklogMoreVerticalActive\r\n                                :WLS.WorklogMoreVertical}>\r\n                                <img src={WLMoreButtonVertical} alt=\"more-vertical\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <DeleteWorklogConfirmModal DeleteModalParams={props.DeleteModalParams} DeleteWorklog={props.DeleteWorklog}\r\n                                       WorkLogToDeleteId={props.id} isOpen={props.DeleteModalIsOpen}\r\n                                       onClose={props.OnDeleteModalClose}/>\r\n\r\n            <div className={props.PlayingWorklog.id === props.id\r\n                ? WLS.WLlinestrokeActive\r\n                : WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </div>\r\n        {ShowMenu && <WorkLogDropDown ParentId={props.ParentId}\r\n                                      SetDeleteModalParams={props.SetDeleteModalParams}\r\n                                      PlayingWorklog={props.PlayingWorklog}\r\n                                      WorklogId={props.id}\r\n                                      OnDeleteModalOpen={props.OnDeleteModalOpen} onHideMenu={OnHideMenu}\r\n                                      AddToFavorite={props.AddToFavorite}\r\n                                      ComponentToDraw={props.ComponentToDraw}\r\n                                      AddWorklog={props.AddWorklog}\r\n                                      TimerValue={props.TimerValue}\r\n                                      NestingIsShowing={NestingIsShowing}\r\n                                      TaskField={props.TaskField}\r\n                                      JiraCode={props.JiraCode}\r\n                                      EndTime={props.EndTime}\r\n                                      StartTime={props.StartTime}\r\n                                      status={props.status}\r\n                                      Issue={props.Issue}\r\n                                      IsNesting={props.IsNesting}\r\n                                      NestingItems={props.NestingItems}\r\n                                      IsFavorites={props.IsFavorites}\r\n        />}\r\n\r\n        {NestingIsShowing &&  <NestingWorkLog {...props} />\r\n\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default WorkLog","import React from \"react\";\r\n//@ts-ignore\r\nimport {Progress} from 'bootstrap-4-react';\r\n\r\nexport type TProgressBarProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | string\r\n}\r\n\r\nconst ProgressBar: React.FC<TProgressBarProps> = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Progress  style={{ width: \"100px\", height: \"8px\", borderRadius : \"20px\"}} >\r\n                <Progress.Bar  min=\"0\" max=\"100\" now={props.status === \"ok\" ?\r\n                    \"90\" : props.status === \"warning\"\r\n                        ? \"50\" : props.status === \"danger\"\r\n                            ? \"25\" : null}\r\n\r\n                              bg={props.status === \"ok\" ?\r\n                                  \"success\" : props.status === \"warning\"\r\n                                      ? \"warning\" : props.status === \"danger\"\r\n                                          ? \"danger\" : null}/>\r\n            </Progress>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from \"react\";\r\nimport FS from \"./WorklogInfo.module.css\"\r\nimport DownloadIcon from \"../../../assets/imgs/download.svg\"\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport LineStroke from \"../../LineStroke/LineStroke\";\r\nimport {\r\n    TBlockInfo,\r\n    TSendWorklogBlockThunk,\r\n    TSendWorklogsData,\r\n    TSetWorklogStatus,\r\n    TWorkLog\r\n} from \"../../../Data/WorkLogsReducer\";\r\nimport {TShowTooltip} from \"../../../App\";\r\n\r\nexport type TWorklogInfoProps = {\r\n    DateOfCreation: string | null\r\n    SummaryTime: string | null\r\n    SummaryStatus: \"ok\" | \"danger\" | \"warning\" | string\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n    SendWorklogBlockThunk: TSendWorklogBlockThunk\r\n    showTooltip: TShowTooltip\r\n    SetWorklogStatus: TSetWorklogStatus\r\n}\r\n\r\nconst WorklogInfo: React.FC<TWorklogInfoProps> = (props) => {\r\n\r\n    const OnSendWorklogData = () => {\r\n        props.Worklogs.map(Worklog => {\r\n            if (!Worklog.Issue || Worklog.Issue.length <= 0) {\r\n                props.showTooltip({\r\n                    text: \"Issue does not exist.\",\r\n                    status: \"danger\"\r\n                })\r\n                props.SetWorklogStatus({target: \"worklog\", status: \"danger\", id: Worklog.id})\r\n            } else if (!Worklog.TaskField || Worklog.TaskField.length <= 0) {\r\n                props.showTooltip({\r\n                    text: \"Please, enter the worklog name.\",\r\n                    status: \"warning\"\r\n                })\r\n                props.SetWorklogStatus({target: \"worklog\", status: \"warning\", id: Worklog.id})\r\n            } else if (!Worklog.TimerValue || !Worklog.StartTime || !Worklog.EndTime) {\r\n                props.showTooltip({text: \"Something goes wrong\", status: \"danger\"})\r\n            } else {\r\n                props.SetWorklogStatus({target: \"worklog\", status: \"ok\", id: Worklog.id})\r\n                props.showTooltip({text: \"your worklog successfully logged.\", status: \"ok\"})\r\n            }\r\n\r\n        })\r\n\r\n        if (props.Worklogs.every(Worklog => Worklog.EndTime && Worklog.StartTime && Worklog.TimerValue\r\n            && Worklog.TaskField && Worklog.Issue)) {\r\n            let ObjToSend: TSendWorklogsData = {\r\n                WorkLogsBlocks: {\r\n                    BlockInfo: props.BlockInfo,\r\n                    Worklogs: props.Worklogs\r\n                }\r\n            }\r\n            props.SendWorklogBlockThunk(ObjToSend)\r\n            props.SetWorklogStatus({target: \"worklogblock\", status: \"ok\", id: props.BlockInfo.id})\r\n            props.showTooltip({text: \"your worklog successfully logged.\", status: \"ok\"})\r\n        }\r\n        else {\r\n            props.showTooltip({text: \"Issue does not exist.\", status: \"danger\"})\r\n            props.SetWorklogStatus({target: \"worklogblock\", status: \"danger\", id: props.BlockInfo.id})\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={FS.SummaryWorklogInfo}>\r\n                <div className={FS.DateBlockContainer}>\r\n                    <div className={FS.DateBlockSize}>\r\n                        {props.DateOfCreation}\r\n                    </div>\r\n                </div>\r\n                <div className={FS.DateTime}>\r\n                    <div>\r\n                        {props.SummaryTime}\r\n                    </div>\r\n\r\n                    <div className={FS.Progress}>\r\n                        <ProgressBar status={props.SummaryStatus}/>\r\n                    </div>\r\n                </div>\r\n                <div  onClick={OnSendWorklogData} className={FS.DownloadIcon}>\r\n                    <img  src={DownloadIcon} alt=\"download-icon\"/>\r\n                </div>\r\n            </div>\r\n            <div className={FS.WLlineStrokeContainer}>\r\n                <LineStroke/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorklogInfo","import React from \"react\";\r\nimport SS from \"./WorkLogSlider.module.css\"\r\nimport TimePickerLine from \"../../../assets/imgs/separator-line.svg\"\r\n\r\nexport type TWorklogInfoProps ={\r\n\r\n}\r\n\r\nconst WorkLogTimeLine : React.FC<TWorklogInfoProps> = (props ) => {\r\n\r\n    return ( <div className=\"WorkLogTimeLine\">\r\n            <div className={SS.TimePickerLine}>\r\n                <img src={TimePickerLine} alt=\"separator-line\"/>\r\n            </div>\r\n            <div className={SS.SliderTimesContainer}>\r\n                <div className={SS.SliderTimes}>\r\n                    <div>7:00</div>\r\n                    <div>8:00</div>\r\n                    <div>9:00</div>\r\n                    <div>10:00</div>\r\n                    <div>11:00</div>\r\n                    <div>12:00</div>\r\n                    <div>13:00</div>\r\n                    <div>14:00</div>\r\n                    <div>15:00</div>\r\n                    <div>16:00</div>\r\n                    <div>17:00</div>\r\n                    <div>18:00</div>\r\n                    <div>19:00</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WorkLogTimeLine","import React, {useState} from \"react\";\r\nimport {DifferenceInTime} from \"../../assets/secondary/DifferenceInTime\";\r\nimport WorkLog from \"./WorkLog\";\r\nimport WorklogInfo from \"./WorklogInfo/WorklogInfo\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {\r\n    TAddToFavorite,\r\n    TAddWorklog,\r\n    TBlockInfo,\r\n    TDeleteWorklog,\r\n    TSendWorklogBlockThunk,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogStatus,\r\n    TSetWorklogToChange,\r\n    TTimerData,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogTimeLine from \"./SliderTimePicker/WorkLogTimeLine\";\r\nimport {TComponentToDraw} from \"./WorkLogsContainer\";\r\nimport {TShowTooltip} from \"../../App\";\r\n\r\n\r\nexport type TWorklogsBlockProps = {\r\n    BlockInfo?: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    openWorklogChangeModal: () => void\r\n    TimerData: TTimerData | undefined\r\n    ComponentToDraw: TComponentToDraw\r\n    AddToFavorite: TAddToFavorite\r\n    AddWorklog: TAddWorklog\r\n    SendWorklogBlockThunk: TSendWorklogBlockThunk\r\n    showTooltip: TShowTooltip\r\n    SetWorklogStatus: TSetWorklogStatus\r\n}\r\n\r\nexport type TDeleteModalParams = {\r\n    ParentId?: number\r\n    WorkLogToDeleteId: number\r\n}\r\n\r\nconst WorkLogsBlock: React.FC<TWorklogsBlockProps> = (props) => {\r\n\r\n    let [DeleteModalIsOpen, SetDeleteModalIsOpen] = useState(false)\r\n    let [DeleteModalParams, SetDeleteModalParams] = useState<TDeleteModalParams>()\r\n\r\n    const OnDeleteModalOpen = (e: React.MouseEvent<HTMLElement>) => {\r\n        SetDeleteModalIsOpen(true)\r\n    }\r\n    const OnDeleteModalClose = () => {\r\n        SetDeleteModalIsOpen(false)\r\n    }\r\n\r\n    return (<>\r\n        {props.ComponentToDraw === \"Worklogs\" && props.BlockInfo &&\r\n        <div id={(props.BlockInfo?.id).toString()} className={WLS.WorklogInfoContainer}>\r\n            <WorklogInfo DateOfCreation={props.BlockInfo.BlockCreatedDate}\r\n                         SummaryTime={props.BlockInfo.SummaryTime}\r\n                         SummaryStatus={props.BlockInfo.SummaryStatus}\r\n                         Worklogs={props.Worklogs}\r\n                         SendWorklogBlockThunk={props.SendWorklogBlockThunk}\r\n                         BlockInfo={props.BlockInfo}\r\n                         showTooltip={props.showTooltip}\r\n                         SetWorklogStatus={props.SetWorklogStatus}\r\n            />\r\n        </div>\r\n        }\r\n\r\n        {\r\n            props.ComponentToDraw === \"Worklogs\" ?\r\n                props.Worklogs.map(el => {\r\n                    return <div key={el.id} className=\"worklog\">\r\n                        <WorkLog\r\n                            {...el}\r\n                            {...props}\r\n                            TimerValue={el.TimerValue\r\n                                ? el.TimerValue\r\n                                : el.StartTime && el.EndTime\r\n                                    ? DifferenceInTime([el.StartTime, el.EndTime])\r\n                                    : null}\r\n                            DeleteModalIsOpen={DeleteModalIsOpen}\r\n                            OnDeleteModalClose={OnDeleteModalClose}\r\n                            OnDeleteModalOpen={OnDeleteModalOpen}\r\n                            SetDeleteModalParams={SetDeleteModalParams}\r\n                            DeleteModalParams={DeleteModalParams}\r\n                            AddWorklog={props.AddWorklog}\r\n                        />\r\n                    </div>\r\n                })\r\n                : <div style={{paddingTop: \"50px\"}} className=\"FavoritesWorklogContainer\">\r\n                    {\r\n                        props.Worklogs.map(Worklog => {\r\n                             if(Worklog.IsFavorites) {\r\n                               return <div key={Worklog.id} className=\"FavoritesWorklog\">\r\n                                    <WorkLog\r\n                                        {...Worklog}\r\n                                        {...props}\r\n                                        TimerValue={Worklog.TimerValue\r\n                                            ? Worklog.TimerValue\r\n                                            : Worklog.StartTime && Worklog.EndTime\r\n                                                ? DifferenceInTime([Worklog.StartTime, Worklog.EndTime])\r\n                                                : null}\r\n                                        DeleteModalIsOpen={DeleteModalIsOpen}\r\n                                        OnDeleteModalClose={OnDeleteModalClose}\r\n                                        OnDeleteModalOpen={OnDeleteModalOpen}\r\n                                        SetDeleteModalParams={SetDeleteModalParams}\r\n                                        DeleteModalParams={DeleteModalParams}\r\n                                        AddWorklog={props.AddWorklog}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n        }\r\n        {props.ComponentToDraw === \"Worklogs\" &&\r\n        <div className={WLS.WorkLogSliderPose}>\r\n            <WorkLogTimeLine/>\r\n        </div>\r\n        }\r\n\r\n    </>)\r\n}\r\n\r\nexport default WorkLogsBlock","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {GlobalState} from \"../../Data/redux-store\"\r\nimport {\r\n    TWorklogBlock,\r\n    AddWorklog,\r\n    SetIsPlayingWorklogById,\r\n    DeleteWorklog, SetWorklogToChange, AddToFavorite, SendWorklogBlockThunk,\r\n    SetWorklogStatus,\r\n    TDeleteWorklog, TAddWorklog, TSetIsPlayingWorklogById, TWorkLog,\r\n    TSetWorklogToChange, TTimerData, TAddToFavorite, TSendWorklogBlockThunk, TSetWorklogStatus\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogsBlock from \"./WorkLogsBlock\";\r\nimport {TShowTooltip} from \"../../App\";\r\n\r\nexport type TComponentToDraw = \"Worklogs\" | \"FavoritesWorklogs\"\r\n\r\nexport type TWorkLogsContainerOwnProps = {\r\n    openWorklogChangeModal: () => void\r\n    TimerData: TTimerData | undefined\r\n    ComponentToDraw: TComponentToDraw\r\n    showTooltip: TShowTooltip\r\n}\r\n\r\nexport type T_MSTP_WorkLogsContainer = {\r\n    WorklogsBlocks: Array<TWorklogBlock>\r\n    PlayingWorklog: TWorkLog\r\n}\r\n\r\nexport type T_MDTP_WorkLogsContainer = {\r\n    AddWorklog: TAddWorklog\r\n    DeleteWorklog: TDeleteWorklog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    SetWorklogToChange: TSetWorklogToChange\r\n    AddToFavorite: TAddToFavorite\r\n    SendWorklogBlockThunk: TSendWorklogBlockThunk\r\n    SetWorklogStatus: TSetWorklogStatus\r\n}\r\n\r\n\r\ntype TDialogsContainerProps = T_MDTP_WorkLogsContainer & T_MSTP_WorkLogsContainer & TWorkLogsContainerOwnProps\r\n\r\nclass WorkLogsContainer extends React.Component<TDialogsContainerProps> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"WorklogBlockWrapper\">\r\n                { this.props.WorklogsBlocks.map(el => {\r\n                        return <div key={el.BlockInfo.id} className=\"Worklogs\">\r\n                            <WorkLogsBlock BlockInfo={el.BlockInfo}\r\n                                           Worklogs={el.Worklogs}\r\n                                           AddWorklog={this.props.AddWorklog}\r\n                                           SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                                           DeleteWorklog={this.props.DeleteWorklog}\r\n                                           SetWorklogToChange={this.props.SetWorklogToChange}\r\n                                           PlayingWorklog={this.props.PlayingWorklog}\r\n                                           openWorklogChangeModal={this.props.openWorklogChangeModal}\r\n                                           TimerData={this.props.TimerData}\r\n                                           ComponentToDraw={this.props.ComponentToDraw}\r\n                                           AddToFavorite={this.props.AddToFavorite}\r\n                                           SendWorklogBlockThunk={this.props.SendWorklogBlockThunk}\r\n                                           showTooltip={this.props.showTooltip}\r\n                                           SetWorklogStatus={this.props.SetWorklogStatus}\r\n                            />\r\n                        </div>\r\n                    })\r\n\r\n                } </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_WorkLogsContainer => ({\r\n    WorklogsBlocks: state.WorklogsData.WorkLogsBlocks,\r\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\r\n})\r\n\r\nexport default compose(connect<T_MSTP_WorkLogsContainer, T_MDTP_WorkLogsContainer, TWorkLogsContainerOwnProps, GlobalState>\r\n(StateToProps, {\r\n    AddWorklog, DeleteWorklog,\r\n    SetIsPlayingWorklogById, SetWorklogToChange, AddToFavorite, SendWorklogBlockThunk,SetWorklogStatus\r\n}))\r\n    //@ts-ignore\r\n    (WorkLogsContainer)","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nconst options = [\r\n    'Jira link',\r\n    'Duplicate',\r\n    'Add to favorite',\r\n    'Delete',\r\n];\r\n\r\nexport default function LongMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropDownMenu\">\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"false\"\r\n\r\n                onClick={handleClick}\r\n\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        marginRight : '200px',\r\n                        marginTop : '55px',\r\n                        maxHeight: '300px',\r\n                        backgroundColor : \"#FFFFFF\",\r\n                        borderRadius : '10px',\r\n                        width: '192px',\r\n                        outlined : \"none\"\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <MenuItem style={{paddingLeft : \"32px\" , paddingTop: \"8px\", marginBottom : \"10px\", fontFamily : \"Roboto\",\r\n                        fontStyle : \"normal\", fontWeight : \"normal\", fontSize : \"16px\", lineHeight : \"144%\",\r\n                             color : \"#4F4F4F\"}}\r\n                              key={option}\r\n                              onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}","\r\n\r\nexport const ToFullTime = (value) =>{\r\n    if(typeof value === \"string\"){\r\n        let Numbered =  Number.parseInt(value)\r\n        if(Numbered < 10){\r\n            return \"0\" + Numbered\r\n        }\r\n        else return value\r\n    }\r\n    else if (typeof value === \"number\"){\r\n        if(value < 10){\r\n            return \"0\" + value\r\n        }\r\n        else return value\r\n    }\r\n}\r\n\r\nexport const CalculateNewStartTime = (CurrentTime,hours,minutes)=>{\r\n    if(CurrentTime && hours && minutes){\r\n        let [CurrentHours,CurrentMinutes] = [...CurrentTime.split(\":\")]\r\n        CurrentHours = Number.parseInt(CurrentHours)\r\n        CurrentMinutes = Number.parseInt(CurrentMinutes)\r\n\r\n         if(CurrentHours <= 0 ) {\r\n             CurrentHours = CurrentHours + 24\r\n        }\r\n        if(CurrentMinutes < minutes) {\r\n            CurrentMinutes = CurrentMinutes + 60\r\n            CurrentHours = CurrentHours -1\r\n         }\r\n        let StartTime = ToFullTime(CurrentHours - hours) + \":\" + ToFullTime(CurrentMinutes - minutes)\r\n         return StartTime\r\n    }\r\n}\r\n\r\n\r\nexport const CalculateTime = (CurrentTime, hours, minutes)=>{\r\n    if(CurrentTime && hours && minutes){\r\n        let HoursAndMinutes = CurrentTime.split(\":\")\r\n        let Res = ToFullTime(Number.parseInt(hours) + Number.parseInt(HoursAndMinutes[0]) )\r\n            +\r\n            \":\"\r\n            + ToFullTime(Number.parseInt(minutes) + Number.parseInt(HoursAndMinutes[1]))\r\n\r\n        return Res\r\n    }\r\n }","import React, {useState, useEffect} from 'react';\r\nimport TS from \"./Timer.module.css\"\r\nimport TTStopButton from \"../../assets/imgs/TT-stop-button.svg\"\r\nimport TTPauseButton from \"../../assets/imgs/TT-pause-button.svg\"\r\nimport PlayButton from \"@material-ui/icons/PlayCircleFilled\"\r\nimport {ToFullTime} from \"../../assets/secondary/CalculateTime\"\r\n\r\n\r\nconst Timer = (props) => {\r\n    const [seconds, setSeconds] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(6, props.PlayingWorklog.TimerValue.length)))\r\n    const [minutes, setMinutes] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(3, props.PlayingWorklog.TimerValue.length - 6)))\r\n    const [hours, setHours] = useState(Number.parseInt(props.PlayingWorklog.TimerValue.substr(0, props.PlayingWorklog.TimerValue.length - 6)))\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [WorklogInputValue,SetWorklogInputValue] = useState()\r\n    const [IssueInputValue,SetIssueInputValue] = useState()\r\n\r\n    const OnWorklogInputValueChange = (e) =>{\r\n        SetWorklogInputValue(e.currentTarget.value)\r\n    }\r\n    const OnIssueInputValueChange = (e) =>{\r\n        SetIssueInputValue(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const  toggle = () => {\r\n        setIsActive(!isActive);\r\n    }\r\n    const OnStopTimer =() =>{\r\n        props.openWorklogChangeModal()\r\n        setIsActive(!isActive)\r\n        let TimerData = {\r\n            TimerValue : ToFullTime(hours) + \":\"+ ToFullTime(minutes) + \":\" +ToFullTime(seconds),\r\n            TimerIssue  : IssueInputValue ? IssueInputValue : props.PlayingWorklog.Issue,\r\n            TimerTaskField: WorklogInputValue ? WorklogInputValue : props.PlayingWorklog.TaskField,\r\n        }\r\n        props.SetTimerData(TimerData)\r\n\r\n        // if(props.PlayingWorklog.ParrentId){\r\n        //     props.ChangeWorklog(props.PlayingWorklog.id,NewWorklog,true,props.PlayingWorklog.ParrentId)\r\n        //     props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n        // }\r\n        // else{\r\n        //     props.ChangeWorklog(props.PlayingWorklog.id,NewWorklog)\r\n        //     props.SetIsPlayingWorklogById(false,props.PlayingWorklog.id)\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (!isActive) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                if (seconds > 59) {\r\n                    setMinutes(minutes => minutes + 1)\r\n                    setSeconds(0)\r\n                }\r\n                if (minutes > 59) {\r\n                    setHours(hours => hours + 1)\r\n                    setMinutes(0)\r\n                }\r\n                if (hours > 23) {\r\n                    setHours(0)\r\n                    clearInterval(interval);\r\n                }\r\n            }, 1000);\r\n        } else if (isActive && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive, seconds, minutes, hours]);\r\n\r\n    return (\r\n\r\n        <div className={TS.TimeRContainer}>\r\n            <input className={TS.TimerWorklogName}\r\n                   placeholder={\"add worklog\"}\r\n                   defaultValue={props.PlayingWorklog.TaskField}\r\n                   value={WorklogInputValue}\r\n                   onChange={OnWorklogInputValueChange}\r\n                   type=\"text\"/>\r\n\r\n            <input className={TS.TimerIssueName}\r\n                   placeholder={\"add issue\"}\r\n                   defaultValue={props.PlayingWorklog.Issue && props.PlayingWorklog.Issue}\r\n                   value={IssueInputValue}\r\n                   onChange={OnIssueInputValueChange}\r\n                   type=\"text\"/>\r\n\r\n            <div className={TS.Timer}>\r\n                {ToFullTime(hours)}:{ToFullTime(minutes)}:{ToFullTime(seconds)}\r\n            </div>\r\n\r\n            <div className={TS.TimerControlButtonsContainer}>\r\n                <div className={TS.TimerControlButtons}>\r\n                    <div onClick={OnStopTimer}>\r\n                        <img src={TTStopButton} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"controlButtons\" onClick={toggle}>\r\n                        {!isActive ?\r\n                            <img src={TTPauseButton} alt=\"\"/>\r\n                            : <PlayButton style={{width: \"50px\", height: \"50px\"}} color={\"primary\"}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Timer","import React from \"react\";\r\nimport TTS from \"./TimeTracking.module.css\"\r\nimport StrokeVert from \"../../assets/imgs/stroke_vert.svg\"\r\nimport StrokeHoriz from \"../../assets/imgs/stroke_horiz.svg\"\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\"\r\nimport NewWorklogButtonShadowed from \"../../assets/imgs/new_worklog_button_shadowed.svg\"\r\nimport LongMenu from \"../DropDownMenu/DropDownMenu\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport {TAddWorklog, TChangeWorklog, TSetIsPlayingWorklogById, TTimerData, TWorkLog} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TTimeTrackingProps = {\r\n    AddWorklog : TAddWorklog\r\n    PlayingWorklog: TWorkLog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    ChangeWorklog: TChangeWorklog\r\n    FavoritesIsClicked: boolean\r\n    openWorklogChangeModal : ()=> void\r\n    SetTimerData : (TimerData : TTimerData) => void\r\n}\r\n\r\nconst TimeTracking: React.FC<TTimeTrackingProps> = (props) => {\r\n\r\n    const OnAddEmptyWorklog = () =>{\r\n        props.AddWorklog()\r\n    }\r\n\r\n    return (<div className={TTS.TTLayout}>\r\n            <div className=\"stroke-vert\">\r\n                <img src={StrokeVert} alt=\"stroke-vert\"/>\r\n            </div>\r\n            <div className={TTS.TTContent}>\r\n\r\n\r\n                <div className={TTS.TimetrackingHeaderContainer}>\r\n                    <div className={TTS.TimetrackingHeader}>\r\n\r\n                        <div className={TTS.TimeTrackingLogo}>\r\n                            Time tracking\r\n                        </div>\r\n\r\n                        {!props.PlayingWorklog.id && <LongMenu/>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {props.PlayingWorklog.id\r\n                    ? <Timer SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\r\n                             PlayingWorklog={props.PlayingWorklog}\r\n                             openWorklogChangeModal={props.openWorklogChangeModal}\r\n                             SetTimerData={props.SetTimerData}\r\n                             ChangeWorklog={props.ChangeWorklog}\r\n                    />\r\n                    : <div className={TTS.TTMainContentRoot}>\r\n                            <div className={TTS.NewWorklogContainer}>\r\n                                <div className={TTS.NewWorklog}>\r\n\r\n                                    <div onClick={!props.FavoritesIsClicked\r\n                                        ? OnAddEmptyWorklog\r\n                                        : undefined}\r\n                                         className={TTS.NewWorklogButtonPose}>\r\n\r\n                                        <img className={TTS.NewWorklogButtonSize}\r\n\r\n                                             src={props.FavoritesIsClicked\r\n                                                 ? NewWorklogButtonShadowed\r\n                                                 : NewWorklogButton\r\n                                             }\r\n                                             alt=\"new_worklog_button\"/>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n                                        <div className={TTS.NewWorklogButtonDescription}>\r\n                                            new worklog\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        <div className={TTS.TTHorizStrokePose}>\r\n                            <img src={StrokeHoriz} alt=\"\"/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeTracking","import React from \"react\";\r\nimport CSCS from \"./CSCElement.module.css\"\r\nimport Cyan from \"../../assets/imgs/Cyan.svg\"\r\nimport Orange from \"../../assets/imgs/Orange.svg\"\r\nimport Purple from \"../../assets/imgs/Purple.svg\"\r\nexport type TCSCElementProps = {\r\n    Description: string\r\n    SyncTime : string\r\n    LineColor: string\r\n}\r\n//mb images will be like a link in items\r\n\r\nconst CSCElement: React.FC<TCSCElementProps> = (props) => {\r\n    return (<div className={CSCS.CalendarSync}>\r\n            <div className={CSCS.SyncColorPointContainer}>\r\n                <img src={props.LineColor === \"Cyan\"\r\n                    ? Cyan : props.LineColor === \"Orange\"\r\n                        ? Orange : props.LineColor === \"Purple\"\r\n                            ? Purple\r\n                            : undefined } alt=\"\"/>\r\n            </div>\r\n            <div className={CSCS.SyncInfoContainer}>\r\n                <div>\r\n                    {props.Description}\r\n                </div>\r\n                <div>\r\n                    {props.SyncTime}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default CSCElement","import React, {useState} from \"react\";\r\nimport GCS from \"./GoogleCalendar.module.css\"\r\nimport ActiveSmallCalendar from \"../../assets/imgs/calendar_active.svg\"\r\nimport SmallCalendar from \"../../assets/imgs/calendar_gray.svg\"\r\nimport CSCElement from \"../CalendarSyncsElement/CSCElement\";\r\n\r\n\r\nexport type TCalendarProps = {}\r\n\r\nconst GoogleCalendar: React.FC<TCalendarProps> = (props) => {\r\n    let [CalendarSyncs, SetCalendarSyncs] = useState([{\r\n        Description: \"Logo Redesign\",\r\n        SyncTime: \"09:00 - 10:00\",\r\n        LineColor: \"Cyan\"\r\n    }, {\r\n        Description: \"Meeting with CEO\",\r\n        SyncTime: \"14:00 - 14:15\",\r\n        LineColor: \"Orange\"\r\n    }, {\r\n        Description: \"Brainstorm\",\r\n        SyncTime: \"15:00 - 16:15\",\r\n        LineColor: \"Purple\"\r\n    }])\r\n\r\n    let [CalendarIsClicked, SetCalendarIsClicked] = useState(false)\r\n\r\n    const OnCalendarClicked = () => {\r\n        SetCalendarIsClicked(true)\r\n    }\r\n    const OnActiveCalendarClicked = () => {\r\n        SetCalendarIsClicked(false)\r\n    }\r\n\r\n    let [IsChecked, SetIsChecked] = useState(false)\r\n\r\n    const HandleChecked = (event: React.FormEvent<HTMLInputElement>) => {\r\n        SetIsChecked(event.currentTarget.checked)\r\n    }\r\n\r\n    return (<div className={GCS.GCSContainer}>\r\n        <div className={GCS.GCS}>\r\n            <div className={GCS.GCSDescription}>\r\n                Google calendar sync\r\n            </div>\r\n            <div className={GCS.GCSSwitchPose}>\r\n                <input onClick={HandleChecked} id=\"GCS-toggle\"\r\n                       type=\"checkbox\"/>\r\n            </div>\r\n            <div id=\"small-calendar\" className={GCS.GCSCalendarPose}>\r\n                {!CalendarIsClicked\r\n                    ? <img onClick={OnCalendarClicked} src={SmallCalendar} alt=\"small-calendar\"/>\r\n                    : <img onClick={OnActiveCalendarClicked} src={ActiveSmallCalendar} alt={\"active small calendar\"}/>}\r\n            </div>\r\n        </div>\r\n        {IsChecked ? <div className={GCS.CalendarSyncsContainer}>\r\n            {CalendarSyncs.map(el => {\r\n                return <CSCElement key={el.SyncTime} Description={el.Description}\r\n                                   SyncTime={el.SyncTime}\r\n                                   LineColor={el.LineColor}/>\r\n            })}\r\n        </div> : undefined}\r\n    </div>)\r\n}\r\n\r\nexport default GoogleCalendar","import React from \"react\";\r\nimport TTS from \"../TimeTracking/TimeTracking.module.css\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\";\r\nimport {TAddWorklog, TTimerData, TWorklogBlock} from \"../../Data/WorkLogsReducer\";\r\nimport WorkLogsContainer from \"../WorkLogs/WorkLogsContainer\";\r\n\r\nexport type TFavoritesPageProps = {\r\n    FavoritesIsClicked: boolean\r\n    WorklogsBlocks: Array<TWorklogBlock>\r\n    TimerData: TTimerData | undefined\r\n    openWorklogChangeModal: () => void\r\n    AddWorklog : TAddWorklog\r\n}\r\n\r\nconst FavoritesPage: React.FC<TFavoritesPageProps> = (props) => {\r\n    const AddNewFavoritesWorklog = () =>{\r\n        props.AddWorklog(undefined,undefined,true)\r\n    }\r\n    return (<div>\r\n        {props.WorklogsBlocks.map(WBL=>WBL.Worklogs.some(Worklog => Worklog.IsFavorites)).includes(true)\r\n            ? <div className=\"Worklogs\">\r\n                <WorkLogsContainer TimerData={props.TimerData}\r\n                                   openWorklogChangeModal={props.openWorklogChangeModal}\r\n                                   ComponentToDraw={\"FavoritesWorklogs\"}/>\r\n            </div>\r\n\r\n            : <div className={FS.NoFavoritesIssuesContainer}>\r\n\r\n                <div className={FS.FavoritesText}>\r\n                    There is no favorites issues yet\r\n                </div>\r\n\r\n                <div style={{paddingTop: \"60px\"}} className={TTS.NewWorklog}>\r\n                    <div  className={TTS.NewWorklogButtonPose}>\r\n                        <img onClick={AddNewFavoritesWorklog} className={TTS.NewWorklogButtonSize}\r\n                             src={NewWorklogButton}\r\n                             alt=\"new_worklog_button\"/>\r\n                    </div>\r\n\r\n                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n\r\n                        <div className={TTS.NewWorklogButtonDescription}>\r\n                            new favorite\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n    </div>)\r\n}\r\n\r\nexport default FavoritesPage","import React, {useState} from \"react\";\r\nimport CDS from \"./Calendar.module.css\"\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\nimport {TClickedDay, TSetClickedMonthDay} from \"../../Data/CalendarReducer\";\r\nimport {SearchWorklogBlock} from \"../../Data/WorkLogsReducer\";\r\n\r\n\r\nexport type TCalendarDayProps = {\r\n    DayNumber: number\r\n    DayStatus: string\r\n    Signature: string\r\n    id: number\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n    MonthName: string\r\n    ClickedMonthDay: TClickedDay\r\n    CurrentDay: number | string\r\n}\r\n\r\nconst CalendarDay: React.FC<TCalendarDayProps> = (props) => {\r\n    let [DayIsClicked, SetDayIsClicked] = useState(false)\r\n    let WrappedDay = {\r\n        id : props.id,\r\n        DayNumber : props.DayNumber,\r\n        MonthName : props.MonthName\r\n    }\r\n\r\n    const onDayClick = () => {\r\n        let WorklogsBlockToBeScroled = SearchWorklogBlock(WrappedDay.MonthName,WrappedDay.DayNumber)\r\n        SetDayIsClicked(!DayIsClicked)\r\n        props.SetClickedMonthDay(WrappedDay)\r\n        if(WorklogsBlockToBeScroled) WorklogsBlockToBeScroled.scrollIntoView({block :\"center\",inline : \"center\", behavior : \"smooth\" })\r\n    }\r\n\r\n    return (<div className={props.ClickedMonthDay?.id === props.id\r\n        ? CDS.DayBgClicked\r\n        : props.DayNumber === props.CurrentDay\r\n            ? CDS.DayBgCurrentDay\r\n            : CDS.DayBgDefault}>\r\n        <div onClick={onDayClick}\r\n             className={props.Signature !== \"main\"\r\n                 ? CDS.DropDownCalendarDayFaded : CDS.DropDownCalendarDay}>\r\n            <div className={props.ClickedMonthDay?.id === props.id\r\n            || props.DayNumber === props.CurrentDay\r\n                ? CDS.DropDownCalendarDayNumberClicked\r\n                : CDS.DropDownCalendarDayNumber}>\r\n                {props.DayNumber}\r\n            </div>\r\n            <img style={{paddingLeft: \"3px\"}} src={props.DayStatus === \"ok\"\r\n                ? OK\r\n                : props.DayStatus === \"warning\"\r\n                    ? Warn\r\n                    : props.DayStatus === \"danger\"\r\n                        ? Danger\r\n                        : undefined\r\n            } alt=\"day status\"/>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default CalendarDay","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\";\r\n\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\n\r\nexport type TDropDownCalendarFooterElementProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\"\r\n    text: string\r\n}\r\nconst DropDownCalendarFooterElement: React.FC<TDropDownCalendarFooterElementProps> = (props) => {\r\n    return (<div className={CS.DropDownCalendarFooterElement}>\r\n\r\n            <img style={{marginTop: \"4px\"}} src={props.status === \"ok\"\r\n                ? OK\r\n                : props.status === \"warning\"\r\n                    ? Warn\r\n                    : props.status === \"danger\"\r\n                        ? Danger\r\n                        : undefined} alt={\"dropDOwnCAlendarFooterStatus\"}/>\r\n\r\n            <div className={CS.DropDownProgressStatus}>\r\n                {props.text}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropDownCalendarFooterElement","import React from \"react\";\r\nimport {\r\n    TCalendars, TClickedDay,\r\n    TCurrentDate,\r\n    TSetClickedMonthDay,\r\n} from \"../../Data/CalendarReducer\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarDay from \"./CalendarDay\";\r\nimport {randomInteger} from \"../../Data/WorkLogsReducer\";\r\nimport DropDownCalendarFooterElement from \"./DropDownCalendarFooterElement\";\r\n\r\nexport type TDropDownCalendarProps = {\r\n    Calendars: TCalendars\r\n    ClickedMonthDay: TClickedDay\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n    CurrentDate: TCurrentDate\r\n}\r\n\r\nconst DropDownCalendar: React.FC<TDropDownCalendarProps> = (props) => {\r\n    let DaysNamesArr = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\r\n\r\n\r\n    return (<div className={CS.DropDownCalendar}>\r\n        <div className={CS.DropDownCalendarHeader}>\r\n            {props.CurrentDate.CurrentMonth}\r\n        </div>\r\n        <div className={CS.DropDOwnCalendarContentContainer}>\r\n            <div className={CS.DropDownCalendarContent}>\r\n                {DaysNamesArr.map(el => {\r\n                    return <div key={randomInteger(0, 10000)} className={CS.DropDownCalendarDayNames}>\r\n                        {el}\r\n                    </div>\r\n                })}\r\n                {props.Calendars[props.CurrentDate.CurrentMonth].map(day => {\r\n                    return <CalendarDay ClickedMonthDay={props.ClickedMonthDay}\r\n                                        CurrentDay={props.CurrentDate.CurrentDay}\r\n                                        MonthName={props.CurrentDate.CurrentMonth}\r\n                                        key={day.id}\r\n                                        SetClickedMonthDay={props.SetClickedMonthDay}  {...day}/>\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n        <div className={CS.DropDownCalendarFooterContainer}>\r\n\r\n            <div className={CS.DropDownCalendarFooter}>\r\n                <DropDownCalendarFooterElement status={\"ok\"} text={\"Done\"}/>\r\n                <DropDownCalendarFooterElement status={\"warning\"} text={\"In progress\"}/>\r\n                <DropDownCalendarFooterElement status={\"danger\"} text={\"Missed\"}/>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DropDownCalendar","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n// import {withRouter} from 'react-router-dom'\r\nimport {GlobalState} from \"../../Data/redux-store\"\r\nimport {\r\n    TCalendars,\r\n    TSetClickedMonthDay,\r\n    SetClickedMonthDay, TCurrentDate, TClickedDay,\r\n} from \"../../Data/CalendarReducer\";\r\nimport DropDownCalendar from \"./DropDownCalendar\";\r\n\r\nexport type TDropDownCalendarContainerOwnProps = {}\r\n\r\nexport type T_MSTP_DropDownCalendarContainer = {\r\n    Calendars: TCalendars\r\n    ClickedMonthDay: TClickedDay\r\n    CurrentDate : TCurrentDate\r\n}\r\n\r\nexport type T_MDTP_DropDownCalendarContainer = {\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n}\r\n\r\n\r\ntype TDropDownCalendarContainerProps = T_MDTP_DropDownCalendarContainer\r\n    & T_MSTP_DropDownCalendarContainer & TDropDownCalendarContainerOwnProps\r\n\r\nclass DropDownCalendarContainer extends React.Component<TDropDownCalendarContainerProps> {\r\n    render() {\r\n        return <DropDownCalendar {...this.props} />\r\n    }\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_DropDownCalendarContainer => ({\r\n    Calendars: state.CalendarData.Calendars,\r\n    ClickedMonthDay: state.CalendarData.ClickedMonthDay,\r\n    CurrentDate : state.CalendarData.CurrentDate\r\n\r\n})\r\n\r\nexport default compose(connect<T_MSTP_DropDownCalendarContainer,\r\n    T_MDTP_DropDownCalendarContainer,\r\n    TDropDownCalendarContainerOwnProps, GlobalState>\r\n(StateToProps, {SetClickedMonthDay}))(DropDownCalendarContainer)","import React, {useState} from \"react\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarIcon from \"../../assets/imgs/calendar.svg\"\r\nimport DropDownCalendarContainer from \"./DropDownCalendarContainer\";\r\nimport {TCurrentDate} from \"../../Data/CalendarReducer\";\r\n\r\nexport type TCalendarProps = {\r\n    CurrentDate: TCurrentDate\r\n}\r\n\r\nconst Calendar: React.FC<TCalendarProps> = (props) => {\r\n    let [ShowDropDownCalendar, SetShowDropDownCalendar] = useState(false)\r\n\r\n    const onShowDropDownCalendar = () => {\r\n        SetShowDropDownCalendar(true)\r\n    }\r\n    const onHideDropDownCalendar = () => {\r\n        SetShowDropDownCalendar(false)\r\n    }\r\n\r\n\r\n    return (<div className=\"Calendar\">\r\n        <div onClick={onShowDropDownCalendar} id=\"calendar-id\" className={CS.CalendarContainer}>\r\n            <div className={CS.CalendarContent}>\r\n                <div className={CS.CalendarDate}>\r\n                    {props.CurrentDate.CurrentDay} {props.CurrentDate.CurrentMonth} {props.CurrentDate.CurrentYear}\r\n                </div>\r\n                <div className={CS.CalendarIcon}>\r\n                    <img src={CalendarIcon} alt=\"calendar icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {ShowDropDownCalendar && <>\r\n            <div className={CS.bg}\r\n                 onClick={onHideDropDownCalendar}/>\r\n            <DropDownCalendarContainer/>\r\n        </>}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Calendar","import React from \"react\";\r\nimport AllS from \"./All.module.css\"\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TAllProps = {\r\n    FavoritesIsClicked: boolean\r\n    OnAllClicked: () => void\r\n}\r\n\r\nconst All: React.FC<TAllProps> = (props) => {\r\n    return (\r\n        <div className={props.FavoritesIsClicked\r\n            ? AllS.AllButtonBg\r\n            : AllS.AllButtonBgActive}>\r\n\r\n            <div  className={props.FavoritesIsClicked\r\n                ? AllS.item\r\n                : AllS.ActiveItem}>\r\n\r\n                <NavLink onClick={props.OnAllClicked}  to={\"/Home/All\"}> All </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All","import React from \"react\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TFavoritesProps = {\r\n    FavoritesIsClicked: boolean\r\n    OnFavoritesClick: () => void\r\n\r\n}\r\n\r\nconst FavoritesButton: React.FC<TFavoritesProps> = (props) => {\r\n    return (\r\n        <div\r\n             className={props.FavoritesIsClicked\r\n            ? FS.FavoritesButtonBgActive\r\n            : FS.FavoritesButtonBg}>\r\n\r\n            <div className={!props.FavoritesIsClicked\r\n                ? FS.item\r\n                : FS.ActiveItem}>\r\n\r\n                <NavLink onClick={props.OnFavoritesClick} to={\"/Home/Favorites\"}> Favorites </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesButton","import React from \"react\";\r\nimport AS from \"../../App.module.css\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport All from \"../All/All\";\r\nimport FavoritesButton from \"../Favorites/FavoritesButton\";\r\nimport {TCurrentDate} from \"../../Data/CalendarReducer\";\r\n\r\n\r\nexport type TCalendarAndControlButtonsProps = {\r\n    CurrentDate: TCurrentDate\r\n    FavoritesIsClicked: boolean\r\n    OnFavoritesClick: () => void\r\n    OnAllClicked: () => void\r\n\r\n}\r\n\r\nconst CalendarAndControlButtons: React.FC<TCalendarAndControlButtonsProps> = (props) => {\r\n\r\n    return (<div className={AS.CalendarAndButtons}>\r\n        <Calendar CurrentDate={props.CurrentDate}/>\r\n        <All FavoritesIsClicked={props.FavoritesIsClicked} OnAllClicked={props.OnAllClicked}/>\r\n        <FavoritesButton OnFavoritesClick={props.OnFavoritesClick}\r\n                         FavoritesIsClicked={props.FavoritesIsClicked}/>\r\n    </div>)\r\n}\r\n\r\nexport default CalendarAndControlButtons","import React from \"react\";\r\nimport LS from \"./TimeSlider.module.css\"\r\nexport type TLeftLabelProps = {\r\n    Position : number | undefined\r\n    value : {\r\n    end : string | null,\r\n    start : string | null\r\n    } | undefined\r\n    offsetLeft : number | undefined\r\n}\r\n\r\nconst RightLabel :React.FC<TLeftLabelProps> = (props) =>{\r\n\r\n    return <div className={LS.LeftLabel}\r\n                style={{display : `${!props.value &&  !props.Position ? \"none\" : \"block\" }`, left : `${props.Position && props.offsetLeft \r\n                    && props.Position - props.offsetLeft +70 + \"px\"}` }}>\r\n            <div className={LS.LeftLabelImage} > </div>\r\n            <div className={LS.LabelValue}> {props.value && props.value.start && props.value.start } </div>\r\n    </div>\r\n}\r\n\r\nexport default RightLabel\r\n","import React from \"react\";\r\nimport LS from \"./TimeSlider.module.css\"\r\nexport type TLeftLabelProps = {\r\n    Position : number | undefined\r\n    value : {\r\n    end : string | null,\r\n    start : string | null\r\n    } | undefined\r\n    offsetRight : number | undefined\r\n}\r\n\r\nconst LeftLabel :React.FC<TLeftLabelProps> = (props) =>{\r\n\r\n    return <div className={LS.RightLabel}\r\n                style={{ display : `${!props.value && !props.Position ? \"none\" : \"block\" }`,\r\n                    right : `${props.Position && props.offsetRight && props.offsetRight - props.Position - 10 + \"px\" }`}}>\r\n            <div className={LS.LeftLabelImage} > </div>\r\n            <div className={LS.LabelValue}> {props.value && props.value.end && props.value.end } </div>\r\n    </div>\r\n}\r\n\r\nexport default LeftLabel\r\n","export const  findPosX =(obj  ) =>{\r\n    var curleft = 0;\r\n    if (obj.offsetParent) {\r\n        while (1) {\r\n            curleft+=obj.offsetLeft;\r\n            if (!obj.offsetParent) {\r\n                break;\r\n            }\r\n            obj=obj.offsetParent;\r\n        }\r\n    } else if (obj.x) {\r\n        curleft+=obj.x;\r\n    }\r\n    return curleft;\r\n}\r\n\r\nexport const  findPosY = (obj) => {\r\n    var curtop = 0;\r\n    if (obj.offsetParent) {\r\n        while (1) {\r\n            curtop+=obj.offsetTop;\r\n            if (!obj.offsetParent) {\r\n                break;\r\n            }\r\n            obj=obj.offsetParent;\r\n        }\r\n    } else if (obj.y) {\r\n        curtop+=obj.y;\r\n    }\r\n    return curtop;\r\n}","import React, {useState, useEffect, Dispatch} from 'react';\r\n//@ts-ignore\r\nimport TimeRangeSlider from 'react-time-range-slider';\r\nimport LeftLabel from \"./SliderValueLeftLabel\";\r\nimport RightLabel from \"./SliderValueRightLabel\";\r\nimport {findPosX} from \"../../../assets/secondary/FindElementPose\";\r\n\r\nexport type TTimeSliderProps = {\r\n    step: number\r\n    maxValue?: string\r\n    minValue?: string\r\n    format?: number\r\n    disabled: boolean\r\n    value?: {\r\n        start: string | null\r\n        end: string | null\r\n    }\r\n    SetTimerValue: Dispatch<any>\r\n}\r\n\r\n\r\nconst TimeSlider: React.FC<TTimeSliderProps> = (props) => {\r\n    let [value, SetValue] = useState({\r\n        start: props.value?.start ? props.value.start as string | null : \"08:00\",\r\n        end: props.value?.end ? props.value.end as string | null : \"22:00\"\r\n    })\r\n\r\n    let [LeftPose, SetLeftPose] = useState<number>()\r\n    let [RightPose, SetRightPose] = useState<number>()\r\n    let [LeftOffset, SetLeftOffset] = useState<number>()\r\n    let [RightOffset, SetRightOffset] = useState<number>()\r\n\r\n\r\n    const TimerButtonsInit = () => {\r\n        let slider = document.querySelectorAll(\".input-range\")\r\n        let el = document.querySelectorAll(\".input-range__slider\")\r\n        // SetLeftPose(el[0].getBoundingClientRect())\r\n        // SetRightPose(el[1].getBoundingClientRect())\r\n        let SliderWidth = getComputedStyle(slider[0], null).width\r\n        let SliderPoseStart = findPosX(slider[0])\r\n        let SliderPoseEnd = SliderPoseStart + Number.parseInt(SliderWidth.substr(0, SliderWidth.length - 2))\r\n        let LeftMargin = findPosX(el[0])\r\n        let RightMargin = findPosX(el[1])\r\n        SetLeftOffset(SliderPoseStart)\r\n        SetRightOffset(SliderPoseEnd)\r\n        SetLeftPose(LeftMargin)\r\n        SetRightPose(RightMargin)\r\n    }\r\n\r\n    useEffect(() => {\r\n            props.value && SetValue(props.value)\r\n            TimerButtonsInit()\r\n        }, [props.value && props.value]\r\n    );\r\n\r\n\r\n    const changeStartHandler = (time: any) => {\r\n        // console.log(\"Start Handler Called\", time);\r\n    }\r\n\r\n    const timeChangeHandler = (time: any) => {\r\n        TimerButtonsInit()\r\n        SetValue(time)\r\n    }\r\n\r\n    const changeCompleteHandler = (time: any) => {\r\n        TimerButtonsInit()\r\n        props.SetTimerValue(value)\r\n        SetValue(time)\r\n        /* console.log(\"Complete Handler Called\", time);*/\r\n    }\r\n\r\n    return (<>\r\n        <TimeRangeSlider\r\n            disabled={props.disabled}\r\n            format={props.format ? props.format : 24}\r\n            maxValue={props.maxValue ? props.maxValue : \"18:59\"}\r\n            minValue={props.minValue ? props.minValue : \"7:00\"}\r\n            name={\"time_range\"}\r\n            onChangeStart={changeStartHandler}\r\n            onChangeComplete={changeCompleteHandler}\r\n            onChange={timeChangeHandler}\r\n            step={props.step}\r\n            value={value}/>\r\n        <LeftLabel Position={LeftPose} offsetLeft={LeftOffset} value={value}/>\r\n        <RightLabel Position={RightPose} value={value} offsetRight={RightOffset}/>\r\n    </>);\r\n\r\n}\r\n\r\n\r\nexport default TimeSlider","import React, {SyntheticEvent, useState, useEffect, Dispatch, SetStateAction} from \"react\";\r\nimport MS from \"./ModalWindow.module.css\"\r\nimport ConfirmButton from \"../../assets/imgs/confirmButton.svg\"\r\nimport DeclineButton from \"../../assets/imgs/declineButton.svg\"\r\nimport TimeSlider from \"./TimeSlider/TimeSlider\";\r\nimport {\r\n    TChangeWorklog,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogToChange,\r\n    TTimerData,\r\n    TWorkLog\r\n} from \"../../Data/WorkLogsReducer\";\r\nimport {CalculateNewStartTime, ToFullTime} from \"../../assets/secondary/CalculateTime\";\r\n\r\nexport type TModalWindowProps = {\r\n    closeWorklogChangeModal: () => void\r\n    WorklogChangeModalIsOpen: boolean\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    PlayingWorklog: TWorkLog\r\n    TimerData: TTimerData | undefined\r\n    ChangeWorklog: TChangeWorklog\r\n    WorklogToChange: TWorkLog | undefined\r\n    SetTimerData: Dispatch<SetStateAction<TTimerData | undefined>>\r\n    SetWorklogToChange: TSetWorklogToChange\r\n}\r\ntype TTimerValue = {\r\n    start: string | null\r\n    end: string | null\r\n}\r\n\r\nconst ChangeWorklogModal: React.FC<TModalWindowProps> = (props) => {\r\n\r\n    let [ModalNewWorklogName, SetModalNewWorklogName] = useState(\"\")\r\n    let [ModalNewIssueName, SetModalNewIssueName] = useState(\"\")\r\n    let [ModalTimeLineValues, SetModalTimeLineValues] = useState<TTimerValue>()\r\n    let [NewWorklogNameIsFilled, SetNewWorklogNameIsFilled] = useState<boolean>(false)\r\n    let [NewIssueNameIsFilled, SetNewIssueNameIsFilled] = useState<boolean>(false)\r\n\r\n\r\n    let EmptyWorklogTimerMinutes = props.TimerData?.TimerValue.substr(3, props.TimerData?.TimerValue.length - 6)\r\n    let EmptyWorklogTimerEndHours = props.TimerData?.TimerValue.substr(0, props.TimerData?.TimerValue.length - 6)\r\n    let date = new Date()\r\n    let CurrentTime = ToFullTime(date.getHours()) + \":\" + ToFullTime(date.getMinutes())\r\n    let EmptyWorklogTimeValues = {\r\n        start: CalculateNewStartTime(CurrentTime, EmptyWorklogTimerEndHours, EmptyWorklogTimerMinutes) as string | null,\r\n        end: CurrentTime as string | null\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.TimerData) {\r\n            props.TimerData.TimerTaskField && SetModalNewWorklogName(props.TimerData.TimerTaskField)\r\n            props.TimerData.TimerIssue && SetModalNewIssueName(props.TimerData.TimerIssue)\r\n            if (props.PlayingWorklog.StartTime && props.PlayingWorklog.EndTime) {\r\n                SetModalTimeLineValues({\r\n                    start: props.PlayingWorklog.StartTime,\r\n                    end: props.PlayingWorklog.EndTime\r\n                })\r\n            } else SetModalTimeLineValues(EmptyWorklogTimeValues)\r\n        } else if (props.WorklogToChange) {\r\n            props.WorklogToChange.TaskField && SetModalNewWorklogName(props.WorklogToChange.TaskField)\r\n            props.WorklogToChange.Issue && SetModalNewIssueName(props.WorklogToChange.Issue)\r\n            SetModalTimeLineValues({\r\n                start: props.WorklogToChange.StartTime,\r\n                end: props.WorklogToChange.EndTime\r\n            })\r\n        }\r\n    }, [props.TimerData?.TimerIssue, props.TimerData?.TimerTaskField, props.TimerData?.TimerValue,\r\n        props.WorklogToChange?.EndTime, props.WorklogToChange?.StartTime,\r\n        props.WorklogToChange?.Issue, props.WorklogToChange?.TaskField])\r\n\r\n    const OnModalSubmit = (e: SyntheticEvent) => {\r\n        {\r\n            ModalNewWorklogName.length > 0\r\n                ? SetNewWorklogNameIsFilled(false)\r\n                : SetNewWorklogNameIsFilled(true)\r\n        }\r\n        {\r\n            ModalNewIssueName.length > 0\r\n                ? SetNewIssueNameIsFilled(false)\r\n                : SetNewIssueNameIsFilled(true)\r\n        }\r\n\r\n        if (ModalNewWorklogName && ModalNewWorklogName.length > 0\r\n            && ModalNewIssueName\r\n            && ModalNewIssueName.length > 0\r\n            && ModalTimeLineValues) {\r\n\r\n            let Obj: string\r\n            if (props.TimerData) Obj = \"PlayingWorklog\"; else Obj = \"WorklogToChange\"\r\n            let NewWL = {\r\n                //@ts-ignore\r\n                ...props[Obj],\r\n                StartTime: ModalTimeLineValues.start,\r\n                EndTime: ModalTimeLineValues.end,\r\n                TaskField: ModalNewWorklogName,\r\n                Issue: ModalNewIssueName,\r\n                //@ts-ignore\r\n                status: props[Obj].status ? props[Obj].status : \"warning\",\r\n                //@ts-ignore\r\n                TimerValue: props.TimerData && props.TimerData.TimerValue ? props.TimerData.TimerValue\r\n                    //@ts-ignore\r\n                    : props[Obj].TimerValue ? props[Obj].TimerValue : \"00:00:00\"\r\n            }\r\n\r\n            //@ts-ignore\r\n            if (props[Obj].ParentId) {\r\n                //@ts-ignore\r\n                props.ChangeWorklog(props[Obj].id, props[Obj].ParentId ,NewWL,  props[Obj].ParentId)\r\n                //@ts-ignore\r\n                props.SetIsPlayingWorklogById(false, props[Obj].id)\r\n            } else {\r\n                //@ts-ignore\r\n                props.ChangeWorklog(props[Obj].id, undefined,NewWL)\r\n                //@ts-ignore\r\n                props.SetIsPlayingWorklogById(false, props[Obj].id)\r\n            }\r\n            SetModalNewWorklogName(\"\")\r\n            SetModalNewIssueName(\"\")\r\n            SetNewWorklogNameIsFilled(false)\r\n            SetNewIssueNameIsFilled(false)\r\n            close(e)\r\n        }\r\n    }\r\n\r\n    const OnNewWorklogNameType = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetModalNewWorklogName(e.currentTarget.value)\r\n    }\r\n    const OnNewIssueNameType = (e: React.FormEvent<HTMLInputElement>) => {\r\n        SetModalNewIssueName(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const close = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (props.closeWorklogChangeModal) {\r\n            props.closeWorklogChangeModal();\r\n        }\r\n        props.SetTimerData(undefined)\r\n        props.SetWorklogToChange(undefined)\r\n        props.SetIsPlayingWorklogById(false)\r\n    }\r\n    if (!props.WorklogChangeModalIsOpen) return null;\r\n\r\n\r\n    return (\r\n        <div className=\"timer-modal\">\r\n            <div className={MS.modal}>\r\n                <div className={MS.ModalTitle}>New worklog</div>\r\n                <div className={MS.ModalSlider}>\r\n\r\n                    {ModalTimeLineValues?.start && ModalTimeLineValues?.end &&\r\n                    <TimeSlider value={ModalTimeLineValues}\r\n                                disabled={false}\r\n                                step={10}\r\n                                SetTimerValue={SetModalTimeLineValues}\r\n                    />\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <form name=\"NewWorklogContent\" action=\"\">\r\n                    <div className={MS.ModalTextFields}>\r\n                        <div className={MS.NewWorklogContentContainer}>\r\n\r\n                            <div className={MS.NewWorklogContentTitle}>Worklog name</div>\r\n\r\n                            <div className={MS.marginCheck}>\r\n                                <input\r\n                                    onChange={OnNewWorklogNameType}\r\n                                    value={ModalNewWorklogName}\r\n                                    className={MS.NewWorklogContentInput}\r\n                                    placeholder=\"Enter the worklog name\"\r\n                                    type=\"text\"/>\r\n                            </div>\r\n\r\n                            {NewWorklogNameIsFilled &&\r\n                            <div id=\"new-issue-err\" className={MS.ModalInputError}> Please, enter worklog name</div>\r\n                            }\r\n\r\n                            <div style={{marginTop: \"37px\"}}>\r\n                                <div className={MS.NewWorklogContentTitle}>Issue</div>\r\n                                <div className={MS.marginCheck}>\r\n                                    <input\r\n                                        onChange={OnNewIssueNameType}\r\n                                        value={ModalNewIssueName}\r\n                                        className={MS.NewWorklogContentInput}\r\n                                        placeholder=\"Enter the issue name\"\r\n                                        type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                            {NewIssueNameIsFilled &&\r\n                            <div id=\"new-issue-err\" className={MS.ModalInputError}> Please, enter issue name</div>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={MS.NewWorklogControlButtonsContainer}>\r\n                        <div className={MS.NewWorklogControlButtons}>\r\n                            <div onClick={OnModalSubmit} className=\"modal-open\">\r\n                                <img className={MS.NewWorklogSubmitButtonSize}\r\n                                     src={ConfirmButton} alt={\"submit\"}/>\r\n                            </div>\r\n                            <div className=\"modal-close\">\r\n                                <img onClick={close} className={MS.NewWorklogControlButton}\r\n                                     src={DeclineButton} alt={\"decline\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={MS.bg} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeWorklogModal\r\n\r\n","import React, {Dispatch, SetStateAction} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n// import {withRouter} from 'react-router-dom'\r\nimport ChangeWorklogModal from \"./ChangeWorklogModal\";\r\nimport {GlobalState} from \"../../Data/redux-store\";\r\nimport {\r\n    TAddWorklog, TChangeWorklog, TSetIsPlayingWorklogById,\r\n    TTimerData, TWorkLog, ChangeWorklog, TSetWorklogToChange,\r\n    SetWorklogToChange\r\n}\r\n    from \"../../Data/WorkLogsReducer\";\r\nimport {AddWorklog, SetIsPlayingWorklogById} from \"../../Data/WorkLogsReducer\";\r\n\r\nexport type TModalWindowContainerOwnProps = {\r\n    closeWorklogChangeModal: () => void\r\n    WorklogChangeModalIsOpen: boolean\r\n    TimerData: TTimerData | undefined\r\n    SetTimerData: Dispatch<SetStateAction<TTimerData | undefined>>\r\n}\r\n\r\nexport type T_MSTP_ModalWindowContainer = {\r\n    PlayingWorklog: TWorkLog\r\n    WorklogToChange: TWorkLog | undefined\r\n}\r\n\r\nexport type T_MDTP_ModalWindowContainer = {\r\n    AddWorklog: TAddWorklog\r\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    ChangeWorklog: TChangeWorklog\r\n    SetWorklogToChange: TSetWorklogToChange\r\n}\r\ntype TModalWindowContainerProps =\r\n    T_MDTP_ModalWindowContainer\r\n    & T_MSTP_ModalWindowContainer\r\n    & TModalWindowContainerOwnProps\r\n\r\nclass ChangeWorklogModalContainer extends React.Component<TModalWindowContainerProps> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ChangeWorklogModal closeWorklogChangeModal={this.props.closeWorklogChangeModal}\r\n                                WorklogChangeModalIsOpen={this.props.WorklogChangeModalIsOpen}\r\n                                SetIsPlayingWorklogById={this.props.SetIsPlayingWorklogById}\r\n                                PlayingWorklog={this.props.PlayingWorklog}\r\n                                TimerData={this.props.TimerData}\r\n                                WorklogToChange={this.props.WorklogToChange}\r\n                                ChangeWorklog={this.props.ChangeWorklog}\r\n                                SetTimerData={this.props.SetTimerData}\r\n                                SetWorklogToChange={this.props.SetWorklogToChange}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet StateToProps = (state: GlobalState): T_MSTP_ModalWindowContainer => ({\r\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\r\n    WorklogToChange: state.WorklogsData.WorklogToChange\r\n})\r\n\r\nexport default compose(connect<T_MSTP_ModalWindowContainer, T_MDTP_ModalWindowContainer, TModalWindowContainerOwnProps, GlobalState>\r\n(StateToProps, {\r\n    AddWorklog, SetIsPlayingWorklogById, SetWorklogToChange,\r\n    ChangeWorklog\r\n}))(ChangeWorklogModalContainer)","import React, {useState} from \"react\";\r\nimport LS from \"./LoginModal.module.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 300,\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst LoginModal = () => {\r\n    const classes = useStyles();\r\n    let [LoginFieldValue, SetLoginFieldValue] = useState(\"\")\r\n    let [PasswordFieldValue, SetPasswordFieldValue] = useState(\"\")\r\n    let [ErrorText,SetErrorText] = useState<string>()\r\n\r\n    const onLoginInputChange = (e: any) => {\r\n            SetLoginFieldValue(e.target.value)\r\n    }\r\n\r\n    const onPasswordInputChange = (e: any) => {\r\n            SetPasswordFieldValue(e.target.value)\r\n    }\r\n\r\n    const LoginHandler = () => {\r\n        if(LoginFieldValue === \"test\" && PasswordFieldValue === \"test\"){\r\n            localStorage.setItem(\"IsAuth\",\"true\")\r\n            SetErrorText(undefined)\r\n            SetLoginFieldValue(\"\")\r\n            SetPasswordFieldValue(\"\")\r\n            window.location.reload()\r\n        }\r\n        else {\r\n            SetErrorText(\"Incorrect login or password \")\r\n\r\n        }\r\n    }\r\n\r\n    return (<div className=\"login-modal\">\r\n            <div className={LS.modal}>\r\n                <form className={classes.root} autoComplete=\"off\">\r\n                    <div className={LS.InputsContainer}>\r\n                        <div className={LS.LoginContainer}>\r\n\r\n                            <TextField\r\n                                onChange={onLoginInputChange}\r\n                                error={!!ErrorText}\r\n                                id=\"standard-error-helper-text\"\r\n                                label=\"login\"\r\n                                value={LoginFieldValue}\r\n                                placeholder=\"Please, enter the login\"\r\n                                helperText={ErrorText}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className={LS.PasswordContainer}>\r\n\r\n                            <TextField\r\n                                onChange={onPasswordInputChange}\r\n                                error={!!ErrorText}\r\n                                type={\"password\"}\r\n                                id=\"standard-error-helper-text\"\r\n                                label=\"password\"\r\n                                value={PasswordFieldValue}\r\n                                placeholder=\"Please, enter the password\"\r\n                                helperText={ErrorText}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div style={{paddingTop: \"45px\", paddingLeft: \"110px\"}}>\r\n                            <Button style={{width : \"120px\"}} onClick={LoginHandler} variant=\"outlined\" color=\"secondary\">\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={LS.bg}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal","import React from \"react\";\r\nimport TS from \"./Tooltip.module.css\"\r\nimport TooltipCloseButton from \"../../assets/imgs/Tooltip_Close_button.svg\"\r\nimport {TTooltipInfo} from \"../../App\";\r\n\r\nexport type TTooltipProps = {\r\n    TooltipInfo : TTooltipInfo| undefined\r\n    hideTooltil : () => void\r\n    TooltipIsShowed : boolean\r\n}\r\n\r\nconst Tooltip: React.FC<TTooltipProps> = (props) => {\r\n\r\n    return <>\r\n        {props.TooltipIsShowed\r\n            ? <div className={TS.TooltipContainer}>\r\n                <div className={TS.TooltipContent}>\r\n                    <div className={TS.StatusAndCloseButtonContainer}>\r\n                        <div className={props.TooltipInfo?.status === \"ok\"\r\n                            ? TS.TooltipStatusOk\r\n                            : props.TooltipInfo?.status === \"warning\"\r\n                                ? TS.TooltipStatusWarning\r\n                                : props.TooltipInfo?.status === \"danger\"\r\n                                    ? TS.TooltipStatusDanger\r\n                                    : undefined}>\r\n\r\n                        </div>\r\n\r\n                        <div onClick={props.hideTooltil} className={TS.TooltipCloseButtonContainer}>\r\n                            <img src={TooltipCloseButton} alt=\"tooltip-close\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={TS.TooltipTextContainer}>\r\n                        {props.TooltipInfo?.text}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            : undefined\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Tooltip","import React, { useState} from 'react';\nimport AS from \"./App.module.css\"\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport WorkLogsContainer from \"./Components/WorkLogs/WorkLogsContainer\";\nimport TimeTracking from \"./Components/TimeTracking/TimeTracking\";\nimport GoogleCalendar from \"./Components/GoogleCalendar/GoogleCalendar\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {GlobalState} from \"./Data/redux-store\";\nimport {\n    SetIsPlayingWorklogById, ChangeWorklog,\n    TWorkLog, TSetIsPlayingWorklogById, TChangeWorklog, TAddWorklog,\n    AddWorklog, TTimerData, TAddToFavorite, AddToFavorite, TWorklogBlock\n} from \"./Data/WorkLogsReducer\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport FavoritesPage from \"./Components/Favorites/FavoritesPage\";\nimport CalendarAndControlButtons from \"./Components/CalendarAndControllButtons/CalendarAndControlButtons\";\nimport {TCurrentDate} from \"./Data/CalendarReducer\";\nimport ChangeWorklogModalContainer from \"./Components/ModalWindow/ChangeWorklogModalContainer\";\nimport LoginModal from \"./Components/LoginPage/LoginModal\";\nimport Tooltip from \"./Components/Tooltip/Tooltip\";\n\n\n\nexport type TAppOwnProps = {\n}\n\nexport type T_MSTP_App = {\n    PlayingWorklog: TWorkLog\n    CurrentDate: TCurrentDate\n    WorklogsBlocks: Array<TWorklogBlock>\n}\n\nexport type T_MDTP_App = {\n    SetIsPlayingWorklogById: TSetIsPlayingWorklogById\n    ChangeWorklog: TChangeWorklog\n    AddWorklog: TAddWorklog\n    AddToFavorite : TAddToFavorite\n}\n\nexport type TAppProps = T_MSTP_App & T_MDTP_App & TAppOwnProps\n\nexport type TTooltipInfo = {\n    text: string\n    status: \"ok\" | \"warning\" | \"danger\"\n}\nexport type TShowTooltip = (TooltipInfo : TTooltipInfo) => void\n\nconst App: React.FC<TAppProps> = (props) => {\n    let [WorklogChangeModalIsOpen, SetWorklogChangeModalIsOpen] = useState(false)\n    let [FavoritesIsClicked, SetFavoritesIsClicked] = useState(false)\n    let [TimerData, SetTimerData] = useState<TTimerData | undefined>(undefined)\n    let [TooltipIsShowed,SetTooltipIsShowed] = useState(false)\n    let [TooltipInfo,SetTooltipInfo] = useState<TTooltipInfo>()\n\n    const OnSetTimerData = (TimerData: TTimerData) => {\n        SetTimerData(TimerData)\n    }\n\n    const OnFavoritesClick = () => {\n        SetFavoritesIsClicked(true)\n    }\n    const OnAllClicked = () => {\n        SetFavoritesIsClicked(false)\n    }\n\n    const openWorklogChangeModal = () => {\n        SetWorklogChangeModalIsOpen(true)\n    }\n\n    const closeWorklogChangeModal = () => {\n        SetWorklogChangeModalIsOpen(false)\n    }\n\n    const showTooltip = (TooltipInfo : TTooltipInfo) =>{\n        TooltipIsShowed && SetTooltipIsShowed(false)\n        SetTooltipInfo(TooltipInfo)\n        SetTooltipIsShowed(true)\n    }\n\n    const hideTooltip = () =>[\n        SetTooltipIsShowed(false)\n    ]\n\n    return (<div className=\"AppWrapper\">\n\n            {localStorage.getItem(\"IsAuth\") === \"true\"\n                ? <>\n                    <Route exact path='/'\n                           render={() => <Redirect to={\"/Home/All\"}/>}/>\n\n                    <div className=\"MainAppWrapper\">\n                        <NavBar/>\n\n                        <div className={AS.CalendarAndButtonsContainer}>\n                            <CalendarAndControlButtons FavoritesIsClicked={FavoritesIsClicked}\n                                                       OnAllClicked={OnAllClicked}\n                                                       OnFavoritesClick={OnFavoritesClick}\n                                                       CurrentDate={props.CurrentDate}\n\n                            />\n                        </div>\n\n                        <div className={AS.MainWrapper}>\n                            <div className=\"WorklogsLayout\">\n\n                                <Route exact path='/Home/All'\n                                       render={() => <div className=\"WorkLogBlock\">\n                                           <div className=\"Worklogs\">\n                                               <WorkLogsContainer TimerData={TimerData}\n                                                                  openWorklogChangeModal={openWorklogChangeModal}\n                                                                  ComponentToDraw={\"Worklogs\"}\n                                                                  showTooltip={showTooltip}\n                                               />\n                                           </div>\n                                       </div>\n                                       }/>\n\n                                <Route exact path='/Home/Favorites'\n                                       render={() => <FavoritesPage FavoritesIsClicked={FavoritesIsClicked}\n                                                                    WorklogsBlocks={props.WorklogsBlocks}\n                                                                    openWorklogChangeModal={openWorklogChangeModal}\n                                                                    TimerData={TimerData}\n                                                                    AddWorklog={props.AddWorklog}\n                                       />}/>\n\n                            </div>\n                            <div className={AS.TImeTracking_and_Calendar}>\n                                <TimeTracking PlayingWorklog={props.PlayingWorklog}\n                                              FavoritesIsClicked={FavoritesIsClicked}\n                                              SetIsPlayingWorklogById={props.SetIsPlayingWorklogById}\n                                              AddWorklog={props.AddWorklog}\n                                              SetTimerData={OnSetTimerData}\n                                              openWorklogChangeModal={openWorklogChangeModal}\n                                              ChangeWorklog={props.ChangeWorklog}/>\n                                <div className=\"GoogleCalendar\">\n                                    <GoogleCalendar/>\n                                </div>\n                            </div>\n                        </div>\n\n                        <ChangeWorklogModalContainer\n                            SetTimerData={SetTimerData}\n                            WorklogChangeModalIsOpen={WorklogChangeModalIsOpen}\n                            closeWorklogChangeModal={() => closeWorklogChangeModal()}\n                            TimerData={TimerData}\n                        />\n                        <Tooltip TooltipIsShowed={TooltipIsShowed} hideTooltil={hideTooltip} TooltipInfo={TooltipInfo}/>\n                    </div>\n                </>\n\n                : <LoginModal/>\n\n            }\n\n\n        </div>\n    );\n}\n\n\nconst MapStateToProps = (state: GlobalState): T_MSTP_App => ({\n    PlayingWorklog: state.WorklogsData.PlayingWorklog,\n    CurrentDate: state.CalendarData.CurrentDate,\n    WorklogsBlocks : state.WorklogsData.WorkLogsBlocks\n})\n\nexport default compose(\n    connect<T_MSTP_App, T_MDTP_App, TAppOwnProps, GlobalState>(MapStateToProps, {\n        SetIsPlayingWorklogById,\n        ChangeWorklog, AddWorklog,AddToFavorite\n    }))(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AS from \"./App.module.css\"\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Data/redux-store\";\nimport App from \"./App\";\n\n{!localStorage.getItem(\"IsAuth\") &&  localStorage.setItem(\"IsAuth\", \"false\") }\n\nReactDOM.render(\n\n    <HashRouter  basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <div className={AS.AppContainer}>\n                    <App/>\n            </div>\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeleteConfirm_modal__NP0te\",\"bg\":\"DeleteConfirm_bg__2icmH\",\"ModalTextContainer\":\"DeleteConfirm_ModalTextContainer__2-EVO\",\"NewWorklogControlButtonsContainer\":\"DeleteConfirm_NewWorklogControlButtonsContainer__2Rt5s\",\"NewWorklogControlButtons\":\"DeleteConfirm_NewWorklogControlButtons__2JHii\",\"NewWorklogSubmitButtonSize\":\"DeleteConfirm_NewWorklogSubmitButtonSize__1d3dd\",\"NewWorklogControlButton\":\"DeleteConfirm_NewWorklogControlButton__3JXRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRContainer\":\"Timer_TimeRContainer__16lLU\",\"TimerWorklogName\":\"Timer_TimerWorklogName__2BtW8\",\"TimerIssueName\":\"Timer_TimerIssueName__i_DiT\",\"TimerControlButtonsContainer\":\"Timer_TimerControlButtonsContainer__2RF33\",\"TimerControlButtons\":\"Timer_TimerControlButtons__3NEwd\",\"Timer\":\"Timer_Timer__ji3V0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GCSContainer\":\"GoogleCalendar_GCSContainer__2skR-\",\"GCS\":\"GoogleCalendar_GCS__1JofJ\",\"GCSDescription\":\"GoogleCalendar_GCSDescription__1KeuU\",\"GCSSwitchPose\":\"GoogleCalendar_GCSSwitchPose__2zX0p\",\"GCSCalendarPose\":\"GoogleCalendar_GCSCalendarPose__hvnAI\",\"CalendarSyncsContainer\":\"GoogleCalendar_CalendarSyncsContainer__6QN1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"LoginModal_modal__xh2O6\",\"bg\":\"LoginModal_bg__2rem_\",\"InputsContainer\":\"LoginModal_InputsContainer__BSJ44\",\"LoginContainer\":\"LoginModal_LoginContainer__3G6Hk\",\"PasswordContainer\":\"LoginModal_PasswordContainer__2mRxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllButtonBgActive\":\"All_AllButtonBgActive__2raAa\",\"AllButtonBg\":\"All_AllButtonBg__18uYw\",\"item\":\"All_item__2aEna\",\"ActiveItem\":\"All_ActiveItem__129Oh\"};","module.exports = __webpack_public_path__ + \"static/media/confirmButton.8d55a976.svg\";","module.exports = __webpack_public_path__ + \"static/media/declineButton.9823975f.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button.ee54e2c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusDanger.168fb5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusWarning.ccaa2bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusOK.b4118d29.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderTimesContainer\":\"WorkLogSlider_SliderTimesContainer__1F60M\",\"SliderTimes\":\"WorkLogSlider_SliderTimes__3TsVZ\",\"TimePickerLine\":\"WorkLogSlider_TimePickerLine__1mjq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarSync\":\"CSCElement_CalendarSync__2zzRN\",\"SyncColorPointContainer\":\"CSCElement_SyncColorPointContainer__1k-CP\",\"SyncInfoContainer\":\"CSCElement_SyncInfoContainer__2WxBs\"};"],"sourceRoot":""}