{"version":3,"sources":["Components/Timer/Timer.module.css","assets/utils/ValidartorsComponents/ElementsValidators.module.css","Components/CalendarAndControllButtons/ControlButtons/All/All.module.css","Components/WorkLogs/WorkLog.module.css","Components/hooks/useWorklogsFunctions.ts","Redux/redux-store.ts","Redux/CalendarReducer.ts","Components/Issues/Inputs/IssuesSelectInput.tsx","assets/imgs/CalendarDayStatusDanger.svg","assets/imgs/CalendarDayStatusWarning.svg","assets/imgs/CalendarDayStatusOK.svg","Components/NavBar/NavBar.module.css","Components/hooks/useInput.ts","assets/imgs/avatar.jpg","Redux/WorkLogsReducer.ts","Components/Calendar/Calendar.module.css","Components/Selectors/IssuesSelectors.ts","Redux/IssuesReducer.ts","Components/CustomElements/CustomInput/CustomInput.tsx","assets/secondary/ParseTimeStr.ts","assets/imgs/new_worklog_button.svg","Components/LineStroke/LineStroke.tsx","Components/WorkLogs/DropDown/WorklogDropDown.tsx","Components/WorkLogs/NestingWorkLog.tsx","Components/WorkLogs/Worklog/WorkTime.tsx","Components/WorkLogs/Worklog/StatusBar.tsx","Components/WorkLogs/Worklog/IssueAndTask.tsx","Components/WorkLogs/Worklog/Time.tsx","Components/WorkLogs/Worklog/ControlButtons.tsx","Components/WorkLogs/Worklog/OnHoverMoreButton.tsx","Components/WorkLogs/WorkLog.tsx","Components/ProgressBar/ProgressBar.tsx","assets/secondary/CreateSnackbarOptions.ts","Components/WorkLogs/WorklogInfo/WorklogInfo.tsx","Components/DeleteConfirmModal/DeleteConfirmModal.tsx","Components/WorkLogs/WorkLogsBlock.tsx","Components/LineStroke/LineStroke.module.css","assets/imgs/ActiveWorklogBG.svg","assets/imgs/arrow-up.svg","assets/imgs/ok_cp.svg","assets/imgs/warning_cp.svg","assets/imgs/danger_cp.svg","assets/imgs/stop_button.svg","assets/imgs/play-button.svg","assets/imgs/worklogMoreButtonBG.svg","assets/imgs/worklogMoreVertical.svg","assets/imgs/new_worklog_button_shadowed.svg","Components/Auth/AuthModal.module.css","Components/PathErrorPage/pathErr.module.css","assets/imgs/calendar.svg","Components/CalendarAndControllButtons/ControlButtons/ControlButtons.module.css","Components/hooks/useBooleanState.ts","Components/TimeTracking/TimeTracking.module.css","assets/utils/ValidartorsComponents/ElementsValidators.js","assets/utils/validators.js","Components/CustomElements/CustomizedButton/CustomizedButton.tsx","Components/WorkLogs/WorklogInfo/WorklogInfo.module.css","Components/NavBar/MaterialNavBar.tsx","Components/Timer/Timer.jsx","Components/TimeTracking/UnActiveTimer.tsx","Components/TimeTracking/TimeTracking.tsx","Components/Auth/SignIn/SignInForm.tsx","Components/Auth/SignIn/SignIn.tsx","Components/Auth/SignUp/SignUpForm.tsx","Components/Auth/SignUp/SignUp.tsx","Components/Auth/AuthPage.tsx","Components/SnackBar/SnackBar.tsx","Components/Progress/Progress.tsx","Components/HOCs/withSuspense/withSuspense.tsx","Components/PathErrorPage/PathErr.tsx","Components/Calendar/CalendarDay.tsx","Components/Calendar/DropDownCalendarFooterElement.tsx","Components/Selectors/CalendarSelectors.ts","Components/Calendar/DropDownCalendar.tsx","Components/Calendar/Calendar.tsx","Components/CalendarAndControllButtons/ControlButtons/All/AllButton.tsx","Components/CalendarAndControllButtons/ControlButtons/Favorites/FavoritesButton.tsx","Components/CalendarAndControllButtons/ControlButtons/ControlButtons.tsx","Components/CalendarAndControllButtons/CalendarAndControlButtons.tsx","App.tsx","index.tsx","Components/Selectors/WorklogsSelectors.ts","App.module.css","assets/secondary/CalculateTime.js","assets/secondary/GetCurrentDate.js","Components/CalendarAndControllButtons/ControlButtons/Favorites/Favorites.module.css","Components/WorkLogs/DropDown/WorklogDropDown.module.css"],"names":["module","exports","useWorklogsFunctions","dispatch","useDispatch","addWorklog","NewWorklog","IsFavorites","AddWorklogAC","deleteWorklog","DelWorklogId","DelParentId","DeleteWorklogAC","setIsPlayingWorklogById","IsPlaying","ElementId","SetIsPlayingWorklogByIdAC","setWorklogToChange","WorklogToChange","SetWorklogToChangeAC","changeWorklog","ChangeWorklogAC","changeFavoritesWorklog","WorklogId","ChangeFavoritesWorklogAC","addToFavorite","AddToFavoriteAC","setWorklogStatus","options","SetWorklogStatusAC","deleteFromFavorites","DeleteFromFavoritesAC","reducers","combineReducers","form","formReducer","CalendarData","CalendarReducer","WorklogsData","WorkLogsReducer","IssuesData","IssuesReducer","store","createStore","applyMiddleware","thunkMiddleWare","window","RandomStatus","arr","length","RangeError","Math","floor","random","RandomDaysCreate","statuses","IntroDaysCount","OutroDaysCount","DaysCount","MaxDaysLength","OutArr","IntroDaysArr","OutroDaysArr","DaysArr","j","push","Signature","DayNumber","DayStatus","id","randomInteger","n","p","DefaultState","Calendar","January","February","March","April","May","June","July","August","September","October","November","December","ClickedMonthDay","CurrentDate","GetCurrentDate","SetClickedMonthDay","Day","type","state","action","IssuesSelectInput","props","classes","makeStyles","theme","createStyles","formControl","margin","spacing","width","root","Item","color","useStyles","className","noValidate","autoComplete","select","label","value","onChange","variant","fullWidth","issues","map","issue","key","useInput","initialValue","useState","setValue","bind","e","target","clear","forceUpdate","val","DEL_WORKLOG","DayName","CurrentMonth","CurrentDay","min","max","rand","WorkLogsBlocks","BlockInfo","BlockCreatedDate","SummaryStatus","SummaryTime","Worklogs","StartTime","EndTime","TaskField","status","NestingItems","TimerValue","Issue","PlayingWorklog","FavoritesWorklogs","SearchWorklogBlock","MonthName","StateCopy","JSON","parse","stringify","getState","WorklogsBlockToBeScrolled","el","split","Month","Number","parseInt","document","getElementById","toString","WorklogsReducer","GetWorklogsBlockCopy","FindWorklogById","WorklogsBlocksCopy","SoughtWorklog","WorklogBlockIndex","undefined","WorklogIndex","NestingWorklogIndex","WorklogBlock","Index","Worklog","WLIndex","NestingItem","NestingIndex","EmptyWorklog","ParentId","WorklogToCreate","some","WBL","unshift","WB","filter","FWorklog","Object","assign","CNestingItem","FNestingItem","NewWorklogs","NewNestingWorklogs","FilteredWorklogBlockCopy","index","WL","WBLtrue","FavoritesWorklog","FavoritesWorklogsCopy","Nest","getIssues","Issues","getCompletedIssues","CompletedIssues","SetIssues","SetCompletedIssues","AddIssue","DeleteIssue","From","ChangeIssue","OldIssue","NewIssue","GetIssuesCopy","CompletedIssue","IssuesCopy","findIndex","CustomInput","placeholder","multiline","parseTimeStr","str","separator","splittedStr","hours","minutes","seconds","LineStroke","LS","lineStroke","WorkLogDropDown","onMouseLeave","onHideMenu","WLDD","Container","onClick","ContentContainer","playingWorklog","componentToDraw","CurrentWorklog","worklogInfo","ContainerEl","parentId","showSnackBar","message","position","horizontal","vertical","severity","blockInfo","setWorklogToDelete","showDeleteModal","NestingWorkLog","WorkTime","WLS","NestingButtonPose","nestingItemsStatus","isDisplayed","Hide","NestingBG","TwwContentImg","src","ArrowUp","alt","Show","TwwContentText","Minus","StatusBar","isPlayingOrDisplayed","ColorPointPoseActive","ColorPointPose","style","transitionTimingFunction","transitionDuration","CP_ok","CP_warning","CP_danger","IssueAndTask","onSetWorklogToChange","WorklogContentContainer","taskField","WorklogTime","TimerValueContainer","timerValue","ControlButtons","isPlaying","ControlButtonsContainer","onStopButtonClicked","StopButton","onPlayButtonClicked","PlayButton","OnHoverMoreButton","isActive","WorklogMoreButtonActive","WorklogMoreButton","WLMoreButtonBG","onMouseEnter","onShow","WorklogMoreVerticalActive","WorklogMoreVertical","WLMoreButtonVertical","WorkLog","dropDownMenuStatus","useBooleanState","WorkLogs","WorklogBlockContainerActive","WorklogBlockContainer","WorklogActiveBG","WorklogBG","keys","i","openWorklogChangeModal","WLlinestrokeActive","WLlinestroke","nestingIsShowing","React","memo","Fragment","height","borderRadius","Bar","now","bg","CreateSnackBarOptions","WorklogInfo","FS","SummaryWorklogInfo","DateBlockContainer","dateOfCreation","statusContainer","DateTime","summaryTime","Progress","summaryStatus","cursor","fontSize","worklogs","every","DownloadIcon","WLlineStrokeContainer","DeleteWorklogConfirmModal","isOpen","open","onClose","aria-labelledby","aria-describedby","container","justify","alignItems","item","fontWeight","paddingTop","paddingBottom","direction","CustomizedButton","bgColor","text","onSubmit","startIcon","fontColor","WorkLogsBlock","worklogsBlocks","useSelector","getWorklogsBlocks","getPlayingWorklog","favoritesWorklogs","getFavoritesWorklog","WFS","deleteModalStatus","worklogToDelete","WorklogInfoContainer","SetIsOpen","Switch","FormInput","input","meta","error","touched","EVS","padding","IssuesFormInput","CreateField","name","validators","component","validate","required","Email","test","PassMinLength","findColorObject","colorName","green","purple","grey","red","blue","teal","common","yellow","deepOrange","orange","blueGrey","cyan","indigo","ColorButton","withStyles","palette","getContrastText","backgroundColor","Button","disabled","grow","flexGrow","menuButton","marginRight","title","display","breakpoints","up","sectionDesktop","sectionMobile","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","LogOut","localStorage","setItem","onUnAuth","renderMobileMenu","Menu","anchorEl","anchorOrigin","keepMounted","transformOrigin","MenuItem","IconButton","openUserProfile","aria-label","aria-controls","aria-haspopup","Avatar","avatar","AppBar","Toolbar","HS","NavLinks","to","Tooltip","arrow","placement","edge","event","currentTarget","prevProps","nextProps","Timer","parsedTimerData","setSeconds","setMinutes","setHours","timerStatusData","worklogInput","issueInput","useEffect","interval","setInterval","clearInterval","TS","TimeRContainer","marginTop","ToFullTime","TimerControlButtonsContainer","TimerControlButtons","timerData","paddingLeft","UnActiveTimer","TTS","TTMainContentRoot","NewWorklogContainer","favoritesIsClicked","onAddEmptyWorklog","NewWorklogButtonPose","NewWorklogButtonSize","NewWorklogButtonShadowed","NewWorklogButton","NewWorklogButtonDescriptionContainer","NewWorklogButtonDescription","TTHorizStrokePose","TimeTracking","TTLayout","strokeVert","TTContent","TimetrackingHeaderContainer","TimetrackingHeader","TimeTrackingLogo","SignInFormRedux","reduxForm","paddingRight","handleSubmit","authErr","helperText","Grid","componentIsSignUp","SignIn","history","useHistory","setAuthErr","formData","email","password","onAuth","replace","SignUpFormRedux","componentIsSignIn","SignUp","console","log","AuthPage","setComponentToDraw","modal","Alert","elevation","Snackbar","isShowing","autoHideDuration","HideDuration","onHide","top","left","marginLeft","CircularProgress","withSuspense","WrappedComponent","fallback","PathErr","PES","wrapper","CalendarDay","DayIsClickedData","WrappedDay","CDS","DayBgClicked","DayBgCurrentDay","DayBgDefault","WorklogsBlockToBeScroled","scrollIntoView","block","inline","behavior","DropDownCalendarDayFaded","DropDownCalendarDay","DropDownCalendarDayNumberClicked","DropDownCalendarDayNumber","WorklogsBlocks","OK","Warn","Danger","EmptyStatus","DropDownCalendarFooterElement","CS","DropDownProgressStatus","getCalendar","getCurrentDate","getClickedMonthDay","DropDownCalendar","calendar","clickedMonthDay","currentDate","setClickedMonthDay","DropDownCalendarHeader","DropDOwnCalendarContentContainer","DropDownCalendarContent","DropDownCalendarDayNames","day","DropDownCalendarFooterContainer","DropDownCalendarFooter","DropDownCalendarData","CalendarContainer","CalendarContent","CalendarDate","CurrentYear","CalendarIcon","AllButton","AllS","AllButtonBg","AllButtonBgActive","ActiveItem","onAllClicked","FavoritesButton","FavoritesButtonBgActive","FavoritesButtonBg","FavoritesTextContainer","onFavoritesClick","pink","CBS","CalendarAndControlButtons","AS","CalendarAndButtons","lazy","Favorites","ChangeWorklogModalContainer","ModalUserProfile","SuspendedIssues","SuspendedFavorites","SuspendedChangeWorklogModalContainer","SuspendedModalUserProfile","App","setIsAuth","worklogModalStatus","favoritesClickedStatus","userProfileClickedStatus","snackBarDisplayingStatus","snackBarOptions","setSnackBarOptions","SnackBarOptions","getItem","exact","path","render","CalendarAndButtonsContainer","MainWrapper","closeWorklogChangeModal","TImeTracking_and_Calendar","worklogChangeModalIsOpen","hide","reason","ReactDOM","basename","process","AppContainer","getWorklogToChange","Numbered","CalculateNewStartTime","CurrentTime","CurrentHours","CurrentMinutes","days","months","date","Date","getFullYear","getMonth","getDate","getDay"],"mappings":"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","file":"static/js/main.517ea514.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRContainer\":\"Timer_TimeRContainer__16lLU\",\"TimerWorklogName\":\"Timer_TimerWorklogName__2BtW8\",\"TimerIssueName\":\"Timer_TimerIssueName__i_DiT\",\"TimerControlButtonsContainer\":\"Timer_TimerControlButtonsContainer__2RF33\",\"TimerControlButtons\":\"Timer_TimerControlButtons__3NEwd\",\"Timer\":\"Timer_Timer__ji3V0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ElementsValidators_formControl__wFZV5\",\"error\":\"ElementsValidators_error__1Akph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllButtonBgActive\":\"All_AllButtonBgActive__3owIi\",\"AllButtonBg\":\"All_AllButtonBg__32eRQ\",\"item\":\"All_item__B30SX\",\"ActiveItem\":\"All_ActiveItem__3OU8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorklogInfoContainer\":\"WorkLog_WorklogInfoContainer__3vBgc\",\"WorklogBlockContainer\":\"WorkLog_WorklogBlockContainer__k3upz\",\"WorklogMoreButton\":\"WorkLog_WorklogMoreButton__1p1cl\",\"WorklogMoreVertical\":\"WorkLog_WorklogMoreVertical__2_aPH\",\"WorklogBG\":\"WorkLog_WorklogBG__3k2mr\",\"WorklogActiveBG\":\"WorkLog_WorklogActiveBG__sZgBP\",\"WorklogMoreVerticalActive\":\"WorkLog_WorklogMoreVerticalActive__LDc95\",\"WorklogMoreButtonActive\":\"WorkLog_WorklogMoreButtonActive__2ibnn\",\"WorklogBlockContainerActive\":\"WorkLog_WorklogBlockContainerActive__awb7y\",\"WLInfoButton\":\"WorkLog_WLInfoButton__2amtG\",\"WLlinestroke\":\"WorkLog_WLlinestroke__2SPgZ\",\"WLlinestrokeActive\":\"WorkLog_WLlinestrokeActive__1wEjg\",\"ColorPointPose\":\"WorkLog_ColorPointPose__2v3Y0\",\"ColorPointPoseActive\":\"WorkLog_ColorPointPoseActive__3Ylmy\",\"WorklogBlock\":\"WorkLog_WorklogBlock__3MTew\",\"WorkTime\":\"WorkLog_WorkTime__35AHM\",\"StartTime\":\"WorkLog_StartTime__pO95X\",\"EndTime\":\"WorkLog_EndTime__6ivO2\",\"Minus\":\"WorkLog_Minus__3ysDf\",\"WorklogContentContainer\":\"WorkLog_WorklogContentContainer__Pdl3q\",\"Issue\":\"WorkLog_Issue__34BO9\",\"TaskField\":\"WorkLog_TaskField__3WyCE\",\"ProgressBarContainer\":\"WorkLog_ProgressBarContainer__2t-30\",\"TimerValueContainer\":\"WorkLog_TimerValueContainer__3bCeV\",\"TimerValue\":\"WorkLog_TimerValue__yfMTJ\",\"ControlButtonsContainer\":\"WorkLog_ControlButtonsContainer__cqNYJ\",\"NestingButtonPose\":\"WorkLog_NestingButtonPose__-jdPs\",\"NestingBG\":\"WorkLog_NestingBG__ALW79\",\"TwwContentText\":\"WorkLog_TwwContentText__1n6ua\",\"WorkLogSliderPose\":\"WorkLog_WorkLogSliderPose__2XB8U\",\"TwwContentImg\":\"WorkLog_TwwContentImg__2jKRv\"};","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    AddWorklogAC, ChangeFavoritesWorklogAC,SetWorklogStatusAC,\r\n    ChangeWorklogAC,AddToFavoriteAC,\r\n    SetIsPlayingWorklogByIdAC,\r\n    SetWorklogToChangeAC,DeleteFromFavoritesAC,DeleteWorklogAC,\r\n    TWorkLog\r\n} from \"../../Redux/WorkLogsReducer\";\r\n\r\nexport const useWorklogsFunctions = ()=>{\r\n    const dispatch =  useDispatch()\r\n\r\n     const addWorklog = (NewWorklog : TWorkLog | null, IsFavorites?: boolean) => dispatch(AddWorklogAC(NewWorklog, IsFavorites))\r\n\r\n     const deleteWorklog = (DelWorklogId: number, DelParentId: number | null = null) =>\r\n        dispatch(DeleteWorklogAC(DelWorklogId,DelParentId))\r\n\r\n     const setIsPlayingWorklogById = (IsPlaying: boolean, ElementId?: number, IsFavorites ?: boolean) =>\r\n        dispatch(SetIsPlayingWorklogByIdAC(IsPlaying, ElementId, IsFavorites))\r\n\r\n     const setWorklogToChange = (WorklogToChange: TWorkLog | null = null) =>\r\n        dispatch(SetWorklogToChangeAC(WorklogToChange))\r\n\r\n     const changeWorklog = (NewWorklog: TWorkLog) => dispatch(ChangeWorklogAC(NewWorklog))\r\n\r\n     const changeFavoritesWorklog = (WorklogId: number, NewWorklog: TWorkLog) =>\r\n        dispatch(ChangeFavoritesWorklogAC(WorklogId, NewWorklog))\r\n\r\n     const addToFavorite = (WorklogId: number) => dispatch(AddToFavoriteAC(WorklogId))\r\n\r\n     const setWorklogStatus = (options: {\r\n        target: \"worklog\" | \"worklogblock\",\r\n        id: number,\r\n        status: \"ok\" | \"danger\" | \"warning\"\r\n    }) => dispatch(SetWorklogStatusAC(options))\r\n\r\n     const deleteFromFavorites= (WorklogId: number)=> dispatch(DeleteFromFavoritesAC(WorklogId))\r\n\r\n    return {\r\n        addWorklog,deleteWorklog,setIsPlayingWorklogById,setWorklogToChange,changeWorklog,changeFavoritesWorklog,\r\n        addToFavorite,setWorklogStatus,deleteFromFavorites\r\n    }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport CalendarReducer from \"./CalendarReducer\";\r\nimport WorkLogsReducer from \"./WorkLogsReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\nimport IssuesReducer from \"./IssuesReducer\";\r\n\r\nlet reducers = combineReducers({\r\n form : formReducer,\r\n CalendarData : CalendarReducer,\r\n WorklogsData  : WorkLogsReducer,\r\n IssuesData : IssuesReducer\r\n})\r\n\r\ntype Treducers = typeof reducers\r\n\r\nexport type GlobalState = ReturnType<Treducers>\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\nexport default store\r\n","import {randomInteger} from \"./WorkLogsReducer\";\r\nimport {GetCurrentDate} from \"../assets/secondary/GetCurrentDate\";\r\n\r\n\r\nconst SET_CLICKED_MONTH_DAYS = 'CALENDAR/SET_CLICKED_MONTH_DAYS'\r\n\r\nconst RandomStatus = (arr: Array<any>) => {\r\n    if (arr.length <= 0) {\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    }\r\n    let rand = Math.floor(Math.random() * arr.length)\r\n    return arr[rand]\r\n}\r\n\r\n\r\nconst RandomDaysCreate = (statuses: Array<string> = [], IntroDaysCount: number, OutroDaysCount: number, DaysCount: number) => {\r\n    let MaxDaysLength = 35\r\n    let OutArr: Array<TDay> = []\r\n    let IntroDaysArr: Array<TDay> = []\r\n    let OutroDaysArr: Array<TDay> = []\r\n    let DaysArr: Array<TDay> = []\r\n\r\n    if (IntroDaysCount + OutroDaysCount + DaysCount > MaxDaysLength) {\r\n        throw new RangeError(`getRandom: maximum of days it  a ${MaxDaysLength}, please, enter the correct all days counts `);\r\n    } else {\r\n\r\n        for (let j = 1; j <= IntroDaysCount; j++) {\r\n            IntroDaysArr.push({\r\n                Signature: \"intro\",\r\n                DayNumber: j,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let n = 1; n <= DaysCount; n++) {\r\n            DaysArr.push({\r\n                Signature: \"main\",\r\n                DayNumber: n,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let p = 1; p <= OutroDaysCount; p++) {\r\n            OutroDaysArr.push({\r\n                Signature: \"outro\",\r\n                DayNumber: p,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 100000)\r\n            })\r\n        }\r\n        OutArr.push(...IntroDaysArr)\r\n        OutArr.push(...DaysArr)\r\n        OutArr.push(...OutroDaysArr)\r\n        return OutArr\r\n    }\r\n}\r\n\r\n\r\nexport type TDay = {\r\n    Signature: string\r\n    DayNumber: number\r\n    DayStatus: string\r\n    id: number\r\n}\r\ntype TMonth = TDay[]\r\n\r\nexport interface TCalendar {\r\n    [key: string]: TMonth\r\n}\r\n\r\nexport type TClickedDay = {\r\n    id: number,\r\n    DayNumber: string | number\r\n    MonthName: string\r\n} | null\r\n\r\n\r\nexport type TCurrentDate = {\r\n    DayName: string\r\n    CurrentYear: number | string\r\n    CurrentMonth: string\r\n    CurrentDay: number | string\r\n}\r\n\r\nlet DefaultState = {\r\n    Calendar: {\r\n        January: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        February: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        March: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 4, 30),\r\n        April: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        May: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        June: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        July: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        August: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        September: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        October: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 3, 31),\r\n        November: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        December: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 2, 31)\r\n    } as TCalendar,\r\n    ClickedMonthDay: null as TClickedDay,\r\n    CurrentDate: GetCurrentDate() as TCurrentDate\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<TSetClickedMonthDay>\r\n\r\nconst CalendarReducer = (state = DefaultState, action: TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_CLICKED_MONTH_DAYS : {\r\n            return {\r\n                ...state,\r\n                ClickedMonthDay: action.Day\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetClickedMonthDay = (Day: TClickedDay) => {\r\n    return {type: SET_CLICKED_MONTH_DAYS, Day} as const\r\n}\r\nexport type TSetClickedMonthDay = typeof SetClickedMonthDay\r\n\r\nexport default CalendarReducer","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport TextField from \"@material-ui/core/TextField/TextField\"\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\"\r\n\r\nexport type TIssuesSelectInputProps = {\r\n    issues: string[]\r\n    onChange: (event: React.ChangeEvent<{ value: unknown; }>) => void\r\n    value?: string\r\n    width: number\r\n}\r\n\r\nexport const IssuesSelectInput: React.FC<TIssuesSelectInputProps> = (props) => {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            formControl: {\r\n                margin: theme.spacing(1),\r\n                width: props.width,\r\n            },\r\n            root: {\r\n                '& .MuiTextField-root': {\r\n                    margin: theme.spacing(1),\r\n                }\r\n                },\r\n            Item: {\r\n                color: \"#393a3a\",\r\n            }\r\n        })\r\n    )\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-select-issues\"\r\n                    select\r\n                    label=\"Issues\"\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth={true}\r\n                >\r\n                    {props.issues.map((issue) => (\r\n                        <MenuItem key={issue} value={issue}>\r\n                            {issue}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusDanger.168fb5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusWarning.ccaa2bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusOK.b4118d29.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavBar_NavLinks__22adz\",\"item\":\"NavBar_item__fYm3M\"};","import {useState, ChangeEvent} from \"react\"\r\n\r\ntype defFunc = () => void\r\n\r\nexport const useInput = (initialValue: string): {\r\n    bind: {\r\n        value: string,\r\n        onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    },\r\n    value: string,\r\n    clear: defFunc,\r\n    forceUpdate: (val: string) => void\r\n} => {\r\n\r\n    let [value, setValue] = useState(initialValue)\r\n\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const clear = () => {\r\n        setValue(\"\")\r\n    }\r\n\r\n    const forceUpdate = (val: string) => {\r\n        setValue(val)\r\n    }\r\n    return {\r\n        bind: {value, onChange},\r\n        value,\r\n        clear,\r\n        forceUpdate\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar.ca981f53.jpg\";","import store, {GlobalState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {GetCurrentDate} from \"../assets/secondary/GetCurrentDate\";\r\n\r\nconst ADD_WORKLOG = \"WORKLOGS/ADD_WORKLOG\"\r\nconst DEL_WORKLOG = \"WORKLOGS/DEL_WORKLOG\"\r\nconst SET_IS_PLAYING_WORKLOG_BY_ID = \"WORKLOGS/SET_IS_PLAYING_WORKLOG_BY_ID\"\r\nconst CHANGE_WORKLOG = \"WORKLOGS/CHANGE_WORKLOG\"\r\nconst SET_WORKLOG_TO_CHANGE = \"WORKLOGS/SET_WORKLOG_TO_CHANGE\"\r\nconst ADD_TO_FAVORITE = \"WORKLOGS/ADD_TO_FAVORITE\"\r\nconst SET_WORKLOG_STATUS = \"WORKLOGS/SET_WORKLOG_STATUS\"\r\nconst DELETE_FROM_FAVORITES = \"WORKLOGS/DELETE_FROM_FAVORITES\"\r\nconst CHANGE_FAVORITES_WORKLOG = \"WORKLOGS/CHANGE_FAVORITES_WORKLOG\"\r\nexport const CurrentDate = `${GetCurrentDate().DayName + \",\" + GetCurrentDate().CurrentMonth} ${GetCurrentDate().CurrentDay}`\r\n\r\nexport const randomInteger = (min: number, max: number): number => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport type TNestingItem = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\"\r\n    Issue?: string | null\r\n    id: number\r\n    TimerValue: string | null\r\n}\r\n\r\nexport type TBlockInfo = {\r\n    BlockCreatedDate: string\r\n    SummaryStatus: \"ok\" | \"warning\" | \"danger\" | string\r\n    SummaryTime: string | null\r\n    id: number\r\n}\r\n\r\nexport type TWorkLog = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\"\r\n    TimerValue: string | null\r\n    NestingItems?: Array<TNestingItem> | null\r\n    id: number\r\n    Issue?: string | null\r\n    ParentId?: number\r\n    IsFavorites?: boolean\r\n}\r\n\r\nexport type  TWorklogBlock = {\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n}\r\n\r\nexport type TTimerData = {\r\n    TimerValue: string\r\n    TimerIssue: string\r\n    TimerTaskField: string\r\n}\r\nexport type TSendWorklogsData = {\r\n    WorkLogsBlocks: TWorklogBlock[]\r\n}\r\n\r\nconst DefaultState = {\r\n    WorkLogsBlocks: [{\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Wed,October 7\",\r\n            SummaryStatus: \"ok\",\r\n            SummaryTime: \"07:05:00\",\r\n            id: 1\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"11:00\",\r\n            TaskField: \"Team standup\",\r\n            status: \"warning\",\r\n            NestingItems: null,\r\n            TimerValue: \"02:00:00\",\r\n            id: 444553452341241,\r\n            Issue: \"Meeting\",\r\n            IsFavorites: false\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            NestingItems: null,\r\n            TimerValue: \"01:15:00\",\r\n            id: 213124124125122,\r\n            Issue: \"QA\",\r\n            IsFavorites: false\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            TimerValue: \"03:50:00\",\r\n            id: 2131241255143,\r\n            NestingItems: null,\r\n            Issue: \"Branding\",\r\n            IsFavorites: false\r\n        },\r\n            {\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 123213213244,\r\n                TimerValue: \"01:30:00\",\r\n                NestingItems: null,\r\n                Issue: \"Profit increase\",\r\n                IsFavorites: false\r\n            },\r\n            {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 1232312351245,\r\n                TimerValue: \"03:20:00\",\r\n                NestingItems: null,\r\n                Issue: \"Project Design\",\r\n                IsFavorites: false\r\n            }]\r\n    },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Tue,October 6\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 2\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Team standup\",\r\n                status: \"danger\",\r\n                NestingItems: null,\r\n                TimerValue: \"01:00:00\",\r\n                id: 444553452341246,\r\n                Issue: \"Meeting\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                TaskField: \"Design Meeting\",\r\n                status: \"ok\",\r\n                NestingItems: null,\r\n                TimerValue: \"01:15:00\",\r\n                id: 213124124125127,\r\n                Issue: \"Project Design\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                TimerValue: \"04:50:00\",\r\n                id: 2131241255148,\r\n                Issue: \"Profit increase\",\r\n                IsFavorites: false,\r\n                NestingItems: [{\r\n                    StartTime: \"11:30\",\r\n                    EndTime: \"13:00\",\r\n                    TaskField: \"Marketing strategy\",\r\n                    status: \"warning\",\r\n                    id: 123213213249,\r\n                    TimerValue: \"01:30:00\",\r\n                    Issue: \"Profit increase\",\r\n                    IsFavorites: false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    TaskField: \"Moodboarding\",\r\n                    status: \"ok\",\r\n                    id: 12323123512410,\r\n                    TimerValue: \"03:20:00\",\r\n                    Issue: \"Profit increase\",\r\n                    IsFavorites: false\r\n                }]\r\n            }]\r\n        },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Mon,October 5\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 3\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Team standup\",\r\n                status: \"ok\",\r\n                NestingItems: null,\r\n                TimerValue: \"01:00:00\",\r\n                id: 4445534523412411,\r\n                Issue: \"Meeting\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                TaskField: \"Fixing control buttons on navigation bar\",\r\n                status: \"ok\",\r\n                NestingItems: null,\r\n                TimerValue: \"02:45:00\",\r\n                id: 2131241241251212,\r\n                Issue: \"Amendment\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                TimerValue: \"03:50:00\",\r\n                id: 21312412551413,\r\n                NestingItems: null,\r\n                Issue: \"Profit increase\",\r\n                IsFavorites: false\r\n            },\r\n                {\r\n                    StartTime: \"12:00\",\r\n                    EndTime: \"13:00\",\r\n                    TaskField: \"Create layout for main menu\",\r\n                    status: \"danger\",\r\n                    id: 1232132132414,\r\n                    TimerValue: \"01:00:00\",\r\n                    NestingItems: null,\r\n                    Issue: \"Project Design\",\r\n                    IsFavorites: false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    TaskField: \"Create layout for inputs\",\r\n                    status: \"ok\",\r\n                    id: 12323123512415,\r\n                    TimerValue: \"03:20:00\",\r\n                    NestingItems: null,\r\n                    Issue: \"Project Design\",\r\n                    IsFavorites: false\r\n                }]\r\n        }] as Array<TWorklogBlock>,\r\n    PlayingWorklog: null as TWorkLog | null,\r\n    WorklogToChange: null as TWorkLog | null,\r\n    FavoritesWorklogs: [] as Array<TWorkLog>\r\n}\r\n\r\nexport const SearchWorklogBlock = (MonthName: string, DayNumber: number): Element | null => {\r\n    let StateCopy: DefaultWorklogsState = JSON.parse(JSON.stringify(store.getState().WorklogsData))\r\n    let WorklogsBlockToBeScrolled: HTMLElement | null = null\r\n    StateCopy.WorkLogsBlocks.map(el => {\r\n        let [Month, Day] = [...el.BlockInfo.BlockCreatedDate?.split(\",\")[1].split(\" \")]\r\n        if (Month === MonthName && Number.parseInt(Day) === DayNumber) {\r\n            WorklogsBlockToBeScrolled = document.getElementById(el.BlockInfo.id.toString())\r\n        }\r\n    })\r\n    return WorklogsBlockToBeScrolled\r\n}\r\n\r\n\r\ntype  DefaultWorklogsState = typeof DefaultState\r\n\r\n\r\ntype TWorklogsReducerActions = ReturnType<TAddWorklog> | ReturnType<TDeleteWorklog>\r\n    | ReturnType<TSetIsPlayingWorklogById> | ReturnType<TChangeWorklog>\r\n    | ReturnType<TSetWorklogToChange> | ReturnType<TAddToFavorite> | ReturnType<TSetWorklogStatus>\r\n    | ReturnType<TDeleteFromFavorites> | ReturnType<TChangeFavoritesWorklog>\r\n\r\ntype TWorklogsThunks = ThunkAction<Promise<void>, GlobalState, unknown, TWorklogsReducerActions>\r\n\r\nconst WorklogsReducer = (state = DefaultState, action: TWorklogsReducerActions): DefaultWorklogsState => {\r\n\r\n    const GetWorklogsBlockCopy = (): Array<TWorklogBlock> => {\r\n        return JSON.parse(JSON.stringify(state.WorkLogsBlocks))\r\n    }\r\n\r\n\r\n    const FindWorklogById = (id: number | undefined): {\r\n        SoughtWorklog: TWorkLog\r\n        WorklogBlockIndex: number | undefined\r\n        WorklogIndex: number | undefined\r\n        NestingWorklogIndex: number | undefined\r\n    } => {\r\n        let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n        let SoughtWorklog = {} as TWorkLog\r\n        let WorklogBlockIndex = undefined as number | undefined\r\n        let WorklogIndex = undefined as number | undefined\r\n        let NestingWorklogIndex = undefined as number | undefined\r\n\r\n        WorklogsBlocksCopy.map((WorklogBlock, Index) => {\r\n            WorklogBlock.Worklogs.map((Worklog, WLIndex) => {\r\n\r\n                if (Worklog.NestingItems && Worklog.NestingItems.length > 0 && Worklog.id !== id) {\r\n                    Worklog.NestingItems?.map((NestingItem, NestingIndex) => {\r\n                        if (NestingItem.id === id) {\r\n\r\n                            SoughtWorklog = {\r\n                                ...NestingItem\r\n                            }\r\n                            WorklogBlockIndex = Index\r\n                            NestingWorklogIndex = NestingIndex\r\n                            WorklogIndex = WLIndex\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (Worklog.id === id) {\r\n                        WorklogBlockIndex = Index\r\n                        SoughtWorklog = Worklog\r\n                        WorklogIndex = WLIndex\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        return {SoughtWorklog, WorklogBlockIndex, WorklogIndex, NestingWorklogIndex}\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_WORKLOG: {\r\n\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let EmptyWorklog: TWorkLog = {\r\n                StartTime: null,\r\n                EndTime: null,\r\n                id: randomInteger(0, 10000),\r\n                NestingItems: null,\r\n                TaskField: null,\r\n                Issue: null,\r\n                TimerValue: \"00:00:00\",\r\n                status: \"danger\",\r\n                ParentId: undefined,\r\n                IsFavorites: action.IsFavorites\r\n            }\r\n            let WorklogToCreate = {} as TWorkLog\r\n\r\n            action.NewWorklog\r\n                ? WorklogToCreate = action.NewWorklog\r\n                : WorklogToCreate = EmptyWorklog\r\n\r\n            if (WorklogsBlocksCopy.some(WBL => WBL.BlockInfo.BlockCreatedDate === CurrentDate)) {\r\n                WorklogsBlocksCopy.map(WBL => {\r\n                    WBL.BlockInfo.BlockCreatedDate === CurrentDate && WBL.Worklogs.unshift(WorklogToCreate)\r\n                })\r\n            } else {\r\n                WorklogsBlocksCopy.unshift({\r\n                    BlockInfo: {\r\n                        id: randomInteger(0, 10000),\r\n                        BlockCreatedDate: CurrentDate,\r\n                        SummaryStatus: \"danger\",\r\n                        SummaryTime: \"00:00:00\"\r\n                    }, Worklogs: [\r\n                        WorklogToCreate\r\n                    ]\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                PlayingWorklog: WorklogToCreate,\r\n                FavoritesWorklogs: action.IsFavorites ? [...state.FavoritesWorklogs, EmptyWorklog] : []\r\n            }\r\n        }\r\n\r\n        case SET_IS_PLAYING_WORKLOG_BY_ID: {\r\n            let SoughtWorklog = FindWorklogById(action.ElementId).SoughtWorklog\r\n            action.IsFavorites ? SoughtWorklog.IsFavorites = true : SoughtWorklog.IsFavorites = false\r\n            return {\r\n                ...state,\r\n                PlayingWorklog: action.IsPlaying ?\r\n                    SoughtWorklog\r\n                    : null\r\n            }\r\n        }\r\n        case CHANGE_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n\r\n            WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n\r\n                if (WB.BlockInfo.BlockCreatedDate === CurrentDate) {\r\n\r\n                    if (Worklog.Issue === action.NewWorklog.Issue) {\r\n\r\n                        if (Worklog.id !== action.NewWorklog.id) {\r\n                            WB.Worklogs = WB.Worklogs.filter(FWorklog => FWorklog.id !== action.NewWorklog.id)\r\n                            if (Worklog.NestingItems && Worklog.NestingItems?.length > 0) {\r\n                                Worklog.NestingItems.map(NestingItem => {\r\n                                    if (NestingItem.id === action.NewWorklog.id) {\r\n                                        if (NestingItem.Issue === action.NewWorklog.Issue)\r\n                                            Object.assign(NestingItem, action.NewWorklog)\r\n\r\n                                    } else Worklog.NestingItems?.push(action.NewWorklog)\r\n                                })\r\n                            } else Worklog.NestingItems = [action.NewWorklog]\r\n\r\n\r\n                        } else Object.assign(Worklog, action.NewWorklog)\r\n\r\n                    } else {\r\n                        if (Worklog.id === action.NewWorklog.id) Object.assign(Worklog, action.NewWorklog)\r\n\r\n                        else if (Worklog.NestingItems && Worklog.NestingItems?.length > 0) {\r\n                            Worklog.NestingItems.map(CNestingItem => {\r\n                                if (CNestingItem.id === action.NewWorklog.id && CNestingItem.Issue !== action.NewWorklog.Issue) {\r\n                                    Worklog.NestingItems = Worklog.NestingItems?.filter(FNestingItem => FNestingItem.id !== action.NewWorklog.id)\r\n                                    WB.Worklogs.push(action.NewWorklog)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }))\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DEL_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let NewWorklogs: Array<Array<TWorkLog>> = []\r\n            let NewNestingWorklogs: Array<Array<TNestingItem> | undefined> = []\r\n            let FilteredWorklogBlockCopy = [] as Array<TWorklogBlock>\r\n\r\n            WorklogsBlocksCopy.map((WBL, index) => {\r\n\r\n                if (action.DelParentId) {\r\n                    WBL.Worklogs.map((Worklog, WLIndex) => {\r\n                        if (Worklog.id === action.DelParentId) {\r\n                            NewNestingWorklogs.push(Worklog.NestingItems?.filter(NestingItem => NestingItem.id !== action.DelWorklogId))\r\n                            WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems = NewNestingWorklogs[index]\r\n                        }\r\n                    })\r\n                } else {\r\n                    NewWorklogs.push(WBL.Worklogs.filter(WL => WL.id !== action.DelWorklogId))\r\n                    WorklogsBlocksCopy[index].Worklogs = NewWorklogs[index]\r\n                }\r\n                if (WBL.Worklogs.length === 0) {\r\n                    FilteredWorklogBlockCopy = WorklogsBlocksCopy.filter(WBLtrue => WBLtrue !== WBL)\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: FilteredWorklogBlockCopy.length > 0 ? FilteredWorklogBlockCopy : WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case SET_WORKLOG_TO_CHANGE : {\r\n            return {\r\n                ...state,\r\n                WorklogToChange: action.WorklogToChange ? action.WorklogToChange : null\r\n            }\r\n        }\r\n        case ADD_TO_FAVORITE : {\r\n            let {SoughtWorklog} = FindWorklogById(action.WorklogId)\r\n            return {\r\n                ...state,\r\n                FavoritesWorklogs: [...state.FavoritesWorklogs, SoughtWorklog]\r\n            }\r\n        }\r\n        case SET_WORKLOG_STATUS: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            if (action.options.target === \"worklog\") {\r\n                WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n                    if (Worklog.id === action.options.id) Worklog.status = action.options.status\r\n                }))\r\n            } else {\r\n                WorklogsBlocksCopy.map(WB => {\r\n                    if (WB.BlockInfo.id === action.options.id) WB.BlockInfo.SummaryStatus = action.options.status\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DELETE_FROM_FAVORITES : {\r\n            return {\r\n                ...state,\r\n                FavoritesWorklogs: state.FavoritesWorklogs.filter(FavoritesWorklog => FavoritesWorklog.id !== action.WorklogId)\r\n            }\r\n        }\r\n        case CHANGE_FAVORITES_WORKLOG : {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let FavoritesWorklogsCopy: Array<TWorkLog> = JSON.parse(JSON.stringify(state.FavoritesWorklogs))\r\n            FavoritesWorklogsCopy.map(FavoritesWorklog => {\r\n                if (FavoritesWorklog.NestingItems && FavoritesWorklog.NestingItems?.length > 0) {\r\n                    FavoritesWorklog.NestingItems.map(NestingItem => {\r\n                        if (NestingItem.id === action.WorklogId)\r\n                            Object.assign(NestingItem, action.NewWorklog)\r\n                    })\r\n                } else Object.assign(FavoritesWorklog, action.NewWorklog)\r\n            })\r\n\r\n            WorklogsBlocksCopy.some(WBL => WBL.BlockInfo.BlockCreatedDate === CurrentDate)\r\n                ? WorklogsBlocksCopy.map(WBL => {\r\n\r\n                    WBL.Worklogs.some(Worklog => Worklog.id === action.WorklogId\r\n                        || Worklog.NestingItems?.some(Nest => Nest.id === action.WorklogId))\r\n\r\n                        ? WBL.Worklogs.some(Worklog => Worklog.NestingItems && Worklog.NestingItems.length > 0)\r\n                        ? WBL.Worklogs.map(Worklog => {\r\n                            Worklog.NestingItems?.map(NestingItem => {\r\n                                if (NestingItem.id === action.WorklogId)\r\n                                    Object.assign(NestingItem, action.NewWorklog)\r\n                            })\r\n                        })\r\n                        : WBL.Worklogs.map(Worklog => {\r\n                            if (Worklog.id === action.WorklogId)\r\n                                Object.assign(Worklog, action.NewWorklog)\r\n                        })\r\n                        : WBL.Worklogs.unshift(action.NewWorklog)\r\n                })\r\n                : WorklogsBlocksCopy.unshift({\r\n                    BlockInfo: {\r\n                        BlockCreatedDate: CurrentDate,\r\n                        SummaryStatus: \"danger\",\r\n                        id: randomInteger(0, 10000),\r\n                        SummaryTime: \"00:00:00\"\r\n                    },\r\n                    Worklogs: [\r\n                        action.NewWorklog\r\n                    ]\r\n                })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                FavoritesWorklogs: FavoritesWorklogsCopy\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddWorklogAC = (NewWorklog : TWorkLog | null, IsFavorites?: boolean) => {\r\n    return {type: ADD_WORKLOG, NewWorklog, IsFavorites} as const\r\n}\r\nexport type TAddWorklog = typeof AddWorklogAC\r\n\r\nexport const DeleteWorklogAC = (DelWorklogId: number, DelParentId: number | null = null) => {\r\n    return {type: DEL_WORKLOG, DelWorklogId, DelParentId} as const\r\n}\r\nexport type TDeleteWorklog = typeof DeleteWorklogAC\r\n\r\nexport const SetIsPlayingWorklogByIdAC = (IsPlaying: boolean, ElementId?: number, IsFavorites ?: boolean) => {\r\n    return {type: SET_IS_PLAYING_WORKLOG_BY_ID, IsPlaying, ElementId, IsFavorites} as const\r\n}\r\nexport type TSetIsPlayingWorklogById = typeof SetIsPlayingWorklogByIdAC\r\n\r\nexport const ChangeWorklogAC = (NewWorklog: TWorkLog) => {\r\n    return {type: CHANGE_WORKLOG, NewWorklog} as const\r\n}\r\nexport type TChangeWorklog = typeof ChangeWorklogAC\r\n\r\nexport const SetWorklogToChangeAC = (WorklogToChange: TWorkLog | null = null) => {\r\n    return {type: SET_WORKLOG_TO_CHANGE, WorklogToChange} as const\r\n}\r\nexport type TSetWorklogToChange = typeof SetWorklogToChangeAC\r\n\r\nexport const AddToFavoriteAC = (WorklogId: number) => {\r\n    return {type: ADD_TO_FAVORITE, WorklogId} as const\r\n}\r\nexport type TAddToFavorite = typeof AddToFavoriteAC\r\n\r\n\r\n// export const SendWorklogBlockThunk = (WorklogBlockData: TSendWorklogsData): TWorklogsThunks => async (dispatch) => {\r\n//\r\n//     const SendNewMessageResult = await API.SendWorklogBlock(WorklogBlockData)\r\n//     // if (SendNewMessageResult.resultCode === 0) {\r\n//     //     dispatch(GetWorklogs(WorklogBlockId))\r\n//     // }\r\n// }\r\n// export type TSendWorklogBlockThunk = typeof SendWorklogBlockThunk\r\n\r\nexport const SetWorklogStatusAC = (options: {\r\n    target: \"worklog\" | \"worklogblock\",\r\n    id: number,\r\n    status: \"ok\" | \"danger\" | \"warning\"\r\n}) => {\r\n    return {type: SET_WORKLOG_STATUS, options} as const\r\n}\r\nexport type TSetWorklogStatus = typeof SetWorklogStatusAC\r\n\r\nexport const DeleteFromFavoritesAC = (WorklogId: number) => {\r\n    return {type: DELETE_FROM_FAVORITES, WorklogId} as const\r\n}\r\n\r\nexport type TDeleteFromFavorites = typeof DeleteFromFavoritesAC\r\n\r\nexport const ChangeFavoritesWorklogAC = (WorklogId: number, NewWorklog: TWorkLog) => {\r\n    return {type: CHANGE_FAVORITES_WORKLOG, WorklogId, NewWorklog} as const\r\n}\r\n\r\nexport type TChangeFavoritesWorklog = typeof ChangeFavoritesWorklogAC\r\n\r\nexport default WorklogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarContainer\":\"Calendar_CalendarContainer__I7VPR\",\"CalendarContent\":\"Calendar_CalendarContent__7J52V\",\"CalendarIcon\":\"Calendar_CalendarIcon__35v8Z\",\"CalendarDate\":\"Calendar_CalendarDate__1Fc1O\",\"DropDownCalendar\":\"Calendar_DropDownCalendar__rOVL_\",\"DropDownCalendarHeader\":\"Calendar_DropDownCalendarHeader__mMkPr\",\"DropDOwnCalendarContentContainer\":\"Calendar_DropDOwnCalendarContentContainer__1ekcD\",\"DropDownCalendarContent\":\"Calendar_DropDownCalendarContent__3lJK4\",\"DropDownCalendarFooterContainer\":\"Calendar_DropDownCalendarFooterContainer__dEO85\",\"DropDownCalendarFooter\":\"Calendar_DropDownCalendarFooter__3v4wV\",\"DropDownCalendarFooterElement\":\"Calendar_DropDownCalendarFooterElement__2gCAC\",\"DropDownCalendarProgressLineDanger\":\"Calendar_DropDownCalendarProgressLineDanger__k_JjF\",\"DropDownCalendarProgressLineOk\":\"Calendar_DropDownCalendarProgressLineOk__1Tedt\",\"DropDownCalendarProgressLineWarning\":\"Calendar_DropDownCalendarProgressLineWarning__3NPVW\",\"DropDownProgressStatus\":\"Calendar_DropDownProgressStatus__1Hffx\",\"DayBgClicked\":\"Calendar_DayBgClicked__10_xV\",\"DayBgCurrentDay\":\"Calendar_DayBgCurrentDay__35shH\",\"DayBgDefault\":\"Calendar_DayBgDefault__138Ia\",\"DropDownCalendarDay\":\"Calendar_DropDownCalendarDay__1TvNk\",\"DropDownCalendarDayFaded\":\"Calendar_DropDownCalendarDayFaded__3wmG5\",\"DropDownCalendarDayNumber\":\"Calendar_DropDownCalendarDayNumber__3_jQu\",\"DropDownCalendarDayNumberClicked\":\"Calendar_DropDownCalendarDayNumberClicked__YFrra\",\"DropDownCalendarDayNames\":\"Calendar_DropDownCalendarDayNames__qcAdr\",\"bg\":\"Calendar_bg__2aViC\",\"EmptyStatus\":\"Calendar_EmptyStatus__weaVf\"};","import {GlobalState} from \"../../Redux/redux-store\";\r\n\r\nexport const getIssues = (state : GlobalState) => state.IssuesData.Issues\r\nexport const getCompletedIssues = (state : GlobalState) => state.IssuesData.CompletedIssues\r\n","const ADD_ISSUE = \"ISSUES/ADD_ISSUE\"\r\nconst DELETE_ISSUE = \"ISSUES/DELETE_ISSUE\"\r\nconst CHANGE_ISSUE = \"ISSUES/CHANGE_ISSUE\"\r\nconst SET_ISSUES = \"ISSUES/SET_ISSUES\"\r\nconst SET_COMPLETED_ISSUES = \"ISSUES/SET_COMPLETED_ISSUES\"\r\n\r\nlet DefaultState = {\r\n    Issues: [\"Meeting\", \"QA\",\r\n        \"API Middleware\", \"Amendment\", \"Branding\", \"Profit increase\", \"Project Design\",\"Customer\"] as string[],\r\n    CompletedIssues: [\"Some Item 1 \",\"Some Item 2 \",\"Some Item 3 \",\"Some Item  4\",\"Some Item 5 \"] as  string[]\r\n}\r\n\r\ntype  DefaultIssuesState = typeof DefaultState\r\n\r\n\r\ntype TIssuesReducerActions = ReturnType<TAddIssue> | ReturnType<TDeleteIssue>\r\n    | ReturnType<TChangeIssue> | ReturnType<TSetIssues> | ReturnType<TSetCompletedIssues>\r\n\r\nconst IssuesReducer = (state = DefaultState, action: TIssuesReducerActions): DefaultIssuesState => {\r\n\r\n    const GetIssuesCopy = (): Array<string> => {\r\n        return JSON.parse(JSON.stringify(state.Issues))\r\n    }\r\n\r\n    switch (action.type) {\r\n        case SET_ISSUES :{\r\n            return {\r\n                ...state,\r\n                Issues: action.Issues\r\n            }\r\n        }\r\n        case SET_COMPLETED_ISSUES :{\r\n            return {\r\n                ...state,\r\n                CompletedIssues: action.CompletedIssues\r\n            }\r\n        }\r\n\r\n        case ADD_ISSUE : {\r\n            return {\r\n                ...state,\r\n                Issues: [...state.Issues, action.Issue]\r\n            }\r\n        }\r\n        case DELETE_ISSUE : {\r\n            return {\r\n                ...state,\r\n                Issues: action.From === \"Issue\"\r\n                    ? state.Issues.filter(Issue => Issue !== action.Issue)\r\n                    : state.Issues\r\n                ,\r\n                CompletedIssues: action.From === \"CompletedIssue\"\r\n                    ? state.CompletedIssues.filter(CompletedIssue => CompletedIssue !== action.Issue)\r\n                    : state.CompletedIssues\r\n            }\r\n        }\r\n        case CHANGE_ISSUE : {\r\n            let IssuesCopy = GetIssuesCopy()\r\n            IssuesCopy[IssuesCopy.findIndex((value) => value === action.OldIssue)] = action.NewIssue\r\n            return {\r\n                ...state,\r\n                Issues: IssuesCopy\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const  SetIssues = (Issues : string[]) =>{\r\n    return{type : SET_ISSUES, Issues } as const\r\n}\r\nexport type TSetIssues = typeof SetIssues\r\n\r\nexport const  SetCompletedIssues = (CompletedIssues : string[]) =>{\r\n    return{type : SET_COMPLETED_ISSUES, CompletedIssues } as const\r\n}\r\nexport type TSetCompletedIssues = typeof SetCompletedIssues\r\n\r\nexport const AddIssue = (Issue: string) => {\r\n    return {type: ADD_ISSUE, Issue} as const\r\n}\r\nexport type TAddIssue = typeof AddIssue\r\n\r\nexport const DeleteIssue = (Issue: string, From: \"Issue\" | \"CompletedIssue\") => {\r\n    return {type: DELETE_ISSUE, Issue, From} as const\r\n}\r\nexport type TDeleteIssue = typeof DeleteIssue\r\n\r\nexport const ChangeIssue = (OldIssue: string, NewIssue: string) => {\r\n    return {type: CHANGE_ISSUE, OldIssue, NewIssue} as const\r\n}\r\nexport type TChangeIssue = typeof ChangeIssue\r\n\r\nexport default IssuesReducer","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport type TCustomInputProps = {\r\n    value : string\r\n    onChange : (event: React.ChangeEvent<HTMLInputElement>) =>void\r\n    placeholder : string\r\n    label : string\r\n    width : number\r\n}\r\n\r\nexport const CustomInput: React.FC<TCustomInputProps> = (props) => {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                '& .MuiTextField-root': {\r\n                    margin: theme.spacing(1),\r\n                    width: props.width,\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const classes = useStyles()\r\n    return <div className={classes.root}>\r\n        <TextField\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            id=\"standard-textarea\"\r\n            label={props.label}\r\n            placeholder={props.placeholder}\r\n            multiline\r\n        />\r\n    </div>\r\n}\r\n","export const parseTimeStr = (str : string,separator = \":\")=>{\r\n    const splittedStr = str.split(separator)\r\n    return {\r\n        hours : Number(splittedStr[0]),\r\n        minutes : Number(splittedStr[1]),\r\n        seconds : Number(splittedStr[2])\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button.ee54e2c2.svg\";","import React from \"react\";\r\nimport LS from \"./LineStroke.module.css\"\r\n\r\nexport const LineStroke  = () => {\r\n    return ( <div className={LS.lineStroke}> </div>)\r\n}\r\n","import React, {Dispatch} from \"react\";\r\nimport WLDD from \"./WorklogDropDown.module.css\"\r\nimport {\r\n    CurrentDate, randomInteger, TAddToFavorite,\r\n    TAddWorklog, TBlockInfo, TWorkLog\r\n} from \"../../../Redux/WorkLogsReducer\";\r\nimport {TShowSnackBar} from \"../../../App\";\r\nimport {TComponentToDraw} from \"../../../globalTypes/Types\";\r\n\r\nexport type TWorklogDropDownProps = {\r\n    showDeleteModal: () => void\r\n    setWorklogToDelete: Dispatch<any>\r\n    addToFavorite: TAddToFavorite\r\n    playingWorklog: TWorkLog | null\r\n    componentToDraw: TComponentToDraw\r\n    addWorklog: TAddWorklog\r\n    blockInfo?: TBlockInfo\r\n    showSnackBar: TShowSnackBar\r\n    onHideMenu: () => void\r\n    worklogInfo: TWorkLog\r\n    nestingIsShowing: boolean\r\n    parentId : number | undefined\r\n}\r\nexport const WorkLogDropDown: React.FC<TWorklogDropDownProps> = (props) => {\r\n\r\n    const OnDeleteModalOpenContainer = () => {\r\n        if ((props.componentToDraw === \"FavoritesWorklogs\" && !props.playingWorklog)\r\n            || (props.blockInfo?.BlockCreatedDate === CurrentDate && !props.playingWorklog)) {\r\n            props.setWorklogToDelete({...props.worklogInfo,ParentId : props.parentId})\r\n            props.showDeleteModal()\r\n        }\r\n    }\r\n    const OnAddToFavorites = () => {\r\n        if (!props.playingWorklog?.id && props.componentToDraw === \"Worklogs\") {\r\n            if (props.parentId) props.addToFavorite(props.worklogInfo.id)\r\n            else props.addToFavorite(props.worklogInfo.id)\r\n            props.showSnackBar({\r\n                message: \"worklog added to favorites\", position: {horizontal: \"center\", vertical: \"top\"},\r\n                severity: \"success\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const OnDuplicateWorklog = () => {\r\n        if (!props.playingWorklog?.id && props.componentToDraw === \"Worklogs\") {\r\n            let CurrentWorklog: TWorkLog = {\r\n                ...props.worklogInfo,\r\n                TimerValue: \"00:00:00\",\r\n                id: randomInteger(0, 10000),\r\n            }\r\n            props.addWorklog(CurrentWorklog)\r\n        }\r\n    }\r\n\r\n\r\n    return (<div onMouseLeave={props.onHideMenu} className={WLDD.Container}>\r\n        <div onClick={props.onHideMenu} className={WLDD.ContentContainer}>\r\n\r\n            <div onClick={OnDuplicateWorklog} className={WLDD.ContainerEl}>\r\n                Duplicate\r\n            </div>\r\n\r\n            <div onClick={OnAddToFavorites} className={WLDD.ContainerEl}>\r\n                Add to Favorite\r\n            </div>\r\n\r\n            <div onClick={OnDeleteModalOpenContainer} className={WLDD.ContainerEl}>\r\n                Delete\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n","import React from \"react\";\r\nimport {WorkLog,TWorklogProps} from \"./WorkLog\";\r\n\r\nexport const NestingWorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    return <div className=\"NestedItem\">\r\n\r\n        {\r\n            props.worklogInfo.NestingItems?.map(NestingItem =>\r\n                <div key={NestingItem.id}>\r\n                    <WorkLog {...props}\r\n                             worklogInfo={NestingItem}\r\n                             parentId={props.worklogInfo.id}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport ArrowUp from \"../../../assets/imgs/arrow-up.svg\";\r\nimport {TWorkLog} from \"../../../Redux/WorkLogsReducer\";\r\nimport {useBooleanStateReturnType} from \"../../hooks/useBooleanState\";\r\n\r\ntype TWorkTimeProps ={\r\n    worklogInfo : TWorkLog\r\n    nestingItemsStatus : useBooleanStateReturnType\r\n}\r\nexport const WorkTime :React.FC<TWorkTimeProps> = (props)=><>\r\n    {\r\n        props.worklogInfo.NestingItems && props.worklogInfo.NestingItems.length > 0\r\n            ? <div className={WLS.NestingButtonPose}>\r\n                {\r\n                    props.nestingItemsStatus.isDisplayed\r\n                        ? <div onClick={props.nestingItemsStatus.Hide} className={WLS.NestingBG}>\r\n                            <img className={WLS.TwwContentImg} src={ArrowUp} alt=\"\"/>\r\n                        </div>\r\n\r\n                        : <div onClick={props.nestingItemsStatus.Show} className={WLS.NestingBG}>\r\n                                            <span\r\n                                                className={WLS.TwwContentText}>\r\n                                                    {props.worklogInfo.NestingItems.length}\r\n                                            </span>\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n            : props.worklogInfo.StartTime && props.worklogInfo.EndTime\r\n            ? <div className={WLS.WorkTime}>\r\n\r\n                <div className={WLS.StartTime}>\r\n                    {props.worklogInfo.StartTime}\r\n                </div>\r\n\r\n                <div className={WLS.Minus}>\r\n                    -\r\n                </div>\r\n\r\n                <div className={WLS.EndTime}>\r\n                    {props.worklogInfo.EndTime}\r\n                </div>\r\n\r\n            </div>\r\n            : <div/>\r\n    }\r\n</>","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport CP_ok from \"../../../assets/imgs/ok_cp.svg\";\r\nimport CP_warning from \"../../../assets/imgs/warning_cp.svg\";\r\nimport CP_danger from \"../../../assets/imgs/danger_cp.svg\";\r\n\r\ntype TStatusBarProps = {\r\n    isPlayingOrDisplayed: boolean\r\n    status : \"ok\" | \"warning\" | \"danger\"\r\n}\r\n\r\nexport const StatusBar: React.FC<TStatusBarProps> = (props) =>\r\n    <div className={props.isPlayingOrDisplayed\r\n        ? WLS.ColorPointPoseActive\r\n        : WLS.ColorPointPose}>\r\n        <img style={{transitionTimingFunction: \"ease-out\", transitionDuration: \"0.3s\"}}\r\n             src={props.status === \"ok\"\r\n                 ? CP_ok : props.status === \"warning\"\r\n                     ? CP_warning : props.status === \"danger\"\r\n                         ? CP_danger : undefined} alt=\"\"\r\n        />\r\n    </div>\r\n","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\ntype TIssueAndTaskProps ={\r\n    onSetWorklogToChange : ()=>void\r\n    issue : string | null | undefined\r\n    taskField : string | null\r\n}\r\nexport const IssueAndTask : React.FC<TIssueAndTaskProps> = (props) =>{\r\n\r\n    return  <div onClick={props.onSetWorklogToChange} className={WLS.WorklogContentContainer}>\r\n        <div className={WLS.Issue}>\r\n            {props.issue}\r\n        </div>\r\n        <div className={WLS.TaskField}>\r\n            {props.taskField}\r\n        </div>\r\n    </div>\r\n}","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\ntype TWorklogTimeProps = {\r\n    timerValue : string | null\r\n}\r\nexport const WorklogTime : React.FC<TWorklogTimeProps>=(props)=> <div className={WLS.TimerValueContainer}>\r\n    <div className={WLS.TimerValue}>{props.timerValue}</div>\r\n</div>","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport StopButton from \"../../../assets/imgs/stop_button.svg\";\r\nimport PlayButton from \"../../../assets/imgs/play-button.svg\";\r\n\r\ntype TWorklogControlButtonsProps = {\r\n    isPlaying : boolean\r\n    onStopButtonClicked : ()=> void\r\n    onPlayButtonClicked : ()=> void\r\n}\r\nexport const ControlButtons : React.FC<TWorklogControlButtonsProps> = (props) => <>\r\n    {props.isPlaying\r\n        ? <div className={WLS.ControlButtonsContainer} onClick={props.onStopButtonClicked}>\r\n            <img src={StopButton} alt=\"stop-button\"/>\r\n        </div>\r\n\r\n        : <div className={WLS.ControlButtonsContainer} onClick={props.onPlayButtonClicked}>\r\n            <img src={PlayButton} alt=\"play-button\"/>\r\n        </div>}\r\n        </>","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport WLMoreButtonBG from \"../../../assets/imgs/worklogMoreButtonBG.svg\";\r\nimport WLMoreButtonVertical from \"../../../assets/imgs/worklogMoreVertical.svg\";\r\ntype TOnHoverMoreButtonProps = {\r\n    isActive : boolean\r\n    onShow : ()=>void\r\n}\r\n\r\nexport const OnHoverMoreButton:React.FC<TOnHoverMoreButtonProps>=(props)=><div className=\"WLMoreContainer\">\r\n    <div className={props.isActive ? WLS.WorklogMoreButtonActive : WLS.WorklogMoreButton}>\r\n        <img src={WLMoreButtonBG} alt=\"\"/>\r\n    </div>\r\n\r\n    <div onMouseEnter={props.onShow} className={props.isActive ? WLS.WorklogMoreVerticalActive : WLS.WorklogMoreVertical}>\r\n        <img src={WLMoreButtonVertical} alt=\"more-vertical\"/>\r\n    </div>\r\n\r\n</div>","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {LineStroke} from \"../LineStroke/LineStroke\";\r\nimport {\r\n    CurrentDate,\r\n    TAddToFavorite,\r\n    TAddWorklog,\r\n    TBlockInfo,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogToChange,\r\n    TWorkLog\r\n} from \"../../Redux/WorkLogsReducer\";\r\nimport {WorkLogDropDown} from \"./DropDown/WorklogDropDown\";\r\nimport {NestingWorkLog} from \"./NestingWorkLog\";\r\nimport WorklogActiveBG from \"../../assets/imgs/ActiveWorklogBG.svg\"\r\nimport {TWorklogsContainerOwnProps} from \"../../globalTypes/Types\";\r\nimport {useBooleanState} from \"../hooks/useBooleanState\";\r\nimport {WorkTime} from \"./Worklog/WorkTime\";\r\nimport {StatusBar} from \"./Worklog/StatusBar\";\r\nimport {IssueAndTask} from \"./Worklog/IssueAndTask\";\r\nimport {WorklogTime} from \"./Worklog/Time\";\r\nimport {ControlButtons} from \"./Worklog/ControlButtons\";\r\nimport {OnHoverMoreButton} from \"./Worklog/OnHoverMoreButton\";\r\n\r\n\r\nexport type TWorklogOwnProps = {\r\n    setWorklogToDelete: Dispatch<SetStateAction<TWorkLog | null>>\r\n    worklogInfo: TWorkLog\r\n    parentId?: number\r\n    blockInfo?: TBlockInfo\r\n    setIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    playingWorklog: TWorkLog | null\r\n    setWorklogToChange: TSetWorklogToChange\r\n    addWorklog: TAddWorklog\r\n    addToFavorite: TAddToFavorite\r\n    showDeleteModal : ()=> void\r\n}\r\nexport type TWorklogProps = TWorklogsContainerOwnProps & TWorklogOwnProps\r\n\r\nexport const WorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    const dropDownMenuStatus = useBooleanState(false)\r\n    const nestingItemsStatus = useBooleanState(false)\r\n    const onStopButtonClicked = () => props.setIsPlayingWorklogById(false, props.worklogInfo.id)\r\n\r\n    const onPlayButtonClicked = () => {\r\n        if ((props.componentToDraw === \"FavoritesWorklogs\" && !props.playingWorklog)\r\n            || (props.blockInfo?.BlockCreatedDate === CurrentDate && !props.playingWorklog))\r\n            props.setIsPlayingWorklogById(true, props.worklogInfo.id, props.componentToDraw === \"FavoritesWorklogs\")\r\n    }\r\n\r\n    const onSetWorklogToChange = () => {\r\n        if ((props.componentToDraw === \"FavoritesWorklogs\" && !props.playingWorklog)\r\n            || (props.blockInfo?.BlockCreatedDate === CurrentDate && !props.playingWorklog)) {\r\n            let keys = [\"id\", \"StartTime\", \"TaskField\", \"TimerValue\", \"EndTime\"\r\n                , \"status\", \"NestingItems\", \"Issue\"]\r\n            let WorklogToChange = {} as TWorkLog\r\n            for (let i = 0; i < keys.length; i++) {\r\n                // @ts-ignore\r\n                WorklogToChange[`${(keys[i])}`] = props.worklogInfo[keys[i]]\r\n            }\r\n            props.componentToDraw === \"Worklogs\"\r\n                ? WorklogToChange.IsFavorites = false\r\n                : WorklogToChange.IsFavorites = true\r\n\r\n            props.setWorklogToChange(WorklogToChange)\r\n            props.openWorklogChangeModal()\r\n        }\r\n    }\r\n\r\n    return <div className={WLS.WorkLogs}>\r\n        <div className={props.playingWorklog?.id === props.worklogInfo.id || dropDownMenuStatus.isDisplayed\r\n            ? WLS.WorklogBlockContainerActive\r\n            : WLS.WorklogBlockContainer}>\r\n            <div className=\"WorklogBG\">\r\n\r\n                <img\r\n                    className={props.playingWorklog?.id === props.worklogInfo.id\r\n                    || dropDownMenuStatus.isDisplayed ? WLS.WorklogActiveBG : WLS.WorklogBG}\r\n                    src={WorklogActiveBG} alt=\"\"/>\r\n\r\n\r\n                <div className={WLS.WorklogBlock}>\r\n\r\n                    <WorkTime worklogInfo={props.worklogInfo} nestingItemsStatus={nestingItemsStatus}/>\r\n\r\n                    <StatusBar\r\n                        isPlayingOrDisplayed={props.playingWorklog?.id === props.worklogInfo.id || dropDownMenuStatus.isDisplayed}\r\n                        status={props.worklogInfo.status}/>\r\n\r\n                    <IssueAndTask onSetWorklogToChange={onSetWorklogToChange} issue={props.worklogInfo.Issue}\r\n                                  taskField={props.worklogInfo.TaskField}/>\r\n\r\n                    <WorklogTime timerValue={props.worklogInfo.TimerValue}/>\r\n\r\n                    <ControlButtons\r\n                        isPlaying={!!(props.playingWorklog && props.playingWorklog.id === props.worklogInfo.id)}\r\n                        onStopButtonClicked={onStopButtonClicked}\r\n                        onPlayButtonClicked={onPlayButtonClicked}/>\r\n\r\n                    <OnHoverMoreButton\r\n                        isActive={props.playingWorklog?.id === props.worklogInfo.id || dropDownMenuStatus.isDisplayed}\r\n                        onShow={dropDownMenuStatus.Show}/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={props.playingWorklog?.id === props.worklogInfo.id\r\n                ? WLS.WLlinestrokeActive\r\n                : WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </div>\r\n        {\r\n            dropDownMenuStatus.isDisplayed && <WorkLogDropDown onHideMenu={dropDownMenuStatus.Hide}\r\n                                                               nestingIsShowing={nestingItemsStatus.isDisplayed}\r\n                                                               showSnackBar={props.showSnackBar}\r\n                                                               playingWorklog={props.playingWorklog}\r\n                                                               addWorklog={props.addWorklog}\r\n                                                               componentToDraw={props.componentToDraw}\r\n                                                               setWorklogToDelete={props.setWorklogToDelete}\r\n                                                               showDeleteModal={props.showDeleteModal}\r\n                                                               addToFavorite={props.addToFavorite}\r\n                                                               worklogInfo={props.worklogInfo}\r\n                                                               blockInfo={props.blockInfo}\r\n                                                               parentId={props.parentId}\r\n            />}\r\n\r\n        {\r\n            nestingItemsStatus.isDisplayed && <NestingWorkLog {...props} />\r\n        }\r\n    </div>\r\n}\r\n","import React from \"react\";\r\n//@ts-ignore\r\nimport {Progress} from 'bootstrap-4-react';\r\n\r\nexport type TProgressBarProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | string\r\n}\r\n\r\nconst ProgressBar: React.FC<TProgressBarProps> = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Progress  style={{ width: \"100px\", height: \"8px\", borderRadius : \"20px\"}} >\r\n                <Progress.Bar  min=\"0\" max=\"100\" now={props.status === \"ok\" ?\r\n                    \"90\" : props.status === \"warning\"\r\n                        ? \"50\" : props.status === \"danger\"\r\n                            ? \"25\" : null}\r\n\r\n                              bg={props.status === \"ok\" ?\r\n                                  \"success\" : props.status === \"warning\"\r\n                                      ? \"warning\" : props.status === \"danger\"\r\n                                          ? \"danger\" : null}/>\r\n            </Progress>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProgressBar)","import {TSnackBarOptions} from \"../../Components/SnackBar/SnackBar\";\n\nconst CreateSnackBarOptions =(severity : \"error\" | \"info\" | \"warning\" | \"success\",message : string)=>(\n    {\n        message,\n        severity,\n        position : {\n            vertical : \"bottom\",\n            horizontal : \"right\"\n        }\n    } as TSnackBarOptions\n)\nexport default CreateSnackBarOptions","import React from \"react\";\r\nimport FS from \"./WorklogInfo.module.css\"\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport {LineStroke} from \"../../LineStroke/LineStroke\";\r\nimport {CurrentDate, TBlockInfo, TSetWorklogStatus, TWorkLog} from \"../../../Redux/WorkLogsReducer\";\r\nimport {TShowSnackBar} from \"../../../App\";\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport CreateSnackBarOptions from \"../../../assets/secondary/CreateSnackbarOptions\";\r\n\r\n\r\nexport type TWorklogInfoProps = {\r\n    dateOfCreation: string | null\r\n    summaryTime: string | null\r\n    summaryStatus: \"ok\" | \"danger\" | \"warning\" | string\r\n    blockInfo: TBlockInfo\r\n    worklogs: Array<TWorkLog>\r\n    showSnackBar: TShowSnackBar\r\n    setWorklogStatus: TSetWorklogStatus\r\n}\r\n\r\nexport const WorklogInfo: React.FC<TWorklogInfoProps> = (props) => {\r\n\r\n    const OnSendWorklogData = (): void => {\r\n        props.worklogs.map(Worklog => {\r\n            if (!Worklog.Issue || Worklog.Issue.length <= 0) {\r\n                props.showSnackBar(CreateSnackBarOptions(\"error\", \"Issue does not exist\"))\r\n                props.setWorklogStatus({target: \"worklog\", status: \"danger\", id: Worklog.id})\r\n            } else if (!Worklog.TaskField || Worklog.TaskField.length <= 0) {\r\n                props.showSnackBar(CreateSnackBarOptions(\"warning\", \"Please, enter the worklog name\"))\r\n                props.setWorklogStatus({target: \"worklog\", status: \"warning\", id: Worklog.id})\r\n            } else if (!Worklog.TimerValue || !Worklog.StartTime || !Worklog.EndTime) {\r\n                props.showSnackBar(CreateSnackBarOptions(\"error\", \"something goes wrong\"))\r\n            } else {\r\n                props.setWorklogStatus({target: \"worklog\", status: \"ok\", id: Worklog.id})\r\n                props.showSnackBar(CreateSnackBarOptions(\"success\", \"your worklog successfully logged\"))\r\n            }\r\n        })\r\n\r\n        if (props.worklogs.every(Worklog => Worklog.EndTime && Worklog.StartTime && Worklog.TimerValue\r\n            && Worklog.TaskField && Worklog.Issue)) {\r\n            // let ObjToSend: TSendWorklogsData = {\r\n            //     WorkLogsBlocks: {\r\n            //         BlockInfo: props.BlockInfo,\r\n            //         Worklogs: props.Worklogs\r\n            //     }\r\n            // }\r\n            //props.SendWorklogBlockThunk(ObjToSend)\r\n            props.setWorklogStatus({target: \"worklogblock\", status: \"ok\", id: props.blockInfo.id})\r\n            props.showSnackBar(CreateSnackBarOptions(\"success\", \"your worklog successfully logged\"))\r\n        } else {\r\n            props.showSnackBar(CreateSnackBarOptions(\"error\", \"Issue does not exist\"))\r\n            props.setWorklogStatus({target: \"worklogblock\", status: \"danger\", id: props.blockInfo.id})\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={FS.SummaryWorklogInfo}>\r\n\r\n                <div className={FS.DateBlockContainer}>\r\n                    {props.dateOfCreation}\r\n                </div>\r\n\r\n                <div className={FS.statusContainer}>\r\n                    <div className={FS.DateTime}>\r\n\r\n                        <div>\r\n                            {props.summaryTime}\r\n                        </div>\r\n\r\n                        <div className={FS.Progress}>\r\n                            <ProgressBar status={props.summaryStatus}/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        props.blockInfo.BlockCreatedDate === CurrentDate\r\n                            ? <BackupIcon style={{cursor: \"pointer\"}} color={\"primary\"} fontSize={\"large\"}\r\n                                          onClick={OnSendWorklogData}\r\n                                          className={FS.DownloadIcon}/>\r\n\r\n                            : <BackupIcon color={\"disabled\"} fontSize={\"large\"} className={FS.DownloadIcon}/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={FS.WLlineStrokeContainer}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {CustomizedButton} from \"../CustomElements/CustomizedButton/CustomizedButton\";\r\nimport Dialog from \"@material-ui/core/Dialog/Dialog\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\"\r\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\"\r\nimport Grid from \"@material-ui/core/Grid/Grid\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport type TDeleteWorklogConfirmModalProps = {\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    onSubmit: () => void\r\n}\r\n\r\nexport const DeleteWorklogConfirmModal: React.FC<TDeleteWorklogConfirmModalProps> = (props) => {\r\n    return <>\r\n        {\r\n            props.isOpen && <Dialog\r\n                open={props.isOpen}\r\n                onClose={props.onClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">confirm window</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n\r\n                        <Grid item style={{fontSize: \"1.275rem\", fontWeight: 600}}>\r\n                            Are you sure you want to delete the worklog?\r\n                        </Grid>\r\n\r\n                        <Grid style={{paddingTop: \"2rem\", paddingBottom: \"2rem\"}} item>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-around\">\r\n\r\n                                <Grid item>\r\n\r\n                                    <CustomizedButton bgColor={\"teal\"} text={\"delete\"} onClick={props.onSubmit}\r\n                                                      variant={\"contained\"} fontSize={14} startIcon={<DeleteIcon/>}/>\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n\r\n                                    <CustomizedButton bgColor={\"grey\"} text={\"go back\"} onClick={props.onClose}\r\n                                                      variant={\"contained\"} fontSize={14} fontColor={\"common\"}/>\r\n\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        }\r\n    </>\r\n}\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport {WorkLog} from \"./WorkLog\";\r\nimport {WorklogInfo} from \"./WorklogInfo/WorklogInfo\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {useBooleanState} from \"../hooks/useBooleanState\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {getFavoritesWorklog, getPlayingWorklog, getWorklogsBlocks} from \"../Selectors/WorklogsSelectors\"\r\nimport {useWorklogsFunctions} from \"../hooks/useWorklogsFunctions\"\r\nimport {TWorklogsContainerOwnProps} from \"../../globalTypes/Types\"\r\nimport {DeleteWorklogConfirmModal} from \"../DeleteConfirmModal/DeleteConfirmModal\";\r\nimport {TWorkLog} from \"../../Redux/WorkLogsReducer\";\r\n\r\n\r\nexport const WorkLogsBlock: React.FC<TWorklogsContainerOwnProps> = (props) => {\r\n    const worklogsBlocks = useSelector(getWorklogsBlocks)\r\n    const playingWorklog = useSelector(getPlayingWorklog)\r\n    const favoritesWorklogs = useSelector(getFavoritesWorklog)\r\n\r\n    const WFS = useWorklogsFunctions()\r\n\r\n    const deleteModalStatus = useBooleanState(false)\r\n    const [worklogToDelete, setWorklogToDelete] = useState<TWorkLog | null>(null)\r\n    const onDeleteWorklog = () => {\r\n        if (worklogToDelete) {\r\n            props.componentToDraw === \"Worklogs\"\r\n                ? WFS.deleteWorklog(worklogToDelete.id, worklogToDelete.ParentId)\r\n                : WFS.deleteFromFavorites(worklogToDelete.id)\r\n            deleteModalStatus.Hide()\r\n        }\r\n    }\r\n\r\n\r\n    return <div className=\"WorklogsBlock\">\r\n        {\r\n            props.componentToDraw === \"Worklogs\"\r\n                ? worklogsBlocks.map(WorklogBlock => <div key={WorklogBlock.BlockInfo.id} className=\"Worklogs\">\r\n                    <div className={WLS.WorklogInfoContainer}>\r\n                        <WorklogInfo dateOfCreation={WorklogBlock.BlockInfo.BlockCreatedDate}\r\n                                     summaryTime={WorklogBlock.BlockInfo.SummaryTime}\r\n                                     summaryStatus={WorklogBlock.BlockInfo.SummaryStatus}\r\n                                     worklogs={WorklogBlock.Worklogs}\r\n                                     blockInfo={WorklogBlock.BlockInfo}\r\n                                     showSnackBar={props.showSnackBar}\r\n                                     setWorklogStatus={WFS.setWorklogStatus}/>\r\n                    </div>\r\n                    {\r\n                        WorklogBlock.Worklogs.map(Worklog => <div key={Worklog.id} className=\"WorklogContainer\">\r\n                                <WorkLog\r\n                                    {...props}\r\n                                    worklogInfo={Worklog}\r\n                                    showDeleteModal={deleteModalStatus.Show}\r\n                                    setWorklogToDelete={setWorklogToDelete}\r\n                                    blockInfo={WorklogBlock.BlockInfo}\r\n                                    setWorklogToChange={WFS.setWorklogToChange}\r\n                                    setIsPlayingWorklogById={WFS.setIsPlayingWorklogById}\r\n                                    playingWorklog={playingWorklog}\r\n                                    addWorklog={WFS.addWorklog}\r\n                                    addToFavorite={WFS.addToFavorite}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                )\r\n                : <div className=\"FavoritesWorklogs\">\r\n                    {\r\n                        favoritesWorklogs.length > 0 && favoritesWorklogs.map(\r\n                            FavoritesWorklog => <div key={FavoritesWorklog.id} className=\"FavoritesWorklogContainer\">\r\n                                <WorkLog\r\n                                    {...props}\r\n                                    worklogInfo={FavoritesWorklog}\r\n                                    showDeleteModal={deleteModalStatus.Show}\r\n                                    setWorklogToChange={WFS.setWorklogToChange}\r\n                                    setWorklogToDelete={setWorklogToDelete}\r\n                                    setIsPlayingWorklogById={WFS.setIsPlayingWorklogById}\r\n                                    playingWorklog={playingWorklog}\r\n                                    addWorklog={WFS.addWorklog}\r\n                                    addToFavorite={WFS.addToFavorite}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n        }\r\n        <DeleteWorklogConfirmModal isOpen={deleteModalStatus.isDisplayed} onClose={deleteModalStatus.Hide}\r\n                                   onSubmit={onDeleteWorklog}/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineStroke\":\"LineStroke_lineStroke__2pI3T\"};","module.exports = __webpack_public_path__ + \"static/media/ActiveWorklogBG.215a57fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-up.0dc941bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_cp.08ca5cee.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning_cp.c2d1e025.svg\";","module.exports = __webpack_public_path__ + \"static/media/danger_cp.49659e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop_button.1eb1b96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-button.f9fec951.svg\";","module.exports = __webpack_public_path__ + \"static/media/worklogMoreButtonBG.622f8f21.svg\";","module.exports = __webpack_public_path__ + \"static/media/worklogMoreVertical.37dfcf19.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button_shadowed.6b0a0400.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AuthModal_modal__2EZbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pathErr_wrapper__18X9m\"};","module.exports = __webpack_public_path__ + \"static/media/calendar.daeb1a9d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlButtons_container__2JiDQ\"};","import {useState} from \"react\"\r\n\r\ntype defFunc = ()=> void\r\nexport type useBooleanStateReturnType = {isDisplayed : boolean,Show : defFunc,Hide : defFunc,Switch : defFunc}\r\nexport const useBooleanState = (initialValue : boolean) : useBooleanStateReturnType => {\r\n    let [isDisplayed,SetIsOpen] =useState(initialValue)\r\n    const Show = ()=>SetIsOpen(true)\r\n    const Hide = ()=>SetIsOpen(false)\r\n    const Switch = ()=> SetIsOpen(!isDisplayed)\r\n    return {isDisplayed,Show,Hide,Switch}\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimetrackingHeaderContainer\":\"TimeTracking_TimetrackingHeaderContainer__ON8us\",\"TTLayout\":\"TimeTracking_TTLayout__3veO9\",\"TTContent\":\"TimeTracking_TTContent__EuSq7\",\"TTMainContentRoot\":\"TimeTracking_TTMainContentRoot__1SdVC\",\"TimetrackingHeader\":\"TimeTracking_TimetrackingHeader__2_M3q\",\"TimeTrackingLogo\":\"TimeTracking_TimeTrackingLogo__3Gymw\",\"MoreIconSizeContainer\":\"TimeTracking_MoreIconSizeContainer__CtFXl\",\"MoreIconSize\":\"TimeTracking_MoreIconSize__3hJsc\",\"NewWorklogContainer\":\"TimeTracking_NewWorklogContainer__1Htpq\",\"NewWorklog\":\"TimeTracking_NewWorklog__3l1DI\",\"NewWorklogButtonSize\":\"TimeTracking_NewWorklogButtonSize__1ylBg\",\"NewWorklogButtonPose\":\"TimeTracking_NewWorklogButtonPose__MG6O9\",\"NewWorklogButtonDescriptionContainer\":\"TimeTracking_NewWorklogButtonDescriptionContainer__1V2I5\",\"NewWorklogButtonDescription\":\"TimeTracking_NewWorklogButtonDescription__29EUZ\",\"TTHorizStrokePose\":\"TimeTracking_TTHorizStrokePose__1WjLF\",\"strokeVert\":\"TimeTracking_strokeVert__yTsLP\"};","import React from 'react'\nimport EVS from \"./ElementsValidators.module.css\"\nimport {Field} from \"redux-form\";\nimport { makeStyles } from '@material-ui/core/styles/index';\nimport TextField from '@material-ui/core/TextField/index';\nimport {IssuesSelectInput} from \"../../../Components/Issues/Inputs/IssuesSelectInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            color :\"#393939\"\n        }\n    },\n}));\n\nexport const FormInput = ({input,meta,...props}) =>{\n    const classes = useStyles();\n    return <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\n        <TextField  className={classes.root}  placeholder={props.placeholder}\n                    variant=\"outlined\" {...input} {...props}/>\n        {meta.error && meta.touched ?   <div style={{padding : \"1rem\",color : \"#b20400\"}}> {meta.error}</div> : \"\"}\n    </div>\n}\nexport const IssuesFormInput = ({input,meta,...props}) =>{\n    const classes = useStyles();\n    return <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\n        <IssuesSelectInput  className={classes.root}\n                    variant=\"outlined\" {...input} {...props} />\n        {meta.error && meta.touched ?   <div style={{padding : \"1rem\",color : \"#b20400\"}}> {meta.error}</div> : \"\"}\n    </div>\n}\n\nexport const CreateField = (placeholder,name,validators,component,props ={},text =\"\") => {\n    return <div>\n        <Field placeholder={placeholder} name={name} validate={validators}\n               component={component}  {...props}/> {text}\n    </div>\n}","import React from \"react\"\n\nexport const required = (value) => {\n    if (value) {\n        return undefined\n    } else return <div>\n        This field is required\n    </div>\n}\n\nexport const PhoneNumber =(value)=>{\n    if(/^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/.test(value)) return undefined\n    else return <div>\n        Please,enter the correct phone number\n    </div>\n}\nexport const Email = (value)=>{\n    if(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\]) |(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value)) return undefined\n    else return <div>Please,enter the correct email </div>\n}\nexport const PassMinLength = (value)=>{\n    if(value.length < 6) return <div> Password must be more then 6 symbols! </div>\n    else return undefined\n}\n\nexport const MaxLengthCreator = (MaxLengthValue) => (value) => {\n    if (value && value.length > MaxLengthValue) {\n        return `Maximal length is a ${MaxLengthValue} symbols`\n    } else return undefined\n}","import React from 'react';\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { green, purple,blue,grey,red,common,teal,yellow,deepOrange,orange,blueGrey,cyan,indigo} from '@material-ui/core/colors'\r\n\r\ninterface ColorType {\r\n    [key : string] : string\r\n}\r\ntype color = \"green\" | \"purple\" | \"grey\" | \"red\" | \"blue\" | \"common\"\r\n    | \"teal\" | \"yellow\"| \"white\" | \"indigo\" |\"cyan\" |\"blueGrey\" | \"orange\" | \"deepOrange\"\r\n\r\ntype TCustomizedButtonProps = {\r\n    bgColor? : color\r\n    text : string\r\n    variant  : \"outlined\" | \"contained\" | \"text\"\r\n    fontSize : number | string\r\n    fontColor ? : color\r\n    startIcon ? : JSX.Element\r\n    width ?: number\r\n    disabled ?: boolean\r\n    onClick?: (data : any)=>void\r\n}\r\n\r\nconst findColorObject = (colorName:string) : ColorType  =>{\r\n    switch (colorName) {\r\n        case \"green\" : return green\r\n        case \"purple\" : return purple\r\n        case \"grey\" : return grey\r\n        case \"red\" : return red\r\n        case \"blue\" : return blue\r\n        case \"teal\" : return teal\r\n        case \"common\" : return common\r\n        case \"yellow\" : return yellow\r\n        case \"deepOrange\" : return deepOrange\r\n        case \"orange\" : return orange\r\n        case \"blueGrey\" : return blueGrey\r\n        case \"cyan\" : return cyan\r\n        case \"indigo\" : return indigo\r\n        default : return common\r\n    }\r\n\r\n}\r\n\r\nexport const  CustomizedButton : React.FC<TCustomizedButtonProps>  = (props) => {\r\n\r\n    const useStyles = makeStyles((theme) =>\r\n        createStyles({\r\n            margin: {\r\n                margin: theme.spacing(1),\r\n                width : props.width && props.width\r\n            },\r\n        }),\r\n    )\r\n\r\n    const color = findColorObject(props.bgColor ?props.bgColor :\"white\")\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: props.fontColor\r\n                ? props.fontColor === \"white\" ? red[50] :findColorObject(props.fontColor)[500]\r\n                :theme.palette.getContrastText(color[500]),\r\n            backgroundColor: color[500],\r\n            fontSize : props.fontSize,\r\n            '&:hover': {\r\n                backgroundColor: color[700],\r\n            },\r\n            borderRadius : \"0.6rem\"\r\n        },\r\n    }))(Button)\r\n\r\n    const classes = useStyles();\r\n    return <ColorButton  disabled={props.disabled} onClick={props.onClick}\r\n                         color={\"inherit\"} startIcon={props.startIcon ? props.startIcon : undefined} variant={props.variant}\r\n                         className={classes.margin}>\r\n        {props.text}\r\n    </ColorButton>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SummaryWorklogInfo\":\"WorklogInfo_SummaryWorklogInfo__4-4NV\",\"DateBlockContainer\":\"WorklogInfo_DateBlockContainer__1o7Kx\",\"DownloadIcon\":\"WorklogInfo_DownloadIcon__3DNZg\",\"statusContainer\":\"WorklogInfo_statusContainer__k-PSn\",\"DateTime\":\"WorklogInfo_DateTime__3Z9a0\",\"Progress\":\"WorklogInfo_Progress__25Rn6\",\"WLlineStrokeContainer\":\"WorklogInfo_WLlineStrokeContainer__1Sgro\"};","import React from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport HS from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport avatar from \"../../assets/imgs/avatar.jpg\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n            marginLeft: \"5%\",\r\n            color: \"#FFFFFF\",\r\n            cursor: \"pointer\"\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n        },\r\n        sectionMobile: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n    }),\r\n);\r\ntype TMaterialNavProps = {\r\n    openUserProfile : ()=> void\r\n    onUnAuth : ()=>void\r\n}\r\n const MaterialNav : React.FC<TMaterialNavProps> = (props) =>{\r\n    const classes = useStyles();\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleMobileMenuClose = () => setMobileMoreAnchorEl(null)\r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setMobileMoreAnchorEl(event.currentTarget)\r\n    const LogOut = ()=>{\r\n        localStorage.setItem(\"IsAuth\",\"false\")\r\n        props.onUnAuth()\r\n    }\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton color=\"primary\">\r\n                    <SettingsIcon/>\r\n                </IconButton>\r\n\r\n                Settings\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton onClick={LogOut} color=\"primary\">\r\n                    <ExitToAppIcon/>\r\n                </IconButton>\r\n                Logout\r\n            </MenuItem>\r\n            <MenuItem     onClick={props.openUserProfile} >\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"primary\"\r\n                >\r\n                    <Avatar alt={\"user avatar\"} src={avatar}/>\r\n                </IconButton>\r\n                Profile\r\n            </MenuItem>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <div className={HS.NavLinks}>\r\n                        <div className={HS.item}>\r\n                            <NavLink to=\"/Home/All\">\r\n                                Worklogs\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div className={HS.item}>\r\n                            <NavLink to=\"/Issues/\">\r\n                                Issues\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={classes.grow}/>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Tooltip title=\"Settings\" arrow placement=\"bottom\">\r\n                            <IconButton  color=\"inherit\">\r\n                                <SettingsIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Logout\" arrow placement=\"bottom\">\r\n                            <IconButton onClick={LogOut} color=\"inherit\">\r\n                                <ExitToAppIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Profile\" arrow placement=\"bottom\">\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"inherit\"\r\n                                onClick={props.openUserProfile}\r\n                            >\r\n                                <Avatar alt={\"user avatar\"} src={avatar}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon/>\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n        </div>\r\n    );\r\n}\r\nexport default  React.memo(MaterialNav,(prevProps,nextProps)=>{\r\n    return true\r\n})","import React, {useState, useEffect} from 'react';\r\nimport TS from \"./Timer.module.css\"\r\nimport PlayButton from \"@material-ui/icons/PlayCircleFilled\"\r\nimport {ToFullTime} from \"../../assets/secondary/CalculateTime\"\r\nimport {CustomInput} from \"../CustomElements/CustomInput/CustomInput\";\r\nimport {IssuesSelectInput} from \"../Issues/Inputs/IssuesSelectInput\";\r\nimport {useInput} from \"../hooks/useInput\";\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport {red} from \"@material-ui/core/colors\"\r\nimport {useBooleanState} from \"../hooks/useBooleanState\";\r\nimport {parseTimeStr} from \"../../assets/secondary/ParseTimeStr\";\r\n\r\nexport const Timer = (props) => {\r\n    const parsedTimerData =  parseTimeStr(props.playingWorklog.TimerValue)\r\n    const [seconds, setSeconds] = useState(parsedTimerData.seconds)\r\n    const [minutes, setMinutes] = useState(parsedTimerData.minutes)\r\n    const [hours, setHours] = useState(parsedTimerData.hours)\r\n    const timerStatusData = useBooleanState(true)\r\n    const worklogInput = useInput(props.playingWorklog.TaskField ? props.playingWorklog.TaskField : \"\")\r\n    const issueInput = useInput(props.playingWorklog.Issue ? props.playingWorklog.Issue : \"\")\r\n\r\n    const onStopTimer = () => {\r\n        const timerData = {\r\n            TimerValue: ToFullTime(hours) + \":\" + ToFullTime(minutes) + \":\" + ToFullTime(seconds),\r\n            Issue: issueInput.value ? issueInput.value : props.playingWorklog?.Issue,\r\n            TaskField: worklogInput.value ? worklogInput.value : props.playingWorklog?.TaskField,\r\n        }\r\n        props.openWorklogChangeModal()\r\n        timerStatusData.Hide()\r\n        props.setWorklogToChange({...props.playingWorklog,...timerData})\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStatusData.isDisplayed) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                if (seconds > 59) {\r\n                    setMinutes(minutes => minutes + 1)\r\n                    setSeconds(0)\r\n                }\r\n                if (minutes > 59) {\r\n                    setHours(hours => hours + 1)\r\n                    setMinutes(0)\r\n                }\r\n                if (hours > 23) {\r\n                    setHours(0)\r\n                    clearInterval(interval);\r\n                }\r\n            }, 1000);\r\n        } else if (timerStatusData.isDisplayed && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [timerStatusData.isDisplayed, hours,minutes,seconds]);\r\n\r\n    return (\r\n\r\n        <div className={TS.TimeRContainer}>\r\n            <CustomInput {...worklogInput.bind}\r\n                         label={\"Task Field\"}\r\n                         placeholder={\"Please, enter the task\"}\r\n                         width={250}\r\n            />\r\n\r\n            <div style={{marginTop: \" 10px\"}} className={\"IssuesSelectinput\"}>\r\n                <IssuesSelectInput issues={props.issues}\r\n                                   {...issueInput.bind}\r\n                                   width={250}\r\n                />\r\n            </div>\r\n\r\n            <div className={TS.Timer}>\r\n                {ToFullTime(hours)}:{ToFullTime(minutes)}:{ToFullTime(seconds)}\r\n            </div>\r\n\r\n            <div className={TS.TimerControlButtonsContainer}>\r\n                <div className={TS.TimerControlButtons}>\r\n                    <div onClick={onStopTimer}>\r\n                        <StopIcon style={{marginTop: \"5px\", width: \"50px\",\r\n                            height: \"50px\", backgroundColor: red[400], borderRadius: \"100%\", color: red[50]\r\n                        }}/>\r\n                    </div>\r\n                    <div style={{paddingLeft: \"5px\"}} className=\"controlButtons\" onClick={timerStatusData.Switch}>\r\n                        {timerStatusData.isDisplayed ?\r\n                            <PauseCircleFilledIcon style={{width: \"60px\", height: \"60px\"}} color={\"primary\"}/>\r\n                            : <PlayButton style={{width: \"60px\", height: \"60px\"}} color={\"primary\"}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React from \"react\"\r\nimport TTS from \"./TimeTracking.module.css\";\r\nimport NewWorklogButtonShadowed from \"../../assets/imgs/new_worklog_button_shadowed.svg\";\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\";\r\n\r\ntype TUnActiveTimerProps = {\r\n    favoritesIsClicked: boolean\r\n    onAddEmptyWorklog : ()=>void\r\n}\r\nexport const UnActiveTimer: React.FC<TUnActiveTimerProps> = (props) => {\r\n    return (\r\n        <div className={TTS.TTMainContentRoot}>\r\n            <div className={TTS.NewWorklogContainer}>\r\n                <div className={TTS.NewWorklog}>\r\n\r\n                    <div onClick={!props.favoritesIsClicked\r\n                        ? props.onAddEmptyWorklog\r\n                        : undefined}\r\n                         className={TTS.NewWorklogButtonPose}>\r\n\r\n                        <img className={TTS.NewWorklogButtonSize}\r\n                             src={props.favoritesIsClicked\r\n                                 ? NewWorklogButtonShadowed\r\n                                 : NewWorklogButton\r\n                             }\r\n                             alt=\"new_worklog_button\"/>\r\n                    </div>\r\n\r\n                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n                        <div className={TTS.NewWorklogButtonDescription}>\r\n                            new worklog\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={TTS.TTHorizStrokePose}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport TTS from \"./TimeTracking.module.css\"\r\nimport {Timer} from \"../Timer/Timer\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {getIssues} from \"../Selectors/IssuesSelectors\";\r\nimport {getPlayingWorklog} from \"../Selectors/WorklogsSelectors\";\r\nimport {useWorklogsFunctions} from \"../hooks/useWorklogsFunctions\";\r\nimport {UnActiveTimer} from \"./UnActiveTimer\";\r\n\r\nexport type TTimeTrackingProps = {\r\n    favoritesIsClicked: boolean\r\n    openWorklogChangeModal: () => void\r\n}\r\n\r\nexport const TimeTracking: React.FC<TTimeTrackingProps> = (props) => {\r\n    const issues = useSelector(getIssues)\r\n    const playingWorklog = useSelector(getPlayingWorklog)\r\n    const WFS = useWorklogsFunctions()\r\n    const OnAddEmptyWorklog = () => WFS.addWorklog(null,false)\r\n\r\n    return (<div className={TTS.TTLayout}>\r\n\r\n            <div className={TTS.strokeVert}/>\r\n\r\n            <div className={TTS.TTContent}>\r\n\r\n                <div className={TTS.TimetrackingHeaderContainer}>\r\n                    <div className={TTS.TimetrackingHeader}>\r\n\r\n                        <div className={TTS.TimeTrackingLogo}>\r\n                            Time tracking\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {playingWorklog\r\n                    ? <Timer setIsPlayingWorklogById={WFS.setIsPlayingWorklogById}\r\n                             playingWorklog={playingWorklog}\r\n                             openWorklogChangeModal={props.openWorklogChangeModal}\r\n                             changeWorklog={WFS.changeWorklog}\r\n                             setWorklogToChange={WFS.setWorklogToChange}\r\n                             issues={issues}\r\n                    />\r\n                    : <UnActiveTimer favoritesIsClicked={props.favoritesIsClicked}\r\n                                     onAddEmptyWorklog={OnAddEmptyWorklog}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {CustomizedButton} from \"../../CustomElements/CustomizedButton/CustomizedButton\"\nimport {CreateField, FormInput} from \"../../../assets/utils/ValidartorsComponents/ElementsValidators\"\nimport {required, Email} from \"../../../assets/utils/validators\"\nimport {reduxForm, InjectedFormProps} from \"redux-form\"\nimport {TLoginFormData} from \"./SignIn\";\n\nexport type TOwnProps = {\n    componentIsSignUp: () => void\n    authErr: string[]\n}\n\nconst SignInForm: React.FC<InjectedFormProps<TLoginFormData, TOwnProps> & TOwnProps> = (props) => {\n    return <form style={{paddingTop: \"1.5rem\", paddingRight: \"2rem\", paddingLeft: \"2rem\"}} onSubmit={props.handleSubmit}\n                 className={\"SignInFormContainer\"}>\n\n        <div style={{fontSize: \"1.512rem\", fontWeight: 500}} className=\"SignInFormHeader\">\n            Sign in\n        </div>\n\n\n        {\n            props.authErr.length > 0 &&\n            <div style={{color: \"#ea1f09\", fontSize: \"1.275rem\", padding: \"1rem\"}} className=\"SubmitAuthFormErr\">\n                <span>\n                    {props.authErr[0]}\n                </span>\n            </div>\n        }\n\n        <div className=\"SignInEmailInput\">\n            {CreateField(\"Enter your email\", \"email\", [required, Email],\n                FormInput, {label: \"email\", fullWidth: true, helperText: \"test@g.com - for tests\"})}\n        </div>\n\n        <div className=\"SignInPassWordInput\">\n            {CreateField(\"Enter your password\", \"password\", [required],\n                FormInput, {label: \"password\", type: \"password\", fullWidth: true, helperText: \"test - for tests\"})}\n        </div>\n\n        <div style={{paddingTop: \"1rem\"}} className=\"SignInControlButton\">\n            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n\n                <Grid item>\n                    <CustomizedButton onClick={props.handleSubmit} text=\"enter\"\n                                      variant=\"contained\" bgColor=\"green\"\n                                      fontSize=\"1.11rem\"/>\n                </Grid>\n\n                <Grid item>\n                    <CustomizedButton onClick={props.componentIsSignUp} text=\"sign up\"\n                                      variant=\"contained\" bgColor=\"blue\" fontSize=\"1.11rem\"/>\n                </Grid>\n            </Grid>\n        </div>\n\n        {props.error\n            ?\n            <div style={{paddingTop: \"2rem\", paddingLeft: \"1.12rem\", fontSize: \"1.125rem\", color: \"#ea1f09\"}}>\n                {props.error}\n            </div>\n            : null\n        }\n    </form>\n}\n\nexport const SignInFormRedux = reduxForm<TLoginFormData, TOwnProps>({\n    form: 'loginForm',\n})(SignInForm);","import React,{useState} from \"react\"\r\nimport {SignInFormRedux} from \"./SignInForm\"\r\nimport {useHistory} from 'react-router-dom'\r\n\r\ntype TSignInProps={\r\n    componentIsSignUp:()=>void\r\n    onAuth:()=>void\r\n}\r\nexport type TLoginFormData={\r\n    email:string,\r\n    password : string\r\n}\r\nexport const SignIn:React.FC<TSignInProps> = props => {\r\n    const history=useHistory()\r\n    const [authErr,setAuthErr] = useState<string[]>([])\r\n    const handleSubmit = (formData : TLoginFormData) => {\r\n        if (formData.email === \"test@g.com\" && formData.password === \"test\") {\r\n            localStorage.setItem(\"IsAuth\", \"true\")\r\n            props.onAuth()\r\n            history.replace(\"/\")\r\n        }else setAuthErr([...authErr,\"incorrect email or password\"])\r\n    }\r\n\r\n    return <div className=\"SignInContainer\">\r\n        <SignInFormRedux onSubmit={handleSubmit} componentIsSignUp={props.componentIsSignUp} authErr={authErr}/>\r\n    </div>\r\n}","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {CustomizedButton} from \"../../CustomElements/CustomizedButton/CustomizedButton\"\nimport {CreateField, FormInput} from \"../../../assets/utils/ValidartorsComponents/ElementsValidators\"\nimport {required, Email, PassMinLength} from \"../../../assets/utils/validators\"\nimport DoneIcon from '@material-ui/icons/Done'\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\nimport {TSignUpFormData} from \"./SignUp\";\n\ntype TOwnProps={\n    componentIsSignIn :()=>void\n}\n\nconst SignUpForm: React.FC<InjectedFormProps<TSignUpFormData, TOwnProps> & TOwnProps> = (props) => {\n    return <form style={{paddingTop: \"1.5rem\",paddingRight:\"2rem\",paddingLeft:\"2rem\"}}  className=\"SignUpFormContainer\"\n                 onSubmit={props.handleSubmit}>\n\n        <div style={{fontSize: \"1.512rem\", fontWeight: 500}} className=\"SignUpFormHeader\">\n            Sign up\n        </div>\n\n        <div className=\"SignUpFormNameInput\">\n            {CreateField(\"Enter your name\", \"name\", [required],\n                FormInput, {label: \"name\", fullWidth: true})}\n        </div>\n\n        <div className=\"SignUpFormEmailInput\">\n            {CreateField(\"Enter your email\", \"email\", [required, Email],\n                FormInput, {label: \"email\", fullWidth: true})}\n        </div>\n\n        <div className=\"SignUpFormPassWordInput\">\n            {CreateField(\"Enter your password\", \"password\", [required, PassMinLength],\n                FormInput, {\n                    label: \"password\", fullWidth: true,\n                    type: \"password\", helperText: \"password must be more then 6 letters\"\n                })}\n        </div>\n\n        <div style={{paddingTop: \"1rem\"}} className=\"SignUpControlButtonsContainer\">\n            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                <Grid item>\n                    <CustomizedButton onClick={props.handleSubmit} text=\"complete\"\n                                      variant=\"contained\" bgColor=\"purple\"\n                                      fontSize=\"1.11rem\" startIcon={<DoneIcon/>}/>\n                </Grid>\n                <Grid item>\n                    <CustomizedButton onClick={props.componentIsSignIn} text=\"sign in\"\n                                      variant=\"contained\" bgColor=\"teal\"\n                                      fontSize=\"1.11rem\"/>\n                </Grid>\n            </Grid>\n        </div>\n\n        {props.error\n            ?\n            <div style={{paddingTop:\"2rem\",paddingLeft:\"1.12rem\", fontSize: \"1.125rem\", color: \"#ea1f09\"}}>\n                {props.error}\n            </div>\n            : null\n        }\n    </form>\n}\n\nexport const SignUpFormRedux = reduxForm<TSignUpFormData,TOwnProps>({form: 'SignUpForm'})(SignUpForm)\n","import React from \"react\"\r\nimport {SignUpFormRedux} from \"./SignUpForm\";\r\nimport {TShowSnackBar} from \"../../../App\";\r\n\r\ntype TSignUpProps={\r\n    componentIsSignIn:()=>void\r\n    showSnackBar : TShowSnackBar\r\n}\r\nexport type TSignUpFormData={\r\n    email:string,\r\n    password : string\r\n    name : string\r\n}\r\n\r\nexport const SignUp : React.FC<TSignUpProps> = (props) => {\r\n    const handleSubmit = (formData: TSignUpFormData) => {\r\n        props.showSnackBar({message: \"Account was create. Check your email!\",severity:\"success\",position:{\r\n                vertical:\"top\",horizontal:\"center\"\r\n            }})\r\n        console.log(formData)\r\n    }\r\n\r\n    return <div   className=\"SignUpContainer\">\r\n        <SignUpFormRedux onSubmit={handleSubmit} componentIsSignIn={props.componentIsSignIn} />\r\n    </div>\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {SignIn} from \"./SignIn/SignIn\";\r\nimport LS from \"./AuthModal.module.css\";\r\nimport {SignUp} from \"./SignUp/SignUp\";\r\nimport {TShowSnackBar} from \"../../App\";\r\n\r\ntype TAuthPageProps = {\r\n    showSnackBar: TShowSnackBar\r\n    onAuth: () => void\r\n    onUnAuth: () => void\r\n}\r\n\r\nexport const AuthPage: React.FC<TAuthPageProps> = (props) => {\r\n    const [componentToDraw, setComponentToDraw] = useState(\"login\")\r\n    const componentIsSignIn = () => setComponentToDraw(\"login\")\r\n    const componentIsSignUp = () => setComponentToDraw(\"registration\")\r\n    return <div className={LS.modal}>\r\n        {\r\n            componentToDraw === \"login\"\r\n                ? <SignIn componentIsSignUp={componentIsSignUp} onAuth={props.onAuth}/>\r\n                : <SignUp componentIsSignIn={componentIsSignIn} showSnackBar={props.showSnackBar}/>\r\n        }\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport type TSnackBarOptions = {\r\n    HideDuration? : number\r\n    severity : \"error\" | \"info\" | \"warning\" | \"success\"\r\n    position : {\r\n        vertical : \"bottom\" | \"top\"\r\n        horizontal : \"left\" | \"right\" | \"center\"\r\n    }\r\n    message : string\r\n}\r\nexport type TSnackBarProps = {\r\n    isShowing : boolean\r\n    onHide : (event?: React.SyntheticEvent, reason?: string) => void\r\n    options : TSnackBarOptions\r\n}\r\nconst  SnackBar : React.FC<TSnackBarProps>= (props)=> {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar  open={props.isShowing} autoHideDuration={props.options.HideDuration ? props.options.HideDuration : 3000}\r\n                      onClose={props.onHide} anchorOrigin={props.options.position}>\r\n\r\n                <Alert onClose={props.onHide} severity={props.options.severity}>\r\n                    {props.options.message}\r\n                </Alert>\r\n\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(SnackBar,(prevProps,nextProps)=>{\r\n    if(prevProps.isShowing !== nextProps.isShowing) return false\r\n    else  return true\r\n})","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position : \"fixed\",\r\n        top : \"50%\",\r\n        left : \"50%\",\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Progress() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n}","import React, {Suspense} from \"react\"\r\nimport Progress from \"../../Progress/Progress\";\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <Suspense fallback={<Progress/>}>\r\n            <WrappedComponent {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport PES from \"./pathErr.module.css\"\r\n\r\nexport const PathErr = ()=>{\r\n    return <h1 className={PES.wrapper}>\r\n        Error 404 page not found\r\n    </h1>\r\n}\r\n","import React from \"react\";\r\nimport CDS from \"./Calendar.module.css\"\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\nimport {TClickedDay, TSetClickedMonthDay} from \"../../Redux/CalendarReducer\";\r\nimport {randomInteger, SearchWorklogBlock, TWorklogBlock} from \"../../Redux/WorkLogsReducer\";\r\nimport {useBooleanState} from \"../hooks/useBooleanState\";\r\n\r\nexport type TCalendarDayProps = {\r\n    DayNumber: number\r\n    DayStatus: string\r\n    Signature: string\r\n    id: number\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n    MonthName: string\r\n    ClickedMonthDay: TClickedDay\r\n    CurrentDay: number | string\r\n    WorklogsBlocks: Array<TWorklogBlock>\r\n}\r\n\r\nexport const CalendarDay: React.FC<TCalendarDayProps> = (props) => {\r\n    const DayIsClickedData = useBooleanState(false)\r\n    const WrappedDay = {\r\n        id: props.id,\r\n        DayNumber: props.DayNumber,\r\n        MonthName: props.MonthName\r\n    }\r\n\r\n    const onDayClick = () => {\r\n        const WorklogsBlockToBeScroled = SearchWorklogBlock(WrappedDay.MonthName, WrappedDay.DayNumber)\r\n        DayIsClickedData.Switch()\r\n        if (DayIsClickedData.isDisplayed && props.ClickedMonthDay && props.ClickedMonthDay.DayNumber === props.DayNumber) {\r\n            props.SetClickedMonthDay(null)\r\n        } else props.SetClickedMonthDay(WrappedDay)\r\n\r\n        if (WorklogsBlockToBeScroled) WorklogsBlockToBeScroled.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"center\",\r\n            behavior: \"smooth\"\r\n        })\r\n    }\r\n\r\n    return <div className={props.ClickedMonthDay?.id === props.id\r\n        ? CDS.DayBgClicked\r\n        : props.DayNumber === props.CurrentDay\r\n            ? props.Signature === \"main\" ? CDS.DayBgCurrentDay : undefined\r\n            : CDS.DayBgDefault}>\r\n\r\n        <div onClick={onDayClick}\r\n             className={props.Signature !== \"main\"\r\n                 ? CDS.DropDownCalendarDayFaded : CDS.DropDownCalendarDay}>\r\n\r\n            <div className={props.ClickedMonthDay?.id === props.id\r\n            || props.DayNumber === props.CurrentDay\r\n                ? CDS.DropDownCalendarDayNumberClicked\r\n                : CDS.DropDownCalendarDayNumber}>\r\n\r\n                {props.DayNumber}\r\n\r\n            </div>\r\n            {props.WorklogsBlocks.some(WBL => WBL.BlockInfo.BlockCreatedDate.split(\",\")[1] === `${props.MonthName} ${props.DayNumber}`)\r\n                ? props.WorklogsBlocks.map(WBL => {\r\n                    if (WBL.BlockInfo.BlockCreatedDate.split(\",\")[1] === `${props.MonthName} ${props.DayNumber}`) {\r\n                        return <img key={randomInteger(0, 10000)}\r\n                                    style={{paddingLeft: \"3px\"}}\r\n                                    src={WBL.BlockInfo.SummaryStatus === \"ok\"\r\n                                        ? OK\r\n                                        : WBL.BlockInfo.SummaryStatus === \"warning\"\r\n                                            ? Warn\r\n                                            : WBL.BlockInfo.SummaryStatus === \"danger\"\r\n                                                ? Danger\r\n                                                : undefined\r\n                                    } alt=\"day status\"/>\r\n                    }\r\n                })\r\n                : <div className={CDS.EmptyStatus}>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\";\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\n\r\nexport type TDropDownCalendarFooterElementProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | \"empty\"\r\n    text: string\r\n}\r\nexport const DropDownCalendarFooterElement: React.FC<TDropDownCalendarFooterElementProps> = (props) => {\r\n    return (<div className={CS.DropDownCalendarFooterElement}>\r\n            {\r\n                props.status !== \"empty\" ?\r\n                <img style={{marginTop: \"4px\"}} src={props.status === \"ok\"\r\n                    ? OK\r\n                    : props.status === \"warning\"\r\n                        ? Warn\r\n                        : props.status === \"danger\"\r\n                            ? Danger\r\n                            : undefined} alt={\"dropDOwnCAlendarFooterStatus\"}/>\r\n                            : <div style={{marginTop : \"4px\"}} className={CS.EmptyStatus}> </div>\r\n            }\r\n\r\n\r\n            <div  className={CS.DropDownProgressStatus}>\r\n                {props.text}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {GlobalState} from \"../../Redux/redux-store\";\r\n\r\nexport const getCalendar = (state : GlobalState) => state.CalendarData.Calendar\r\nexport const getCurrentDate = (state : GlobalState) => state.CalendarData.CurrentDate\r\nexport const getClickedMonthDay = (state : GlobalState) => state.CalendarData.ClickedMonthDay\r\n","import React from \"react\";\r\nimport {SetClickedMonthDay, TClickedDay,} from \"../../Redux/CalendarReducer\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport {CalendarDay} from \"./CalendarDay\";\r\nimport {randomInteger} from \"../../Redux/WorkLogsReducer\";\r\nimport {DropDownCalendarFooterElement} from \"./DropDownCalendarFooterElement\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCalendar, getClickedMonthDay, getCurrentDate} from \"../Selectors/CalendarSelectors\";\r\nimport {getWorklogsBlocks} from \"../Selectors/WorklogsSelectors\";\r\n\r\n\r\nexport const DropDownCalendar = () => {\r\n    const dispatch = useDispatch()\r\n    const calendar = useSelector(getCalendar)\r\n    const clickedMonthDay = useSelector(getClickedMonthDay)\r\n    const currentDate = useSelector(getCurrentDate)\r\n    const worklogsBlocks = useSelector(getWorklogsBlocks)\r\n    const setClickedMonthDay = (Day: TClickedDay) => dispatch(SetClickedMonthDay(Day))\r\n    const DaysNamesArr = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\r\n\r\n    return (<div className={CS.DropDownCalendar}>\r\n        <div className={CS.DropDownCalendarHeader}>\r\n            {currentDate.CurrentMonth}\r\n        </div>\r\n        <div className={CS.DropDOwnCalendarContentContainer}>\r\n            <div className={CS.DropDownCalendarContent}>\r\n\r\n                {DaysNamesArr.map(el => {\r\n                    return <div key={randomInteger(0, 10000)} className={CS.DropDownCalendarDayNames}>\r\n                        {el}\r\n                    </div>\r\n                })}\r\n\r\n                {\r\n                    calendar[currentDate.CurrentMonth].map(day => {\r\n                        return <CalendarDay ClickedMonthDay={clickedMonthDay}\r\n                                            CurrentDay={currentDate.CurrentDay}\r\n                                            MonthName={currentDate.CurrentMonth}\r\n                                            key={day.id}\r\n                                            SetClickedMonthDay={setClickedMonthDay}\r\n                                            {...day}\r\n                                            WorklogsBlocks={worklogsBlocks}\r\n                        />\r\n                    })}\r\n\r\n            </div>\r\n        </div>\r\n        <div className={CS.DropDownCalendarFooterContainer}>\r\n\r\n            <div className={CS.DropDownCalendarFooter}>\r\n                <DropDownCalendarFooterElement status={\"ok\"} text={\"Done\"}/>\r\n                <DropDownCalendarFooterElement status={\"warning\"} text={\"In progress\"}/>\r\n                <DropDownCalendarFooterElement status={\"danger\"} text={\"Missed\"}/>\r\n                <DropDownCalendarFooterElement status={\"empty\"} text={\"no activity\"}/>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarIcon from \"../../assets/imgs/calendar.svg\"\r\nimport {DropDownCalendar} from \"./DropDownCalendar\"\r\nimport {TCurrentDate} from \"../../Redux/CalendarReducer\"\r\nimport {useBooleanState} from \"../hooks/useBooleanState\"\r\n\r\nexport type TCalendarProps = { currentDate: TCurrentDate }\r\n\r\nconst Calendar: React.FC<TCalendarProps> = (props) => {\r\n    const DropDownCalendarData = useBooleanState(false)\r\n\r\n    return (<div className=\"Calendar\">\r\n        <div onClick={DropDownCalendarData.Show} id=\"calendar-id\" className={CS.CalendarContainer}>\r\n\r\n            <div className={CS.CalendarContent}>\r\n\r\n                <div className={CS.CalendarDate}>\r\n                    {props.currentDate.CurrentDay} {props.currentDate.CurrentMonth} {props.currentDate.CurrentYear}\r\n                </div>\r\n\r\n                <div className={CS.CalendarIcon}>\r\n                    <img src={CalendarIcon} alt=\"calendar icon\"/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n            DropDownCalendarData.isDisplayed &&\r\n            <>\r\n                <div className={CS.bg} onClick={DropDownCalendarData.Hide}/>\r\n                <DropDownCalendar/>\r\n            </>\r\n        }\r\n\r\n    </div>)\r\n}\r\n\r\nexport default React.memo(Calendar, (prevProps, nextProps) => {\r\n    if (prevProps.currentDate !== nextProps.currentDate) return false\r\n    else return true\r\n})","import React from \"react\";\r\nimport AllS from \"./All.module.css\"\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TAllProps = {\r\n    favoritesIsClicked: boolean\r\n    onAllClicked: () => void\r\n}\r\n\r\nexport const AllButton: React.FC<TAllProps> = (props) => {\r\n    return (\r\n        <div className={props.favoritesIsClicked\r\n            ? AllS.AllButtonBg\r\n            : AllS.AllButtonBgActive}>\r\n\r\n            <div  className={props.favoritesIsClicked\r\n                ? AllS.item\r\n                : AllS.ActiveItem}>\r\n                <NavLink onClick={props.onAllClicked}   to={\"/Home/All\"}> All </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { pink } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nexport type TFavoritesProps = {\r\n    favoritesIsClicked: boolean\r\n    onFavoritesClick: () => void\r\n}\r\n\r\nexport const FavoritesButton: React.FC<TFavoritesProps> = (props) => {\r\n    return (\r\n        <div\r\n             className={props.favoritesIsClicked\r\n            ? FS.FavoritesButtonBgActive\r\n            : FS.FavoritesButtonBg} >\r\n\r\n            <div className={!props.favoritesIsClicked\r\n                ? FS.item\r\n                : FS.ActiveItem}>\r\n                <div className={FS.FavoritesTextContainer}>\r\n\r\n                    <div>\r\n                        <NavLink onClick={props.onFavoritesClick}  to={\"/Home/Favorites\"}> Favorites </NavLink>\r\n                    </div>\r\n\r\n                    <div style={{paddingLeft:\".5rem\"}}>\r\n                        <FavoriteIcon fontSize=\"small\" style={{color : pink[500]}} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport {AllButton} from \"./All/AllButton\";\r\nimport {FavoritesButton} from \"./Favorites/FavoritesButton\";\r\nimport CBS from \"./ControlButtons.module.css\"\r\n\r\ntype TControlButtonsProps = {\r\n    favoritesIsClicked: boolean\r\n    onAllClicked: () => void\r\n    onFavoritesClick: () => void\r\n}\r\nexport const ControlButtons: React.FC<TControlButtonsProps> = (props) => {\r\n    return <div className={CBS.container}>\r\n        <AllButton favoritesIsClicked={props.favoritesIsClicked} onAllClicked={props.onAllClicked}/>\r\n\r\n        <FavoritesButton onFavoritesClick={props.onFavoritesClick}\r\n                         favoritesIsClicked={props.favoritesIsClicked}/>\r\n    </div>\r\n}\r\n","import React from \"react\"\r\nimport AS from \"../../App.module.css\"\r\nimport Calendar from \"../Calendar/Calendar\"\r\nimport {ControlButtons} from \"./ControlButtons/ControlButtons\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {getCurrentDate} from \"../Selectors/CalendarSelectors\";\r\n\r\nexport type TCalendarAndControlButtonsProps = {\r\n    favoritesIsClicked: boolean\r\n    onFavoritesClick: () => void\r\n    onAllClicked: () => void\r\n}\r\n\r\nexport const CalendarAndControlButtons: React.FC<TCalendarAndControlButtonsProps> = (props) => {\r\n    const currentDate = useSelector(getCurrentDate)\r\n    return <div className={AS.CalendarAndButtons}>\r\n        <Calendar currentDate={currentDate}/>\r\n        <ControlButtons favoritesIsClicked={props.favoritesIsClicked} onAllClicked={props.onAllClicked}\r\n                        onFavoritesClick={props.onFavoritesClick}/>\r\n    </div>\r\n}","import React, {useState} from 'react'\nimport MaterialNav from \"./Components/NavBar/MaterialNavBar\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport AS from \"./App.module.css\"\nimport {WorkLogsBlock} from \"./Components/WorkLogs/WorkLogsBlock\"\nimport {TimeTracking} from \"./Components/TimeTracking/TimeTracking\"\nimport {useBooleanState} from \"./Components/hooks/useBooleanState\"\nimport {AuthPage} from \"./Components/Auth/AuthPage\"\nimport SnackBar, {TSnackBarOptions} from \"./Components/SnackBar/SnackBar\"\nimport {withSuspense} from \"./Components/HOCs/withSuspense/withSuspense\"\nimport {PathErr} from \"./Components/PathErrorPage/PathErr\"\nimport {CalendarAndControlButtons} from \"./Components/CalendarAndControllButtons/CalendarAndControlButtons\"\n\n//////////////////////////// lazy loading ////////////////////////////////////////\nconst Issues = React.lazy(() => import(\"./Components/Issues/Issues\"))\nconst Favorites = React.lazy(() => import(\"./Components/WorkLogs/FavoritesWorklogs\"))\nconst ChangeWorklogModalContainer = React.lazy(() => import(\"./Components/ChangeWorklogModal/ChangeWorklogModal\"))\nconst ModalUserProfile = React.lazy(() => import(\"./Components/UserProfile/ModalUserProfile\"))\nconst SuspendedIssues = withSuspense(Issues)\nconst SuspendedFavorites = withSuspense(Favorites)\nconst SuspendedChangeWorklogModalContainer = withSuspense(ChangeWorklogModalContainer)\nconst SuspendedModalUserProfile = withSuspense(ModalUserProfile)\n//////////////////////////// lazy loading ////////////////////////////////////////\n\n\nexport type TShowSnackBar = (SnackBarOptions: TSnackBarOptions) => void\n\nexport const App = () => {\n\n    const [, setIsAuth] = useState<boolean | null>(null)\n    const worklogModalStatus = useBooleanState(false)\n    const favoritesClickedStatus = useBooleanState(false)\n    const userProfileClickedStatus = useBooleanState(false)\n    const snackBarDisplayingStatus = useBooleanState(false)\n    const [snackBarOptions, setSnackBarOptions] = useState<TSnackBarOptions>({\n        message: \"something goes wrong\",\n        HideDuration: 3000,\n        position: {horizontal: \"center\", vertical: \"bottom\"},\n        severity: \"error\"\n    })\n\n    const onAuth = () => setIsAuth(true)\n    const onUnAuth = () => setIsAuth(false)\n\n    const showSnackBar = (SnackBarOptions: TSnackBarOptions) => {\n        snackBarDisplayingStatus.isDisplayed && snackBarDisplayingStatus.Hide()\n        setSnackBarOptions(SnackBarOptions)\n        snackBarDisplayingStatus.Show()\n    }\n    const hideSnackBar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        snackBarDisplayingStatus.Hide()\n    }\n\n\n    return (<div className=\"AppWrapper\">\n\n            {localStorage.getItem(\"IsAuth\") === \"true\"\n                ? <>\n                    <MaterialNav openUserProfile={userProfileClickedStatus.Show} onUnAuth={onUnAuth}/>\n\n                    <Switch>\n                        <Route exact path='/' render={() => <Redirect to={\"/Home/All\"}/>}/>\n                        <Route exact path='/Issues'\n                               render={() => <SuspendedIssues/>}/>\n\n                        <Route path='/Home'\n                               render={() => <>\n                                   <div className={AS.CalendarAndButtonsContainer}>\n                                       <CalendarAndControlButtons\n                                           favoritesIsClicked={favoritesClickedStatus.isDisplayed}\n                                           onAllClicked={favoritesClickedStatus.Hide}\n                                           onFavoritesClick={favoritesClickedStatus.Show}\n                                       />\n                                   </div>\n\n                                   <div className={AS.MainWrapper}>\n                                       <Switch>\n                                           <Route exact path='/Home/All'\n                                                  render={() => <WorkLogsBlock\n                                                      openWorklogChangeModal={worklogModalStatus.Show}\n                                                      componentToDraw=\"Worklogs\"\n                                                      showSnackBar={showSnackBar}\n                                                      closeWorklogChangeModal={worklogModalStatus.Hide}\n                                                  />\n                                                  }/>\n\n                                           <Route exact path='/Home/Favorites'\n                                                  render={() => <SuspendedFavorites\n                                                      openWorklogChangeModal={worklogModalStatus.Show}\n                                                      showSnackBar={showSnackBar}\n                                                      closeWorklogChangeModal={worklogModalStatus.Hide}\n                                                      componentToDraw=\"FavoritesWorklogs\"\n                                                  />}/>\n                                           <Route component={PathErr}/>\n                                       </Switch>\n\n                                       <div className={AS.TImeTracking_and_Calendar}>\n                                           <TimeTracking favoritesIsClicked={worklogModalStatus.isDisplayed}\n                                                         openWorklogChangeModal={worklogModalStatus.Show}\n                                           />\n                                       </div>\n\n                                   </div>\n                               </>\n                               }\n                        />\n                        <Route component={PathErr}/>\n                    </Switch>\n                </>\n                : <AuthPage onAuth={onAuth} onUnAuth={onUnAuth} showSnackBar={showSnackBar}/>\n            }\n\n            <SuspendedChangeWorklogModalContainer\n                worklogChangeModalIsOpen={worklogModalStatus.isDisplayed}\n                closeWorklogChangeModal={worklogModalStatus.Hide}\n            />\n\n            <SuspendedModalUserProfile isOpen={userProfileClickedStatus.isDisplayed}\n                                       hide={userProfileClickedStatus.Hide}/>\n\n            <SnackBar isShowing={snackBarDisplayingStatus.isDisplayed}\n                      onHide={hideSnackBar} options={snackBarOptions}/>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AS from \"./App.module.css\"\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\nimport {App} from \"./App\";\n\nReactDOM.render(\n    <HashRouter  basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <div className={AS.AppContainer}>\n                    <App/>\n            </div>\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n\n","import {GlobalState} from \"../../Redux/redux-store\";\r\n\r\nexport const getPlayingWorklog = (state : GlobalState) => state.WorklogsData.PlayingWorklog\r\nexport const getWorklogsBlocks = (state : GlobalState) => state.WorklogsData.WorkLogsBlocks\r\nexport const getFavoritesWorklog = (state : GlobalState) => state.WorklogsData.FavoritesWorklogs\r\nexport const getWorklogToChange = (state : GlobalState) => state.WorklogsData.WorklogToChange\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainWrapper\":\"App_MainWrapper__3UVmf\",\"CalendarAndButtonsContainer\":\"App_CalendarAndButtonsContainer__1qylj\",\"CalendarAndButtons\":\"App_CalendarAndButtons__gi3vH\",\"TImeTracking_and_Calendar\":\"App_TImeTracking_and_Calendar__2wagN\",\"AppContainer\":\"App_AppContainer__3te8n\",\"PathErr\":\"App_PathErr__3EGlw\"};","export const ToFullTime = (value, hours) => {\r\n    if (typeof value === \"string\") {\r\n        let Numbered = Number.parseInt(value)\r\n        if (Numbered < 10) {\r\n            return \"0\" + Numbered\r\n        } else return value\r\n    } else if (typeof value === \"number\") {\r\n        if (value < 10) {\r\n            return \"0\" + value\r\n        } else return value\r\n    }\r\n}\r\n\r\nexport const CalculateNewStartTime = (CurrentTime, hours, minutes) => {\r\n    if (CurrentTime && hours && minutes) {\r\n        let [CurrentHours, CurrentMinutes] = [...CurrentTime.split(\":\")]\r\n        CurrentHours = Number.parseInt(CurrentHours)\r\n        CurrentMinutes = Number.parseInt(CurrentMinutes)\r\n\r\n        if (CurrentHours <= 0) {\r\n            CurrentHours = CurrentHours + 24\r\n        }\r\n        if (CurrentMinutes < minutes) {\r\n            CurrentMinutes = CurrentMinutes + 60\r\n            CurrentHours = CurrentHours - 1\r\n        }\r\n        return `${ToFullTime(CurrentHours - hours) === 24 ? \"00\" : ToFullTime(CurrentHours - hours)}:${ToFullTime(CurrentMinutes - minutes)}`\r\n    }\r\n}\r\n\r\n\r\nexport const CalculateTime = (CurrentTime, hours, minutes) => {\r\n    if (CurrentTime && hours && minutes) {\r\n        let HoursAndMinutes = CurrentTime.split(\":\")\r\n        let Res = ToFullTime(Number.parseInt(hours) + Number.parseInt(HoursAndMinutes[0]))\r\n            +\r\n            \":\"\r\n            + ToFullTime(Number.parseInt(minutes) + Number.parseInt(HoursAndMinutes[1]))\r\n\r\n        return Res\r\n    }\r\n}","const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\r\nconst months = ['January', 'February', 'March', 'April', 'May',\r\n    'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nexport const GetCurrentDate = () => {\r\n    let date = new Date()\r\n    let CurrentYear = date.getFullYear()\r\n    let CurrentMonth = months[date.getMonth()]\r\n    let CurrentDay = date.getDate()\r\n    let DayName = days[ date.getDay() ];\r\n\r\n    return {\r\n        DayName,\r\n        CurrentYear,\r\n        CurrentMonth,\r\n        CurrentDay\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesButtonBg\":\"Favorites_FavoritesButtonBg__2pbYJ\",\"WorklogsContainer\":\"Favorites_WorklogsContainer__1Sjke\",\"FavoritesButtonBgActive\":\"Favorites_FavoritesButtonBgActive__2sAaf\",\"item\":\"Favorites_item__38JvL\",\"ActiveItem\":\"Favorites_ActiveItem__bO5hh\",\"FavoritesText\":\"Favorites_FavoritesText__2rccG\",\"NoFavoritesIssuesContainer\":\"Favorites_NoFavoritesIssuesContainer__1ddrY\",\"FavoritesTextContainer\":\"Favorites_FavoritesTextContainer__304kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"WorklogDropDown_Container__3cI-Y\",\"ContentContainer\":\"WorklogDropDown_ContentContainer__o5kDH\",\"ContainerEl\":\"WorklogDropDown_ContainerEl__2dtp_\",\"ContainerFirstEl\":\"WorklogDropDown_ContainerFirstEl__1skhJ\"};"],"sourceRoot":""}