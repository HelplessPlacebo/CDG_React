{"version":3,"sources":["../../../../src/js/utils/index.js","../node_modules/autobind-decorator/lib/index.js","../../../../src/js/input-range/label.jsx","../node_modules/react-time-range-slider/dist/index.js","../../../src/js/index.js","../../../../src/js/input-range/input-range.jsx","../../../../src/js/input-range/value-transformer.js","../../../../src/js/utils/captialize.js","../../../../src/js/utils/clamp.js","../../../../src/js/utils/distance-to.js","../../../../src/js/utils/is-defined.js","../../../../src/js/utils/is-number.js","../../../../src/js/utils/is-object.js","../../../../src/js/utils/length.js","../../../../src/js/input-range/default-class-names.js","../../../../src/js/input-range/range-prop-type.js","../../../../src/js/input-range/value-prop-type.js","../../../../src/js/input-range/slider.jsx","../../../../src/js/input-range/track.jsx","../../../../src/js/input-range/key-codes.js","../node_modules/@material-ui/icons/Save.js"],"names":["default","boundClass","target","keys","undefined","Reflect","ownKeys","prototype","Object","getOwnPropertyNames","getOwnPropertySymbols","concat","forEach","key","descriptor","getOwnPropertyDescriptor","value","defineProperty","boundMethod","fn","Error","definingProperty","configurable","get","this","hasOwnProperty","boundFn","bind","writable","exports","_len","arguments","length","args","Array","_key","apply","module","Label","props","labelValue","className","children","classNames","formatLabel","type","isRequired","_createClass","defineProperties","i","enumerable","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_reactInputRange2","obj","__esModule","TimeRangeSlider","_Component","instance","TypeError","_classCallCheck","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","subClass","superClass","create","constructor","setPrototypeOf","_inherits","hours","Math","floor","minutes","ampm","format","am_pm","time","rMinutes","split","parseInt","toUpperCase","replace","indexOf","_hours","start","minuteToTime","min","end","max","nStart","nEnd","onChange","onChangeComplete","onChangeStart","_props$value","timeToMinute","createElement","disabled","draggableTrack","maxValue","minValue","step","Component","defaultProps","valueTransformer","InputRange","allowSameValues","ariaLabelledby","ariaControls","name","trackNode","position","values","positions","distanceTo","currentValues","isObject","isWithinRange","hasStepDifference","transformedValues","shouldUpdate","isMultiValue","event","requestAnimationFrame","prevEvent","stepValue","prevPosition","prevValue","offset","getKeyByPosition","isDefined","startValue","percentages","lastKeyMoved","getKeys","map","percentage","onSliderDrag","onSliderKeyDown","captialize","componentClassName","aria-disabled","ref","onKeyDown","onKeyUp","onMouseDown","onTouchStart","onTrackDrag","onTrackMouseDown","renderSliders","renderHiddenInputs","getPercentageFromPosition","getValueFromPosition","clientRect","sizePerc","getValueFromProps","getPercentageFromValue","getPercentagesFromValues","getPositionFromValue","getPositionsFromValues","getPositionFromEvent","clientX","x","clamp","y","getStepValueFromValue","valuePerStep","string","pointA","pointB","xDiff","yDiff","numA","numB","activeTrack","disabledInputRange","inputRange","labelContainer","maxLabel","minLabel","slider","sliderContainer","track","valueLabel","isNumber","propName","Slider","left","style","aria-labelledby","aria-controls","aria-valuemax","aria-valuemin","aria-valuenow","draggable","role","tabIndex","Track","node","width","trackDragEvent","activeTrackStyle","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","_default","d"],"mappings":"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","file":"static/js/4.bde2f0c3.chunk.js","sourcesContent":["export { default as captialize } from './captialize';\nexport { default as clamp } from './clamp';\nexport { default as distanceTo } from './distance-to';\nexport { default as isDefined } from './is-defined';\nexport { default as isNumber } from './is-number';\nexport { default as isObject } from './is-object';\nexport { default as length } from './length';\n","/**\n * @copyright 2015, Andrey Popp <8mayday@gmail.com>\n *\n * The decorator may be used on classes or methods\n * ```\n * @autobind\n * class FullBound {}\n *\n * class PartBound {\n *   @autobind\n *   method () {}\n * }\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = autobind;\n\nfunction autobind() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    return boundClass.apply(undefined, args);\n  } else {\n    return boundMethod.apply(undefined, args);\n  }\n}\n\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\nfunction boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys = undefined;\n  // Use Reflect if exists\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype);\n    // use symbols if support is provided\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n    // Only methods need binding\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\n\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\nfunction boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);\n  }\n\n  // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n  var definingProperty = false;\n\n  return {\n    configurable: true,\n    get: function get() {\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      definingProperty = false;\n      return boundFn;\n    }\n  };\n}\nmodule.exports = exports['default'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @ignore\n * @param {Object} props\n * @param {InputRangeClassNames} props.classNames\n * @param {Function} props.formatLabel\n * @param {string} props.type\n */\nexport default function Label(props) {\n  const labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;\n\n  return (\n    <span className={props.classNames[`${props.type}Label`]}>\n      <span className={props.classNames.labelContainer}>\n        {labelValue}\n      </span>\n    </span>\n  );\n}\n\n/**\n * @type {Object}\n * @property {Function} children\n * @property {Function} classNames\n * @property {Function} formatLabel\n * @property {Function} type\n */\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n  classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n  formatLabel: PropTypes.func,\n  type: PropTypes.string.isRequired,\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactInputRange = require('react-input-range');\n\nvar _reactInputRange2 = _interopRequireDefault(_reactInputRange);\n\nrequire('./styles.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*** src/index.js ***/\n\n\nvar TimeRangeSlider = function (_Component) {\n  _inherits(TimeRangeSlider, _Component);\n\n  function TimeRangeSlider(props) {\n    _classCallCheck(this, TimeRangeSlider);\n\n    var _this = _possibleConstructorReturn(this, (TimeRangeSlider.__proto__ || Object.getPrototypeOf(TimeRangeSlider)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TimeRangeSlider, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {}\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {}\n  }, {\n    key: 'minuteToTime',\n    value: function minuteToTime(value) {\n      value = value > 1439 ? 1439 : value;\n      var hours = Math.floor(value / 60),\n          minutes = value - hours * 60,\n          ampm = null;\n\n      if (hours.length == 1) hours = '0' + hours;\n      if (minutes.length == 1) minutes = '0' + minutes;\n      if (minutes == 0) minutes = '00';\n      if (this.props.format == 12) {\n        ampm = \"AM\";\n        if (hours >= 12) {\n          if (hours == 12) {\n            hours = hours;\n            minutes = minutes;\n          } else {\n            hours = hours - 12;\n            minutes = minutes;\n          }\n          ampm = \"PM\";\n        }\n        if (hours == 0) {\n          hours = 12;\n          minutes = minutes;\n        }\n      }\n\n      return { hours: hours, minutes: minutes, am_pm: ampm };\n    }\n  }, {\n    key: 'timeToMinute',\n    value: function timeToMinute(time) {\n      var rMinutes = 1439;\n      if (this.props.format == 24) {\n        time = time.split(\":\");\n        if (time.length < 2) {\n          throw new Error(\"Invalid time\");\n        }\n        var hours = time[0],\n            minutes = parseInt(time[1]);\n        hours = parseInt(hours * 60);\n        rMinutes = hours + minutes;\n      } else {\n        time = time.toUpperCase();\n        time = time.replace(\" \", \"\");\n        var ampm = time.indexOf(\"AM\") != -1 ? \"AM\" : \"PM\";\n        time = time.replace(ampm, \"\");\n        time = time.split(\":\");\n        if (time.length < 2) {\n          throw new Error(\"Invalid time\");\n        }\n        var _hours = parseInt(time[0]),\n            _minutes = parseInt(time[1]);\n        if (ampm == \"PM\") {\n          if (_hours != 12) {\n            _hours = _hours + 12;\n          }\n        } else {\n          _hours = _hours == 12 ? 0 : _hours;\n        }\n        _hours = _hours * 60;\n        rMinutes = _hours + _minutes;\n      }\n      return rMinutes > 1439 ? 1439 : rMinutes;\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(value) {\n      var start = this.minuteToTime(value.min);\n      var end = this.minuteToTime(value.max);\n      var nStart = start.hours + \":\" + start.minutes;\n      var nEnd = end.hours + \":\" + end.minutes;\n      if (this.props.format == 12) {\n        nStart += \" \" + start.am_pm;\n        nEnd += \" \" + end.am_pm;\n      }\n      this.props.onChange({\n        start: nStart,\n        end: nEnd\n      });\n    }\n  }, {\n    key: 'onChangeComplete',\n    value: function onChangeComplete(value) {\n      var start = this.minuteToTime(value.min),\n          end = this.minuteToTime(value.max);\n      this.props.onChangeComplete({\n        start: start,\n        end: end\n      });\n    }\n  }, {\n    key: 'onChangeStart',\n    value: function onChangeStart(value) {\n      var start = this.minuteToTime(value.min),\n          end = this.minuteToTime(value.max);\n      this.props.onChangeStart({\n        start: start,\n        end: end\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props$value = this.props.value,\n          start = _props$value.start,\n          end = _props$value.end,\n          min = this.timeToMinute(start),\n          max = this.timeToMinute(end);\n\n      return _react2.default.createElement(_reactInputRange2.default, {\n        disabled: this.props.disabled,\n        draggableTrack: this.props.draggableTrack,\n        maxValue: this.timeToMinute(this.props.maxValue),\n        minValue: this.timeToMinute(this.props.minValue),\n        onChangeStart: this.onChangeStart.bind(this),\n        onChange: this.onChange.bind(this),\n        onChangeComplete: this.onChangeComplete.bind(this),\n        step: this.props.step,\n        value: { min: min, max: max } });\n    }\n  }]);\n\n  return TimeRangeSlider;\n}(_react.Component);\n\nTimeRangeSlider.defaultProps = {\n  disabled: false,\n  draggableTrack: false,\n  format: 12,\n  maxValue: \"20:59\",\n  minValue: \"8:00\",\n  onChange: function onChange() {},\n  onChangeComplete: function onChangeComplete() {},\n  onChangeStart: function onChangeStart() {},\n  step: 5,\n  value: {\n    start: \"8:00\",\n    end: \"20:59\"\n  }\n};\n\nexports.default = TimeRangeSlider;","import InputRange from './input-range/input-range';\n\n/**\n * @ignore\n * @typedef {Object} ClientRect\n * @property {number} height\n * @property {number} left\n * @property {number} top\n * @property {number} width\n */\n\n/**\n * @typedef {Object} InputRangeClassNames\n * @property {string} activeTrack\n * @property {string} disabledInputRange\n * @property {string} inputRange\n * @property {string} labelContainer\n * @property {string} maxLabel\n * @property {string} minLabel\n * @property {string} slider\n * @property {string} sliderContainer\n * @property {string} track\n * @property {string} valueLabel\n */\n\n/**\n * @typedef {Function} LabelFormatter\n * @param {number} value\n * @param {string} type\n * @return {string}\n */\n\n/**\n * @ignore\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @typedef {Object} Range\n * @property {number} min - Min value\n * @property {number} max - Max value\n */\n\nexport default InputRange;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport * as valueTransformer from './value-transformer';\nimport DEFAULT_CLASS_NAMES from './default-class-names';\nimport Label from './label';\nimport rangePropType from './range-prop-type';\nimport valuePropType from './value-prop-type';\nimport Slider from './slider';\nimport Track from './track';\nimport { captialize, distanceTo, isDefined, isObject, length } from '../utils';\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from './key-codes';\n\n/**\n * A React component that allows users to input numeric values within a range\n * by dragging its sliders.\n */\nexport default class InputRange extends React.Component {\n  /**\n   * @ignore\n   * @override\n   * @return {Object}\n   */\n  static get propTypes() {\n    return {\n      allowSameValues: PropTypes.bool,\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string),\n      disabled: PropTypes.bool,\n      draggableTrack: PropTypes.bool,\n      formatLabel: PropTypes.func,\n      maxValue: rangePropType,\n      minValue: rangePropType,\n      name: PropTypes.string,\n      onChangeStart: PropTypes.func,\n      onChange: PropTypes.func.isRequired,\n      onChangeComplete: PropTypes.func,\n      step: PropTypes.number,\n      value: valuePropType,\n    };\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {Object}\n   */\n  static get defaultProps() {\n    return {\n      allowSameValues: false,\n      classNames: DEFAULT_CLASS_NAMES,\n      disabled: false,\n      maxValue: 10,\n      minValue: 0,\n      step: 1,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {boolean} [props.allowSameValues]\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} [props.classNames]\n   * @param {boolean} [props.disabled = false]\n   * @param {Function} [props.formatLabel]\n   * @param {number|Range} [props.maxValue = 10]\n   * @param {number|Range} [props.minValue = 0]\n   * @param {string} [props.name]\n   * @param {string} props.onChange\n   * @param {Function} [props.onChangeComplete]\n   * @param {Function} [props.onChangeStart]\n   * @param {number} [props.step = 1]\n   * @param {number|Range} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?number}\n     */\n    this.startValue = null;\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.trackNode = null;\n\n    /**\n     * @private\n     * @type {bool}\n     */\n    this.isSliderDragging = false;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.lastKeyMoved = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * Return the CSS class name of the component\n   * @private\n   * @return {string}\n   */\n  getComponentClassName() {\n    if (!this.props.disabled) {\n      return this.props.classNames.inputRange;\n    }\n\n    return this.props.classNames.disabledInputRange;\n  }\n\n  /**\n   * Return the bounding rect of the track\n   * @private\n   * @return {ClientRect}\n   */\n  getTrackClientRect() {\n    return this.trackNode.getClientRect();\n  }\n\n  /**\n   * Return the slider key closest to a point\n   * @private\n   * @param {Point} position\n   * @return {string}\n   */\n  getKeyByPosition(position) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n    if (this.isMultiValue()) {\n      const distanceToMin = distanceTo(position, positions.min);\n      const distanceToMax = distanceTo(position, positions.max);\n\n      if (distanceToMin < distanceToMax) {\n        return 'min';\n      }\n    }\n\n    return 'max';\n  }\n\n  /**\n   * Return all the slider keys\n   * @private\n   * @return {string[]}\n   */\n  getKeys() {\n    if (this.isMultiValue()) {\n      return ['min', 'max'];\n    }\n\n    return ['max'];\n  }\n\n  /**\n   * Return true if the difference between the new and the current value is\n   * greater or equal to the step amount of the component\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  hasStepDifference(values) {\n    const currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n\n    return length(values.min, currentValues.min) >= this.props.step ||\n           length(values.max, currentValues.max) >= this.props.step;\n  }\n\n  /**\n   * Return true if the component accepts a min and max value\n   * @private\n   * @return {boolean}\n   */\n  isMultiValue() {\n    return isObject(this.props.value);\n  }\n\n  /**\n   * Return true if the range is within the max and min value of the component\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  isWithinRange(values) {\n    if (this.isMultiValue()) {\n      return values.min >= this.props.minValue &&\n             values.max <= this.props.maxValue &&\n             this.props.allowSameValues\n              ? values.min <= values.max\n              : values.min < values.max;\n    }\n\n    return values.max >= this.props.minValue && values.max <= this.props.maxValue;\n  }\n\n  /**\n   * Return true if the new value should trigger a render\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  shouldUpdate(values) {\n    return this.isWithinRange(values) && this.hasStepDifference(values);\n  }\n\n  /**\n   * Update the position of a slider\n   * @private\n   * @param {string} key\n   * @param {Point} position\n   * @return {void}\n   */\n  updatePosition(key, position) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n    positions[key] = position;\n    this.lastKeyMoved = key;\n\n    this.updatePositions(positions);\n  }\n\n  /**\n   * Update the positions of multiple sliders\n   * @private\n   * @param {Object} positions\n   * @param {Point} positions.min\n   * @param {Point} positions.max\n   * @return {void}\n   */\n  updatePositions(positions) {\n    const values = {\n      min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n      max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n    };\n\n    const transformedValues = {\n      min: valueTransformer.getStepValueFromValue(values.min, this.props.step),\n      max: valueTransformer.getStepValueFromValue(values.max, this.props.step),\n    };\n\n    this.updateValues(transformedValues);\n  }\n\n  /**\n   * Update the value of a slider\n   * @private\n   * @param {string} key\n   * @param {number} value\n   * @return {void}\n   */\n  updateValue(key, value) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n\n    values[key] = value;\n\n    this.updateValues(values);\n  }\n\n  /**\n   * Update the values of multiple sliders\n   * @private\n   * @param {Range|number} values\n   * @return {void}\n   */\n  updateValues(values) {\n    if (!this.shouldUpdate(values)) {\n      return;\n    }\n\n    this.props.onChange(this.isMultiValue() ? values : values.max);\n  }\n\n  /**\n   * Increment the value of a slider by key name\n   * @private\n   * @param {string} key\n   * @return {void}\n   */\n  incrementValue(key) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const value = values[key] + this.props.step;\n\n    this.updateValue(key, value);\n  }\n\n  /**\n   * Decrement the value of a slider by key name\n   * @private\n   * @param {string} key\n   * @return {void}\n   */\n  decrementValue(key) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const value = values[key] - this.props.step;\n\n    this.updateValue(key, value);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * Stop listening to mouseup event\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Stop listening to touchend event\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * Handle any \"mousemove\" event received by the slider\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {string} key\n   * @return {void}\n   */\n  @autobind\n  handleSliderDrag(event, key) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n    this.isSliderDragging = true;\n    requestAnimationFrame(() => this.updatePosition(key, position));\n  }\n\n  /**\n   * Handle any \"mousemove\" event received by the track\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTrackDrag(event, prevEvent) {\n    if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {\n      return;\n    }\n\n    const {\n      maxValue,\n      minValue,\n      value: { max, min },\n    } = this.props;\n\n    const position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n    const value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n    const stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n    const prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());\n    const prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());\n    const prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);\n\n    const offset = prevStepValue - stepValue;\n\n    const transformedValues = {\n      min: min - offset,\n      max: max - offset,\n    };\n\n    this.updateValues(transformedValues);\n  }\n\n  /**\n   * Handle any \"keydown\" event received by the slider\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {string} key\n   * @return {void}\n   */\n  @autobind\n  handleSliderKeyDown(event, key) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n    case LEFT_ARROW:\n    case DOWN_ARROW:\n      event.preventDefault();\n      this.decrementValue(key);\n      break;\n\n    case RIGHT_ARROW:\n    case UP_ARROW:\n      event.preventDefault();\n      this.incrementValue(key);\n      break;\n\n    default:\n      break;\n    }\n  }\n\n  /**\n   * Handle any \"mousedown\" event received by the track\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {Point} position\n   * @return {void}\n   */\n  @autobind\n  handleTrackMouseDown(event, position) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const {\n      maxValue,\n      minValue,\n      value: { max, min },\n    } = this.props;\n\n    event.preventDefault();\n\n    const value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n    const stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n    if (!this.props.draggableTrack || stepValue > max || stepValue < min) {\n      this.updatePosition(this.getKeyByPosition(position), position);\n    }\n  }\n\n  /**\n   * Handle the start of any mouse/touch event\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleInteractionStart() {\n    if (this.props.onChangeStart) {\n      this.props.onChangeStart(this.props.value);\n    }\n\n    if (this.props.onChangeComplete && !isDefined(this.startValue)) {\n      this.startValue = this.props.value;\n    }\n  }\n\n  /**\n   * Handle the end of any mouse/touch event\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleInteractionEnd() {\n    if (this.isSliderDragging) {\n      this.isSliderDragging = false;\n    }\n\n    if (!this.props.onChangeComplete || !isDefined(this.startValue)) {\n      return;\n    }\n\n    if (this.startValue !== this.props.value) {\n      this.props.onChangeComplete(this.props.value);\n    }\n\n    this.startValue = null;\n  }\n\n  /**\n   * Handle any \"keydown\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.handleInteractionStart(event);\n  }\n\n  /**\n   * Handle any \"keyup\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyUp(event) {\n    this.handleInteractionEnd(event);\n  }\n\n  /**\n   * Handle any \"mousedown\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown(event) {\n    this.handleInteractionStart(event);\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * Handle any \"mouseup\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   */\n  @autobind\n  handleMouseUp(event) {\n    this.handleInteractionEnd(event);\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * Handle any \"touchstart\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart(event) {\n    this.handleInteractionStart(event);\n    this.addDocumentTouchEndListener();\n  }\n\n  /**\n   * Handle any \"touchend\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   */\n  @autobind\n  handleTouchEnd(event) {\n    this.handleInteractionEnd(event);\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * Return JSX of sliders\n   * @private\n   * @return {JSX.Element}\n   */\n  renderSliders() {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n    const keys = this.props.allowSameValues &&\n      this.lastKeyMoved === 'min'\n      ? this.getKeys().reverse()\n      : this.getKeys();\n\n    return keys.map((key) => {\n      const value = values[key];\n      const percentage = percentages[key];\n\n      let { maxValue, minValue } = this.props;\n\n      if (key === 'min') {\n        maxValue = values.max;\n      } else {\n        minValue = values.min;\n      }\n\n      const slider = (\n        <Slider\n          ariaLabelledby={this.props.ariaLabelledby}\n          ariaControls={this.props.ariaControls}\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          key={key}\n          maxValue={maxValue}\n          minValue={minValue}\n          onSliderDrag={this.handleSliderDrag}\n          onSliderKeyDown={this.handleSliderKeyDown}\n          percentage={percentage}\n          type={key}\n          value={value} />\n      );\n\n      return slider;\n    });\n  }\n\n  /**\n   * Return JSX of hidden inputs\n   * @private\n   * @return {JSX.Element}\n   */\n  renderHiddenInputs() {\n    if (!this.props.name) {\n      return [];\n    }\n\n    const isMultiValue = this.isMultiValue();\n    const values = valueTransformer.getValueFromProps(this.props, isMultiValue);\n\n    return this.getKeys().map((key) => {\n      const value = values[key];\n      const name = isMultiValue ? `${this.props.name}${captialize(key)}` : this.props.name;\n\n      return (\n        <input key={key} type=\"hidden\" name={name} value={value} />\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const componentClassName = this.getComponentClassName();\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n\n    return (\n      <div\n        aria-disabled={this.props.disabled}\n        ref={(node) => { this.node = node; }}\n        className={componentClassName}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"min\">\n          {this.props.minValue}\n        </Label>\n\n        <Track\n          classNames={this.props.classNames}\n          draggableTrack={this.props.draggableTrack}\n          ref={(trackNode) => { this.trackNode = trackNode; }}\n          percentages={percentages}\n          onTrackDrag={this.handleTrackDrag}\n          onTrackMouseDown={this.handleTrackMouseDown}>\n\n          {this.renderSliders()}\n        </Track>\n\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"max\">\n          {this.props.maxValue}\n        </Label>\n\n        {this.renderHiddenInputs()}\n      </div>\n    );\n  }\n}\n","import { clamp } from '../utils';\n\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\nexport function getPercentageFromPosition(position, clientRect) {\n  const length = clientRect.width;\n  const sizePerc = position.x / length;\n\n  return sizePerc || 0;\n}\n\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\nexport function getValueFromPosition(position, minValue, maxValue, clientRect) {\n  const sizePerc = getPercentageFromPosition(position, clientRect);\n  const valueDiff = maxValue - minValue;\n\n  return minValue + (valueDiff * sizePerc);\n}\n\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\nexport function getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return { ...props.value };\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value,\n  };\n}\n\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\nexport function getPercentageFromValue(value, minValue, maxValue) {\n  const validValue = clamp(value, minValue, maxValue);\n  const valueDiff = maxValue - minValue;\n  const valuePerc = (validValue - minValue) / valueDiff;\n\n  return valuePerc || 0;\n}\n\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\nexport function getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue),\n  };\n}\n\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\nexport function getPositionFromValue(value, minValue, maxValue, clientRect) {\n  const length = clientRect.width;\n  const valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  const positionValue = valuePerc * length;\n\n  return {\n    x: positionValue,\n    y: 0,\n  };\n}\n\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\nexport function getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect),\n  };\n}\n\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\nexport function getPositionFromEvent(event, clientRect) {\n  const length = clientRect.width;\n  const { clientX } = event.touches ? event.touches[0] : event;\n\n  return {\n    x: clamp(clientX - clientRect.left, 0, length),\n    y: 0,\n  };\n}\n\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\nexport function getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}\n","/**\n * Captialize a string\n * @ignore\n * @param {string} string\n * @return {string}\n */\nexport default function captialize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/**\n * Clamp a value between a min and max value\n * @ignore\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport default function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n","/**\n * Calculate the distance between pointA and pointB\n * @ignore\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number} Distance\n */\nexport default function distanceTo(pointA, pointB) {\n  const xDiff = (pointB.x - pointA.x) ** 2;\n  const yDiff = (pointB.y - pointA.y) ** 2;\n\n  return Math.sqrt(xDiff + yDiff);\n}\n","/**\n * Check if a value is defined\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n","/**\n * Check if a value is a number\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isNumber(value) {\n  return typeof value === 'number';\n}\n","/**\n * Check if a value is an object\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n","/**\n * Calculate the absolute difference between two numbers\n * @ignore\n * @param {number} numA\n * @param {number} numB\n * @return {number}\n */\nexport default function length(numA, numB) {\n  return Math.abs(numA - numB);\n}\n","/**\n * Default CSS class names\n * @ignore\n * @type {InputRangeClassNames}\n */\nconst DEFAULT_CLASS_NAMES = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value',\n};\n\nexport default DEFAULT_CLASS_NAMES;\n","import { isNumber } from '../utils';\n\n/**\n * @ignore\n * @param {Object} props - React component props\n * @return {?Error} Return Error if validation fails\n */\nexport default function rangePropType(props) {\n  const { maxValue, minValue } = props;\n\n  if (!isNumber(minValue) || !isNumber(maxValue)) {\n    return new Error('\"minValue\" and \"maxValue\" must be a number');\n  }\n\n  if (minValue >= maxValue) {\n    return new Error('\"minValue\" must be smaller than \"maxValue\"');\n  }\n}\n","import { isNumber, isObject } from '../utils';\n\n/**\n * @ignore\n * @param {Object} props\n * @return {?Error} Return Error if validation fails\n */\nexport default function valuePropType(props, propName) {\n  const { maxValue, minValue } = props;\n  const value = props[propName];\n\n  if (!isNumber(value) && (!isObject(value) || !isNumber(value.min) || !isNumber(value.max))) {\n    return new Error(`\"${propName}\" must be a number or a range object`);\n  }\n\n  if (isNumber(value) && (value < minValue || value > maxValue)) {\n    return new Error(`\"${propName}\" must be in between \"minValue\" and \"maxValue\"`);\n  }\n\n  if (isObject(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {\n    return new Error(`\"${propName}\" must be in between \"minValue\" and \"maxValue\"`);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport Label from './label';\n\n/**\n * @ignore\n */\nexport default class Slider extends React.Component {\n  /**\n   * Accepted propTypes of Slider\n   * @override\n   * @return {Object}\n   * @property {Function} ariaLabelledby\n   * @property {Function} ariaControls\n   * @property {Function} className\n   * @property {Function} formatLabel\n   * @property {Function} maxValue\n   * @property {Function} minValue\n   * @property {Function} onSliderDrag\n   * @property {Function} onSliderKeyDown\n   * @property {Function} percentage\n   * @property {Function} type\n   * @property {Function} value\n   */\n  static get propTypes() {\n    return {\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      formatLabel: PropTypes.func,\n      maxValue: PropTypes.number,\n      minValue: PropTypes.number,\n      onSliderDrag: PropTypes.func.isRequired,\n      onSliderKeyDown: PropTypes.func.isRequired,\n      percentage: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Function} [props.formatLabel]\n   * @param {number} [props.maxValue]\n   * @param {number} [props.minValue]\n   * @param {Function} props.onSliderKeyDown\n   * @param {Function} props.onSliderDrag\n   * @param {number} props.percentage\n   * @param {number} props.type\n   * @param {number} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n    this.removeDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getStyle() {\n    const perc = (this.props.percentage || 0) * 100;\n    const style = {\n      position: 'absolute',\n      left: `${perc}%`,\n    };\n\n    return style;\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchmove event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchMoveListener() {\n    this.removeDocumentTouchMoveListener();\n    this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchMoveListener() {\n    this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown() {\n    this.addDocumentMouseMoveListener();\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart() {\n    this.addDocumentTouchEndListener();\n    this.addDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchEnd() {\n    this.removeDocumentTouchMoveListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.props.onSliderKeyDown(event, this.props.type);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const style = this.getStyle();\n\n    return (\n      <span\n        className={this.props.classNames.sliderContainer}\n        ref={(node) => { this.node = node; }}\n        style={style}>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"value\">\n          {this.props.value}\n        </Label>\n\n        <div\n          aria-labelledby={this.props.ariaLabelledby}\n          aria-controls={this.props.ariaControls}\n          aria-valuemax={this.props.maxValue}\n          aria-valuemin={this.props.minValue}\n          aria-valuenow={this.props.value}\n          className={this.props.classNames.slider}\n          draggable=\"false\"\n          onKeyDown={this.handleKeyDown}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleTouchStart}\n          role=\"slider\"\n          tabIndex=\"0\" />\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\n\n/**\n * @ignore\n */\nexport default class Track extends React.Component {\n  /**\n   * @override\n   * @return {Object}\n   * @property {Function} children\n   * @property {Function} classNames\n   * @property {Boolean} draggableTrack\n   * @property {Function} onTrackDrag\n   * @property {Function} onTrackMouseDown\n   * @property {Function} percentages\n   */\n  static get propTypes() {\n    return {\n      children: PropTypes.node.isRequired,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      draggableTrack: PropTypes.bool,\n      onTrackDrag: PropTypes.func,\n      onTrackMouseDown: PropTypes.func.isRequired,\n      percentages: PropTypes.objectOf(PropTypes.number).isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Boolean} props.draggableTrack\n   * @param {Function} props.onTrackDrag\n   * @param {Function} props.onTrackMouseDown\n   * @param {number} props.percentages\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n  getClientRect() {\n    return this.node.getBoundingClientRect();\n  }\n\n  /**\n   * @private\n   * @return {Object} CSS styles\n   */\n  getActiveTrackStyle() {\n    const width = `${(this.props.percentages.max - this.props.percentages.min) * 100}%`;\n    const left = `${this.props.percentages.min * 100}%`;\n\n    return { left, width };\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    if (this.trackDragEvent !== null) {\n      this.props.onTrackDrag(event, this.trackDragEvent);\n    }\n\n    this.trackDragEvent = event;\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleMouseDown(event) {\n    const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n    const trackClientRect = this.getClientRect();\n    const position = {\n      x: clientX - trackClientRect.left,\n      y: 0,\n    };\n\n    this.props.onTrackMouseDown(event, position);\n\n    if (this.props.draggableTrack) {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleTouchStart(event) {\n    event.preventDefault();\n\n    this.handleMouseDown(event);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const activeTrackStyle = this.getActiveTrackStyle();\n\n    return (\n      <div\n        className={this.props.classNames.track}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}\n        ref={(node) => { this.node = node; }}>\n        <div\n          style={activeTrackStyle}\n          className={this.props.classNames.activeTrack} />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","/** @ignore */\nexport const DOWN_ARROW = 40;\n\n/** @ignore */\nexport const LEFT_ARROW = 37;\n\n/** @ignore */\nexport const RIGHT_ARROW = 39;\n\n/** @ignore */\nexport const UP_ARROW = 38;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}