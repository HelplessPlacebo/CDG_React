{"version":3,"sources":["Components/Timer/Timer.module.css","Components/CalendarAndControllButtons/ControlButtons/All/All.module.css","Components/WorkLogs/WorkLog.module.css","Components/hooks/useWorklogsFunctions.ts","Redux/redux-store.ts","Redux/CalendarReducer.ts","assets/imgs/CalendarDayStatusDanger.svg","assets/imgs/CalendarDayStatusWarning.svg","assets/imgs/CalendarDayStatusOK.svg","Components/NavBar/NavBar.module.css","Components/hooks/useInput.ts","assets/imgs/avatar.jpg","Redux/WorkLogsReducer.ts","assets/utils/ValidartorsComponents/ElementsValidators.module.css","Components/Calendar/Calendar.module.css","Components/CustomElements/CustomInput/CustomInput.tsx","Components/Selectors/IssuesSelectors.ts","Redux/IssuesReducer.ts","Components/Issues/Inputs/IssuesSelectInput.tsx","assets/imgs/new_worklog_button.svg","Components/LineStroke/LineStroke.tsx","Components/WorkLogs/DropDown/WorklogDropDown.tsx","Components/WorkLogs/NestingWorkLog.tsx","Components/WorkLogs/Worklog/WorkTime.tsx","Components/WorkLogs/Worklog/StatusBar.tsx","Components/WorkLogs/Worklog/IssueAndTask.tsx","Components/WorkLogs/Worklog/Time.tsx","Components/WorkLogs/Worklog/ControlButtons.tsx","Components/WorkLogs/Worklog/OnHoverMoreButton.tsx","Components/WorkLogs/WorkLog.tsx","Components/ProgressBar/ProgressBar.tsx","assets/secondary/CreateSnackbarOptions.ts","Components/WorkLogs/WorklogInfo/WorklogInfo.tsx","Components/DeleteConfirmModal/DeleteConfirmModal.tsx","Components/WorkLogs/WorkLogsBlock.tsx","Components/LineStroke/LineStroke.module.css","assets/imgs/ActiveWorklogBG.svg","assets/imgs/arrow-up.svg","assets/imgs/ok_cp.svg","assets/imgs/warning_cp.svg","assets/imgs/danger_cp.svg","assets/imgs/stop_button.svg","assets/imgs/play-button.svg","assets/imgs/worklogMoreButtonBG.svg","assets/imgs/worklogMoreVertical.svg","assets/imgs/new_worklog_button_shadowed.svg","Components/Auth/AuthModal.module.css","Components/PathErrorPage/pathErr.module.css","assets/imgs/calendar.svg","Components/CalendarAndControllButtons/ControlButtons/ControlButtons.module.css","Components/hooks/useBooleanState.ts","Components/TimeTracking/TimeTracking.module.css","Components/CustomElements/CustomizedButton/CustomizedButton.tsx","Components/WorkLogs/WorklogInfo/WorklogInfo.module.css","Components/NavBar/MaterialNavBar.tsx","Components/Timer/Timer.jsx","Components/TimeTracking/UnActiveTimer.tsx","Components/TimeTracking/TimeTracking.tsx","assets/utils/ValidartorsComponents/ElementsValidators.js","assets/utils/validators.js","Components/Auth/SignIn/SignInForm.tsx","Components/Auth/SignIn/SignIn.tsx","Components/Auth/SignUp/SignUpForm.tsx","Components/Auth/SignUp/SignUp.tsx","Components/Auth/AuthPage.tsx","Components/SnackBar/SnackBar.tsx","Components/Progress/Progress.tsx","Components/HOCs/withSuspense/withSuspense.tsx","Components/PathErrorPage/PathErr.tsx","Components/Calendar/CalendarDay.tsx","Components/Calendar/DropDownCalendarFooterElement.tsx","Components/Selectors/CalendarSelectors.ts","Components/Calendar/DropDownCalendar.tsx","Components/Calendar/Calendar.tsx","Components/CalendarAndControllButtons/ControlButtons/All/AllButton.tsx","Components/CalendarAndControllButtons/ControlButtons/Favorites/FavoritesButton.tsx","Components/CalendarAndControllButtons/ControlButtons/ControlButtons.tsx","Components/CalendarAndControllButtons/CalendarAndControlButtons.tsx","App.tsx","index.tsx","Components/Selectors/WorklogsSelectors.ts","App.module.css","assets/secondary/CalculateTime.js","assets/secondary/GetCurrentDate.js","Components/CalendarAndControllButtons/ControlButtons/Favorites/Favorites.module.css","Components/WorkLogs/DropDown/WorklogDropDown.module.css"],"names":["module","exports","useWorklogsFunctions","dispatch","useDispatch","addWorklog","NewWorklog","IsFavorites","AddWorklogAC","deleteWorklog","DelWorklogId","DelParentId","DeleteWorklogAC","setIsPlayingWorklogById","IsPlaying","ElementId","SetIsPlayingWorklogByIdAC","setWorklogToChange","WorklogToChange","undefined","SetWorklogToChangeAC","changeWorklog","ChangeWorklogAC","changeFavoritesWorklog","WorklogId","ChangeFavoritesWorklogAC","addToFavorite","AddToFavoriteAC","setWorklogStatus","options","SetWorklogStatusAC","deleteFromFavorites","DeleteFromFavoritesAC","reducers","combineReducers","form","formReducer","CalendarData","CalendarReducer","WorklogsData","WorkLogsReducer","IssuesData","IssuesReducer","store","createStore","applyMiddleware","thunkMiddleWare","window","RandomStatus","arr","length","RangeError","Math","floor","random","RandomDaysCreate","statuses","IntroDaysCount","OutroDaysCount","DaysCount","MaxDaysLength","OutArr","IntroDaysArr","OutroDaysArr","DaysArr","j","push","Signature","DayNumber","DayStatus","id","randomInteger","n","p","DefaultState","Calendar","January","February","March","April","May","June","July","August","September","October","November","December","ClickedMonthDay","CurrentDate","GetCurrentDate","SetClickedMonthDay","Day","type","state","action","useInput","initialValue","useState","value","setValue","bind","onChange","e","target","clear","forceUpdate","val","DEL_WORKLOG","DayName","CurrentMonth","CurrentDay","min","max","rand","WorkLogsBlocks","BlockInfo","BlockCreatedDate","SummaryStatus","SummaryTime","Worklogs","StartTime","EndTime","TaskField","status","NestingItems","TimerValue","Issue","PlayingWorklog","FavoritesWorklogs","SearchWorklogBlock","MonthName","StateCopy","JSON","parse","stringify","getState","WorklogsBlockToBeScrolled","map","el","split","Month","Number","parseInt","document","getElementById","toString","WorklogsReducer","GetWorklogsBlockCopy","FindWorklogById","WorklogsBlocksCopy","SoughtWorklog","WorklogBlockIndex","WorklogIndex","NestingWorklogIndex","WorklogBlock","Index","Worklog","WLIndex","NestingItem","NestingIndex","EmptyWorklog","ParentId","WorklogToCreate","some","WBL","unshift","WB","filter","FWorklog","Object","assign","CNestingItem","FNestingItem","NewWorklogs","NewNestingWorklogs","FilteredWorklogBlockCopy","index","WL","WBLtrue","FavoritesWorklog","FavoritesWorklogsCopy","Nest","CustomInput","props","classes","makeStyles","theme","createStyles","root","margin","spacing","width","useStyles","className","label","placeholder","multiline","getIssues","Issues","getCompletedIssues","CompletedIssues","SetIssues","SetCompletedIssues","AddIssue","DeleteIssue","From","ChangeIssue","OldIssue","NewIssue","GetIssuesCopy","CompletedIssue","IssuesCopy","findIndex","IssuesSelectInput","formControl","Item","color","noValidate","autoComplete","select","variant","fullWidth","issues","issue","key","LineStroke","LS","lineStroke","WorkLogDropDown","onMouseLeave","onHideMenu","WLDD","Container","onClick","ContentContainer","playingWorklog","componentToDraw","CurrentWorklog","worklogInfo","ContainerEl","parentId","showSnackBar","message","position","horizontal","vertical","severity","blockInfo","setWorklogToDelete","showDeleteModal","NestingWorkLog","WorkTime","WLS","NestingButtonPose","nestingItemsStatus","isDisplayed","Hide","NestingBG","TwwContentImg","src","ArrowUp","alt","Show","TwwContentText","Minus","StatusBar","isPlayingOrDisplayed","ColorPointPoseActive","ColorPointPose","style","transitionTimingFunction","transitionDuration","CP_ok","CP_warning","CP_danger","IssueAndTask","onSetWorklogToChange","WorklogContentContainer","taskField","WorklogTime","TimerValueContainer","timerValue","ControlButtons","isPlaying","ControlButtonsContainer","onStopButtonClicked","StopButton","onPlayButtonClicked","PlayButton","OnHoverMoreButton","isActive","WorklogMoreButtonActive","WorklogMoreButton","WLMoreButtonBG","onMouseEnter","onShow","WorklogMoreVerticalActive","WorklogMoreVertical","WLMoreButtonVertical","WorkLog","dropDownMenuStatus","useBooleanState","WorkLogs","WorklogBlockContainerActive","WorklogBlockContainer","WorklogActiveBG","WorklogBG","keys","i","openWorklogChangeModal","WLlinestrokeActive","WLlinestroke","nestingIsShowing","React","memo","Fragment","height","borderRadius","Bar","now","bg","CreateSnackBarOptions","WorklogInfo","FS","SummaryWorklogInfo","DateBlockContainer","dateOfCreation","statusContainer","DateTime","summaryTime","Progress","summaryStatus","cursor","fontSize","worklogs","every","DownloadIcon","WLlineStrokeContainer","DeleteWorklogConfirmModal","isOpen","open","onClose","aria-labelledby","aria-describedby","container","justify","alignItems","item","fontWeight","paddingTop","paddingBottom","direction","CustomizedButton","bgColor","text","onSubmit","startIcon","fontColor","WorkLogsBlock","worklogsBlocks","useSelector","getWorklogsBlocks","getPlayingWorklog","favoritesWorklogs","getFavoritesWorklog","WFS","deleteModalStatus","worklogToDelete","WorklogInfoContainer","SetIsOpen","Switch","findColorObject","colorName","green","purple","grey","red","blue","teal","common","yellow","deepOrange","orange","blueGrey","cyan","indigo","ColorButton","withStyles","palette","getContrastText","backgroundColor","Button","disabled","grow","flexGrow","menuButton","marginRight","title","display","breakpoints","up","sectionDesktop","sectionMobile","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","LogOut","localStorage","setItem","onUnAuth","renderMobileMenu","Menu","anchorEl","anchorOrigin","keepMounted","transformOrigin","MenuItem","IconButton","openUserProfile","aria-label","aria-controls","aria-haspopup","Avatar","avatar","AppBar","Toolbar","HS","NavLinks","to","Tooltip","arrow","placement","edge","event","currentTarget","prevProps","nextProps","Timer","substr","seconds","setSeconds","minutes","setMinutes","hours","setHours","timerStatusData","worklogInput","issueInput","useEffect","interval","setInterval","clearInterval","TS","TimeRContainer","marginTop","ToFullTime","TimerControlButtonsContainer","TimerControlButtons","TimerData","TimerIssue","TimerTaskField","setTimerData","paddingLeft","UnActiveTimer","TTS","TTMainContentRoot","NewWorklogContainer","favoritesIsClicked","onAddEmptyWorklog","NewWorklogButtonPose","NewWorklogButtonSize","NewWorklogButtonShadowed","NewWorklogButton","NewWorklogButtonDescriptionContainer","NewWorklogButtonDescription","TTHorizStrokePose","TimeTracking","TTLayout","strokeVert","TTContent","TimetrackingHeaderContainer","TimetrackingHeader","TimeTrackingLogo","FormInput","input","meta","error","touched","EVS","padding","CreateField","name","validators","component","Field","validate","required","Email","test","PassMinLength","SignInFormRedux","reduxForm","paddingRight","handleSubmit","authErr","helperText","Grid","componentIsSignUp","SignIn","history","useHistory","setAuthErr","formData","email","password","onAuth","replace","SignUpFormRedux","componentIsSignIn","SignUp","console","log","AuthPage","setComponentToDraw","modal","Alert","elevation","Snackbar","isShowing","autoHideDuration","HideDuration","onHide","top","left","marginLeft","CircularProgress","withSuspense","WrappedComponent","fallback","PathErr","PES","wrapper","CalendarDay","DayIsClickedData","WrappedDay","CDS","DayBgClicked","DayBgCurrentDay","DayBgDefault","WorklogsBlockToBeScroled","scrollIntoView","block","inline","behavior","DropDownCalendarDayFaded","DropDownCalendarDay","DropDownCalendarDayNumberClicked","DropDownCalendarDayNumber","WorklogsBlocks","OK","Warn","Danger","EmptyStatus","DropDownCalendarFooterElement","CS","DropDownProgressStatus","getCalendar","getCurrentDate","getClickedMonthDay","DropDownCalendar","calendar","clickedMonthDay","currentDate","setClickedMonthDay","DropDownCalendarHeader","DropDOwnCalendarContentContainer","DropDownCalendarContent","DropDownCalendarDayNames","day","DropDownCalendarFooterContainer","DropDownCalendarFooter","DropDownCalendarData","CalendarContainer","CalendarContent","CalendarDate","CurrentYear","CalendarIcon","AllButton","AllS","AllButtonBg","AllButtonBgActive","ActiveItem","onAllClicked","FavoritesButton","FavoritesButtonBgActive","FavoritesButtonBg","FavoritesTextContainer","onFavoritesClick","pink","CBS","CalendarAndControlButtons","AS","CalendarAndButtons","lazy","Favorites","ChangeWorklogModalContainer","ModalUserProfile","SuspendedIssues","SuspendedFavorites","SuspendedChangeWorklogModalContainer","SuspendedModalUserProfile","App","setIsAuth","worklogModalStatus","favoritesClickedStatus","userProfileClickedStatus","snackBarDisplayingStatus","timerData","snackBarOptions","setSnackBarOptions","onSetTimerData","SnackBarOptions","getItem","exact","path","render","CalendarAndButtonsContainer","MainWrapper","closeWorklogChangeModal","TImeTracking_and_Calendar","worklogChangeModalIsOpen","hide","reason","ReactDOM","basename","process","AppContainer","getWorklogToChange","Numbered","CalculateNewStartTime","CurrentTime","CurrentHours","CurrentMinutes","days","months","date","Date","getFullYear","getMonth","getDate","getDay"],"mappings":"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","file":"static/js/main.00ec0031.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimeRContainer\":\"Timer_TimeRContainer__16lLU\",\"TimerWorklogName\":\"Timer_TimerWorklogName__2BtW8\",\"TimerIssueName\":\"Timer_TimerIssueName__i_DiT\",\"TimerControlButtonsContainer\":\"Timer_TimerControlButtonsContainer__2RF33\",\"TimerControlButtons\":\"Timer_TimerControlButtons__3NEwd\",\"Timer\":\"Timer_Timer__ji3V0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllButtonBgActive\":\"All_AllButtonBgActive__3owIi\",\"AllButtonBg\":\"All_AllButtonBg__32eRQ\",\"item\":\"All_item__B30SX\",\"ActiveItem\":\"All_ActiveItem__3OU8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorklogInfoContainer\":\"WorkLog_WorklogInfoContainer__3vBgc\",\"WorklogBlockContainer\":\"WorkLog_WorklogBlockContainer__k3upz\",\"WorklogMoreButton\":\"WorkLog_WorklogMoreButton__1p1cl\",\"WorklogMoreVertical\":\"WorkLog_WorklogMoreVertical__2_aPH\",\"WorklogBG\":\"WorkLog_WorklogBG__3k2mr\",\"WorklogActiveBG\":\"WorkLog_WorklogActiveBG__sZgBP\",\"WorklogMoreVerticalActive\":\"WorkLog_WorklogMoreVerticalActive__LDc95\",\"WorklogMoreButtonActive\":\"WorkLog_WorklogMoreButtonActive__2ibnn\",\"WorklogBlockContainerActive\":\"WorkLog_WorklogBlockContainerActive__awb7y\",\"WLInfoButton\":\"WorkLog_WLInfoButton__2amtG\",\"WLlinestroke\":\"WorkLog_WLlinestroke__2SPgZ\",\"WLlinestrokeActive\":\"WorkLog_WLlinestrokeActive__1wEjg\",\"ColorPointPose\":\"WorkLog_ColorPointPose__2v3Y0\",\"ColorPointPoseActive\":\"WorkLog_ColorPointPoseActive__3Ylmy\",\"WorklogBlock\":\"WorkLog_WorklogBlock__3MTew\",\"WorkTime\":\"WorkLog_WorkTime__35AHM\",\"StartTime\":\"WorkLog_StartTime__pO95X\",\"EndTime\":\"WorkLog_EndTime__6ivO2\",\"Minus\":\"WorkLog_Minus__3ysDf\",\"WorklogContentContainer\":\"WorkLog_WorklogContentContainer__Pdl3q\",\"Issue\":\"WorkLog_Issue__34BO9\",\"TaskField\":\"WorkLog_TaskField__3WyCE\",\"ProgressBarContainer\":\"WorkLog_ProgressBarContainer__2t-30\",\"TimerValueContainer\":\"WorkLog_TimerValueContainer__3bCeV\",\"TimerValue\":\"WorkLog_TimerValue__yfMTJ\",\"ControlButtonsContainer\":\"WorkLog_ControlButtonsContainer__cqNYJ\",\"NestingButtonPose\":\"WorkLog_NestingButtonPose__-jdPs\",\"NestingBG\":\"WorkLog_NestingBG__ALW79\",\"TwwContentText\":\"WorkLog_TwwContentText__1n6ua\",\"WorkLogSliderPose\":\"WorkLog_WorkLogSliderPose__2XB8U\",\"TwwContentImg\":\"WorkLog_TwwContentImg__2jKRv\"};","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    AddWorklogAC, ChangeFavoritesWorklogAC,SetWorklogStatusAC,\r\n    ChangeWorklogAC,AddToFavoriteAC,\r\n    SetIsPlayingWorklogByIdAC,\r\n    SetWorklogToChangeAC,DeleteFromFavoritesAC,DeleteWorklogAC,\r\n    TWorkLog\r\n} from \"../../Redux/WorkLogsReducer\";\r\n\r\nexport const useWorklogsFunctions = ()=>{\r\n    const dispatch =  useDispatch()\r\n\r\n     const addWorklog = (NewWorklog ?: TWorkLog, IsFavorites?: boolean) => dispatch(AddWorklogAC(NewWorklog, IsFavorites))\r\n\r\n     const deleteWorklog = (DelWorklogId: number, DelParentId: number | null = null) =>\r\n        dispatch(DeleteWorklogAC(DelWorklogId,DelParentId))\r\n\r\n     const setIsPlayingWorklogById = (IsPlaying: boolean, ElementId?: number, IsFavorites ?: boolean) =>\r\n        dispatch(SetIsPlayingWorklogByIdAC(IsPlaying, ElementId, IsFavorites))\r\n\r\n     const setWorklogToChange = (WorklogToChange: TWorkLog | undefined = undefined) =>\r\n        dispatch(SetWorklogToChangeAC(WorklogToChange))\r\n\r\n     const changeWorklog = (NewWorklog: TWorkLog) => dispatch(ChangeWorklogAC(NewWorklog))\r\n\r\n     const changeFavoritesWorklog = (WorklogId: number, NewWorklog: TWorkLog) =>\r\n        dispatch(ChangeFavoritesWorklogAC(WorklogId, NewWorklog))\r\n\r\n     const addToFavorite = (WorklogId: number) => dispatch(AddToFavoriteAC(WorklogId))\r\n\r\n     const setWorklogStatus = (options: {\r\n        target: \"worklog\" | \"worklogblock\",\r\n        id: number,\r\n        status: \"ok\" | \"danger\" | \"warning\"\r\n    }) => dispatch(SetWorklogStatusAC(options))\r\n\r\n     const deleteFromFavorites= (WorklogId: number)=> dispatch(DeleteFromFavoritesAC(WorklogId))\r\n\r\n    return {\r\n        addWorklog,deleteWorklog,setIsPlayingWorklogById,setWorklogToChange,changeWorklog,changeFavoritesWorklog,\r\n        addToFavorite,setWorklogStatus,deleteFromFavorites\r\n    }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport CalendarReducer from \"./CalendarReducer\";\r\nimport WorkLogsReducer from \"./WorkLogsReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\nimport IssuesReducer from \"./IssuesReducer\";\r\n\r\nlet reducers = combineReducers({\r\n form : formReducer,\r\n CalendarData : CalendarReducer,\r\n WorklogsData  : WorkLogsReducer,\r\n IssuesData : IssuesReducer\r\n})\r\n\r\ntype Treducers = typeof reducers\r\n\r\nexport type GlobalState = ReturnType<Treducers>\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\nexport default store\r\n","import {randomInteger} from \"./WorkLogsReducer\";\r\nimport {GetCurrentDate} from \"../assets/secondary/GetCurrentDate\";\r\n\r\n\r\nconst SET_CLICKED_MONTH_DAYS = 'CALENDAR/SET_CLICKED_MONTH_DAYS'\r\n\r\nconst RandomStatus = (arr: Array<any>) => {\r\n    if (arr.length <= 0) {\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    }\r\n    let rand = Math.floor(Math.random() * arr.length)\r\n    return arr[rand]\r\n}\r\n\r\n\r\nconst RandomDaysCreate = (statuses: Array<string> = [], IntroDaysCount: number, OutroDaysCount: number, DaysCount: number) => {\r\n    let MaxDaysLength = 35\r\n    let OutArr: Array<TDay> = []\r\n    let IntroDaysArr: Array<TDay> = []\r\n    let OutroDaysArr: Array<TDay> = []\r\n    let DaysArr: Array<TDay> = []\r\n\r\n    if (IntroDaysCount + OutroDaysCount + DaysCount > MaxDaysLength) {\r\n        throw new RangeError(`getRandom: maximum of days it  a ${MaxDaysLength}, please, enter the correct all days counts `);\r\n    } else {\r\n\r\n        for (let j = 1; j <= IntroDaysCount; j++) {\r\n            IntroDaysArr.push({\r\n                Signature: \"intro\",\r\n                DayNumber: j,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let n = 1; n <= DaysCount; n++) {\r\n            DaysArr.push({\r\n                Signature: \"main\",\r\n                DayNumber: n,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 10000)\r\n            })\r\n        }\r\n        for (let p = 1; p <= OutroDaysCount; p++) {\r\n            OutroDaysArr.push({\r\n                Signature: \"outro\",\r\n                DayNumber: p,\r\n                DayStatus: RandomStatus(statuses),\r\n                id: randomInteger(0, 100000)\r\n            })\r\n        }\r\n        OutArr.push(...IntroDaysArr)\r\n        OutArr.push(...DaysArr)\r\n        OutArr.push(...OutroDaysArr)\r\n        return OutArr\r\n    }\r\n}\r\n\r\n\r\nexport type TDay = {\r\n    Signature: string\r\n    DayNumber: number\r\n    DayStatus: string\r\n    id: number\r\n}\r\ntype TMonth = TDay[]\r\n\r\nexport interface TCalendar {\r\n    [key: string]: TMonth\r\n}\r\n\r\nexport type TClickedDay = {\r\n    id: number,\r\n    DayNumber: string | number\r\n    MonthName: string\r\n} | null\r\n\r\n\r\nexport type TCurrentDate = {\r\n    DayName: string\r\n    CurrentYear: number | string\r\n    CurrentMonth: string\r\n    CurrentDay: number | string\r\n}\r\n\r\nlet DefaultState = {\r\n    Calendar: {\r\n        January: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        February: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        March: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 4, 30),\r\n        April: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        May: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        June: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        July: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 4, 1, 30),\r\n        August: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        September: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 3, 2, 30),\r\n        October: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 1, 3, 31),\r\n        November: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 3, 30),\r\n        December: RandomDaysCreate([\"ok\", \"danger\", \"warning\"], 2, 2, 31)\r\n    } as TCalendar,\r\n    ClickedMonthDay: null as TClickedDay,\r\n    CurrentDate: GetCurrentDate() as TCurrentDate\r\n}\r\n\r\ntype  DefaultTilesState = typeof DefaultState\r\n\r\n\r\ntype TTilesReducerActions = ReturnType<TSetClickedMonthDay>\r\n\r\nconst CalendarReducer = (state = DefaultState, action: TTilesReducerActions): DefaultTilesState => {\r\n\r\n    switch (action.type) {\r\n        case SET_CLICKED_MONTH_DAYS : {\r\n            return {\r\n                ...state,\r\n                ClickedMonthDay: action.Day\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetClickedMonthDay = (Day: TClickedDay) => {\r\n    return {type: SET_CLICKED_MONTH_DAYS, Day} as const\r\n}\r\nexport type TSetClickedMonthDay = typeof SetClickedMonthDay\r\n\r\nexport default CalendarReducer","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusDanger.168fb5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusWarning.ccaa2bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/CalendarDayStatusOK.b4118d29.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinks\":\"NavBar_NavLinks__22adz\",\"item\":\"NavBar_item__fYm3M\"};","import {useState, ChangeEvent} from \"react\"\r\n\r\ntype defFunc = () => void\r\n\r\nexport const useInput = (initialValue: string): {\r\n    bind: {\r\n        value: string,\r\n        onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    },\r\n    value: string,\r\n    clear: defFunc,\r\n    forceUpdate: (val: string) => void\r\n} => {\r\n\r\n    let [value, setValue] = useState(initialValue)\r\n\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const clear = () => {\r\n        setValue(\"\")\r\n    }\r\n\r\n    const forceUpdate = (val: string) => {\r\n        setValue(val)\r\n    }\r\n    return {\r\n        bind: {value, onChange},\r\n        value,\r\n        clear,\r\n        forceUpdate\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar.ca981f53.jpg\";","import store, {GlobalState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {GetCurrentDate} from \"../assets/secondary/GetCurrentDate\";\r\n\r\nconst ADD_WORKLOG = \"WORKLOGS/ADD_WORKLOG\"\r\nconst DEL_WORKLOG = \"WORKLOGS/DEL_WORKLOG\"\r\nconst SET_IS_PLAYING_WORKLOG_BY_ID = \"WORKLOGS/SET_IS_PLAYING_WORKLOG_BY_ID\"\r\nconst CHANGE_WORKLOG = \"WORKLOGS/CHANGE_WORKLOG\"\r\nconst SET_WORKLOG_TO_CHANGE = \"WORKLOGS/SET_WORKLOG_TO_CHANGE\"\r\nconst ADD_TO_FAVORITE = \"WORKLOGS/ADD_TO_FAVORITE\"\r\nconst SET_WORKLOG_STATUS = \"WORKLOGS/SET_WORKLOG_STATUS\"\r\nconst DELETE_FROM_FAVORITES = \"WORKLOGS/DELETE_FROM_FAVORITES\"\r\nconst CHANGE_FAVORITES_WORKLOG = \"WORKLOGS/CHANGE_FAVORITES_WORKLOG\"\r\nexport const CurrentDate = `${GetCurrentDate().DayName + \",\" + GetCurrentDate().CurrentMonth} ${GetCurrentDate().CurrentDay}`\r\n\r\nexport const randomInteger = (min: number, max: number): number => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport type TNestingItem = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\"\r\n    Issue?: string | null\r\n    id: number\r\n    TimerValue: string | null\r\n}\r\n\r\nexport type TBlockInfo = {\r\n    BlockCreatedDate: string\r\n    SummaryStatus: \"ok\" | \"warning\" | \"danger\" | string\r\n    SummaryTime: string | null\r\n    id: number\r\n}\r\n\r\nexport type TWorkLog = {\r\n    StartTime: string | null\r\n    EndTime: string | null\r\n    TaskField: string | null\r\n    status: \"ok\" | \"warning\" | \"danger\"\r\n    TimerValue: string | null\r\n    NestingItems?: Array<TNestingItem> | null\r\n    id: number\r\n    Issue?: string | null\r\n    ParentId?: number\r\n    IsFavorites?: boolean\r\n}\r\n\r\nexport type  TWorklogBlock = {\r\n    BlockInfo: TBlockInfo\r\n    Worklogs: Array<TWorkLog>\r\n}\r\n\r\nexport type TTimerData = {\r\n    TimerValue: string\r\n    TimerIssue: string\r\n    TimerTaskField: string\r\n}\r\nexport type TSendWorklogsData = {\r\n    WorkLogsBlocks: TWorklogBlock[]\r\n}\r\n\r\nlet DefaultState = {\r\n    WorkLogsBlocks: [{\r\n        BlockInfo: {\r\n            BlockCreatedDate: \"Wed,October 7\",\r\n            SummaryStatus: \"ok\",\r\n            SummaryTime: \"07:05:00\",\r\n            id: 1\r\n        },\r\n        Worklogs: [{\r\n            StartTime: \"09:00\",\r\n            EndTime: \"11:00\",\r\n            TaskField: \"Team standup\",\r\n            status: \"warning\",\r\n            NestingItems: null,\r\n            TimerValue: \"02:00:00\",\r\n            id: 444553452341241,\r\n            Issue: \"Meeting\",\r\n            IsFavorites: false\r\n        }, {\r\n            StartTime: \"10:00\",\r\n            EndTime: \"11:15\",\r\n            TaskField: \"Meeting with QA\",\r\n            status: \"ok\",\r\n            NestingItems: null,\r\n            TimerValue: \"01:15:00\",\r\n            id: 213124124125122,\r\n            Issue: \"QA\",\r\n            IsFavorites: false\r\n        }, {\r\n            StartTime: \"09:00\",\r\n            EndTime: \"10:00\",\r\n            TaskField: \"Company Branding\",\r\n            status: \"warning\",\r\n            TimerValue: \"03:50:00\",\r\n            id: 2131241255143,\r\n            NestingItems: null,\r\n            Issue: \"Branding\",\r\n            IsFavorites: false\r\n        },\r\n            {\r\n                StartTime: \"11:30\",\r\n                EndTime: \"13:00\",\r\n                TaskField: \"Marketing strategy\",\r\n                status: \"warning\",\r\n                id: 123213213244,\r\n                TimerValue: \"01:30:00\",\r\n                NestingItems: null,\r\n                Issue: \"Profit increase\",\r\n                IsFavorites: false\r\n            },\r\n            {\r\n                StartTime: \"13:20\",\r\n                EndTime: \"16:00\",\r\n                TaskField: \"Moodboarding\",\r\n                status: \"ok\",\r\n                id: 1232312351245,\r\n                TimerValue: \"03:20:00\",\r\n                NestingItems: null,\r\n                Issue: \"Project Design\",\r\n                IsFavorites: false\r\n            }]\r\n    },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Tue,October 6\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 2\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Team standup\",\r\n                status: \"danger\",\r\n                NestingItems: null,\r\n                TimerValue: \"01:00:00\",\r\n                id: 444553452341246,\r\n                Issue: \"Meeting\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                TaskField: \"Design Meeting\",\r\n                status: \"ok\",\r\n                NestingItems: null,\r\n                TimerValue: \"01:15:00\",\r\n                id: 213124124125127,\r\n                Issue: \"Project Design\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                TimerValue: \"04:50:00\",\r\n                id: 2131241255148,\r\n                Issue: \"Profit increase\",\r\n                IsFavorites: false,\r\n                NestingItems: [{\r\n                    StartTime: \"11:30\",\r\n                    EndTime: \"13:00\",\r\n                    TaskField: \"Marketing strategy\",\r\n                    status: \"warning\",\r\n                    id: 123213213249,\r\n                    TimerValue: \"01:30:00\",\r\n                    Issue: \"Profit increase\",\r\n                    IsFavorites: false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    TaskField: \"Moodboarding\",\r\n                    status: \"ok\",\r\n                    id: 12323123512410,\r\n                    TimerValue: \"03:20:00\",\r\n                    Issue: \"Profit increase\",\r\n                    IsFavorites: false\r\n                }]\r\n            }]\r\n        },\r\n        {\r\n            BlockInfo: {\r\n                BlockCreatedDate: \"Mon,October 5\",\r\n                SummaryStatus: \"warning\",\r\n                SummaryTime: \"06:05:00\",\r\n                id: 3\r\n            },\r\n            Worklogs: [{\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Team standup\",\r\n                status: \"ok\",\r\n                NestingItems: null,\r\n                TimerValue: \"01:00:00\",\r\n                id: 4445534523412411,\r\n                Issue: \"Meeting\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"10:00\",\r\n                EndTime: \"11:15\",\r\n                TaskField: \"Fixing control buttons on navigation bar\",\r\n                status: \"ok\",\r\n                NestingItems: null,\r\n                TimerValue: \"02:45:00\",\r\n                id: 2131241241251212,\r\n                Issue: \"Amendment\",\r\n                IsFavorites: false\r\n            }, {\r\n                StartTime: \"09:00\",\r\n                EndTime: \"10:00\",\r\n                TaskField: \"Company Branding\",\r\n                status: \"warning\",\r\n                TimerValue: \"03:50:00\",\r\n                id: 21312412551413,\r\n                NestingItems: null,\r\n                Issue: \"Profit increase\",\r\n                IsFavorites: false\r\n            },\r\n                {\r\n                    StartTime: \"12:00\",\r\n                    EndTime: \"13:00\",\r\n                    TaskField: \"Create layout for main menu\",\r\n                    status: \"danger\",\r\n                    id: 1232132132414,\r\n                    TimerValue: \"01:00:00\",\r\n                    NestingItems: null,\r\n                    Issue: \"Project Design\",\r\n                    IsFavorites: false\r\n                }, {\r\n                    StartTime: \"13:20\",\r\n                    EndTime: \"16:00\",\r\n                    TaskField: \"Create layout for inputs\",\r\n                    status: \"ok\",\r\n                    id: 12323123512415,\r\n                    TimerValue: \"03:20:00\",\r\n                    NestingItems: null,\r\n                    Issue: \"Project Design\",\r\n                    IsFavorites: false\r\n                }]\r\n        }] as Array<TWorklogBlock>,\r\n    PlayingWorklog: null as TWorkLog | null,\r\n    WorklogToChange: null as TWorkLog | null,\r\n    FavoritesWorklogs: [] as Array<TWorkLog>\r\n}\r\n\r\nexport const SearchWorklogBlock = (MonthName: string, DayNumber: number): Element | null => {\r\n    let StateCopy: DefaultWorklogsState = JSON.parse(JSON.stringify(store.getState().WorklogsData))\r\n    let WorklogsBlockToBeScrolled: HTMLElement | null = null\r\n    StateCopy.WorkLogsBlocks.map(el => {\r\n        let [Month, Day] = [...el.BlockInfo.BlockCreatedDate?.split(\",\")[1].split(\" \")]\r\n        if (Month === MonthName && Number.parseInt(Day) === DayNumber) {\r\n            WorklogsBlockToBeScrolled = document.getElementById(el.BlockInfo.id.toString())\r\n        }\r\n    })\r\n    return WorklogsBlockToBeScrolled\r\n}\r\n\r\n\r\ntype  DefaultWorklogsState = typeof DefaultState\r\n\r\n\r\ntype TWorklogsReducerActions = ReturnType<TAddWorklog> | ReturnType<TDeleteWorklog>\r\n    | ReturnType<TSetIsPlayingWorklogById> | ReturnType<TChangeWorklog>\r\n    | ReturnType<TSetWorklogToChange> | ReturnType<TAddToFavorite> | ReturnType<TSetWorklogStatus>\r\n    | ReturnType<TDeleteFromFavorites> | ReturnType<TChangeFavoritesWorklog>\r\n\r\ntype TWorklogsThunks = ThunkAction<Promise<void>, GlobalState, unknown, TWorklogsReducerActions>\r\n\r\nconst WorklogsReducer = (state = DefaultState, action: TWorklogsReducerActions): DefaultWorklogsState => {\r\n\r\n    const GetWorklogsBlockCopy = (): Array<TWorklogBlock> => {\r\n        return JSON.parse(JSON.stringify(state.WorkLogsBlocks))\r\n    }\r\n\r\n\r\n    const FindWorklogById = (id: number | undefined): {\r\n        SoughtWorklog: TWorkLog\r\n        WorklogBlockIndex: number | undefined\r\n        WorklogIndex: number | undefined\r\n        NestingWorklogIndex: number | undefined\r\n    } => {\r\n        let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n        let SoughtWorklog = {} as TWorkLog\r\n        let WorklogBlockIndex = undefined as number | undefined\r\n        let WorklogIndex = undefined as number | undefined\r\n        let NestingWorklogIndex = undefined as number | undefined\r\n\r\n        WorklogsBlocksCopy.map((WorklogBlock, Index) => {\r\n            WorklogBlock.Worklogs.map((Worklog, WLIndex) => {\r\n\r\n                if (Worklog.NestingItems && Worklog.NestingItems.length > 0 && Worklog.id !== id) {\r\n                    Worklog.NestingItems?.map((NestingItem, NestingIndex) => {\r\n                        if (NestingItem.id === id) {\r\n\r\n                            SoughtWorklog = {\r\n                                ...NestingItem\r\n                            }\r\n                            WorklogBlockIndex = Index\r\n                            NestingWorklogIndex = NestingIndex\r\n                            WorklogIndex = WLIndex\r\n                        }\r\n                    })\r\n                } else {\r\n                    if (Worklog.id === id) {\r\n                        WorklogBlockIndex = Index\r\n                        SoughtWorklog = Worklog\r\n                        WorklogIndex = WLIndex\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        return {SoughtWorklog, WorklogBlockIndex, WorklogIndex, NestingWorklogIndex}\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_WORKLOG: {\r\n\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let EmptyWorklog: TWorkLog = {\r\n                StartTime: null,\r\n                EndTime: null,\r\n                id: randomInteger(0, 10000),\r\n                NestingItems: null,\r\n                TaskField: null,\r\n                Issue: null,\r\n                TimerValue: \"00:00:00\",\r\n                status: \"danger\",\r\n                ParentId: undefined,\r\n                IsFavorites: action.IsFavorites\r\n            }\r\n            let WorklogToCreate = {} as TWorkLog\r\n\r\n            action.NewWorklog\r\n                ? WorklogToCreate = action.NewWorklog\r\n                : WorklogToCreate = EmptyWorklog\r\n\r\n            if (WorklogsBlocksCopy.some(WBL => WBL.BlockInfo.BlockCreatedDate === CurrentDate)) {\r\n                WorklogsBlocksCopy.map(WBL => {\r\n                    WBL.BlockInfo.BlockCreatedDate === CurrentDate && WBL.Worklogs.unshift(WorklogToCreate)\r\n                })\r\n            } else {\r\n                WorklogsBlocksCopy.unshift({\r\n                    BlockInfo: {\r\n                        id: randomInteger(0, 10000),\r\n                        BlockCreatedDate: CurrentDate,\r\n                        SummaryStatus: \"danger\",\r\n                        SummaryTime: \"00:00:00\"\r\n                    }, Worklogs: [\r\n                        WorklogToCreate\r\n                    ]\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                PlayingWorklog: WorklogToCreate,\r\n                FavoritesWorklogs: action.IsFavorites ? [...state.FavoritesWorklogs, EmptyWorklog] : []\r\n            }\r\n        }\r\n\r\n        case SET_IS_PLAYING_WORKLOG_BY_ID: {\r\n            let SoughtWorklog = FindWorklogById(action.ElementId).SoughtWorklog\r\n            action.IsFavorites ? SoughtWorklog.IsFavorites = true : SoughtWorklog.IsFavorites = false\r\n            return {\r\n                ...state,\r\n                PlayingWorklog: action.IsPlaying ?\r\n                    SoughtWorklog\r\n                    : null\r\n            }\r\n        }\r\n        case CHANGE_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n\r\n            WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n\r\n                if (WB.BlockInfo.BlockCreatedDate === CurrentDate) {\r\n\r\n                    if (Worklog.Issue === action.NewWorklog.Issue) {\r\n\r\n                        if (Worklog.id !== action.NewWorklog.id) {\r\n                            WB.Worklogs = WB.Worklogs.filter(FWorklog => FWorklog.id !== action.NewWorklog.id)\r\n                            if (Worklog.NestingItems && Worklog.NestingItems?.length > 0) {\r\n                                Worklog.NestingItems.map(NestingItem => {\r\n                                    if (NestingItem.id === action.NewWorklog.id) {\r\n                                        if (NestingItem.Issue === action.NewWorklog.Issue)\r\n                                            Object.assign(NestingItem, action.NewWorklog)\r\n\r\n                                    } else Worklog.NestingItems?.push(action.NewWorklog)\r\n                                })\r\n                            } else Worklog.NestingItems = [action.NewWorklog]\r\n\r\n\r\n                        } else Object.assign(Worklog, action.NewWorklog)\r\n\r\n                    } else {\r\n                        if (Worklog.id === action.NewWorklog.id) Object.assign(Worklog, action.NewWorklog)\r\n\r\n                        else if (Worklog.NestingItems && Worklog.NestingItems?.length > 0) {\r\n                            Worklog.NestingItems.map(CNestingItem => {\r\n                                if (CNestingItem.id === action.NewWorklog.id && CNestingItem.Issue !== action.NewWorklog.Issue) {\r\n                                    Worklog.NestingItems = Worklog.NestingItems?.filter(FNestingItem => FNestingItem.id !== action.NewWorklog.id)\r\n                                    WB.Worklogs.push(action.NewWorklog)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }))\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DEL_WORKLOG: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let NewWorklogs: Array<Array<TWorkLog>> = []\r\n            let NewNestingWorklogs: Array<Array<TNestingItem> | undefined> = []\r\n            let FilteredWorklogBlockCopy = [] as Array<TWorklogBlock>\r\n\r\n            WorklogsBlocksCopy.map((WBL, index) => {\r\n\r\n                if (action.DelParentId) {\r\n                    WBL.Worklogs.map((Worklog, WLIndex) => {\r\n                        if (Worklog.id === action.DelParentId) {\r\n                            NewNestingWorklogs.push(Worklog.NestingItems?.filter(NestingItem => NestingItem.id !== action.DelWorklogId))\r\n                            WorklogsBlocksCopy[index].Worklogs[WLIndex].NestingItems = NewNestingWorklogs[index]\r\n                        }\r\n                    })\r\n                } else {\r\n                    NewWorklogs.push(WBL.Worklogs.filter(WL => WL.id !== action.DelWorklogId))\r\n                    WorklogsBlocksCopy[index].Worklogs = NewWorklogs[index]\r\n                }\r\n                if (WBL.Worklogs.length === 0) {\r\n                    FilteredWorklogBlockCopy = WorklogsBlocksCopy.filter(WBLtrue => WBLtrue !== WBL)\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: FilteredWorklogBlockCopy.length > 0 ? FilteredWorklogBlockCopy : WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case SET_WORKLOG_TO_CHANGE : {\r\n            return {\r\n                ...state,\r\n                WorklogToChange: action.WorklogToChange ? action.WorklogToChange : null\r\n            }\r\n        }\r\n        case ADD_TO_FAVORITE : {\r\n            let {SoughtWorklog} = FindWorklogById(action.WorklogId)\r\n            return {\r\n                ...state,\r\n                FavoritesWorklogs: [...state.FavoritesWorklogs, SoughtWorklog]\r\n            }\r\n        }\r\n        case SET_WORKLOG_STATUS: {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            if (action.options.target === \"worklog\") {\r\n                WorklogsBlocksCopy.map(WB => WB.Worklogs.map(Worklog => {\r\n                    if (Worklog.id === action.options.id) Worklog.status = action.options.status\r\n                }))\r\n            } else {\r\n                WorklogsBlocksCopy.map(WB => {\r\n                    if (WB.BlockInfo.id === action.options.id) WB.BlockInfo.SummaryStatus = action.options.status\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy\r\n            }\r\n        }\r\n        case DELETE_FROM_FAVORITES : {\r\n            return {\r\n                ...state,\r\n                FavoritesWorklogs: state.FavoritesWorklogs.filter(FavoritesWorklog => FavoritesWorklog.id !== action.WorklogId)\r\n            }\r\n        }\r\n        case CHANGE_FAVORITES_WORKLOG : {\r\n            let WorklogsBlocksCopy: Array<TWorklogBlock> = GetWorklogsBlockCopy()\r\n            let FavoritesWorklogsCopy: Array<TWorkLog> = JSON.parse(JSON.stringify(state.FavoritesWorklogs))\r\n            FavoritesWorklogsCopy.map(FavoritesWorklog => {\r\n                if (FavoritesWorklog.NestingItems && FavoritesWorklog.NestingItems?.length > 0) {\r\n                    FavoritesWorklog.NestingItems.map(NestingItem => {\r\n                        if (NestingItem.id === action.WorklogId)\r\n                            Object.assign(NestingItem, action.NewWorklog)\r\n                    })\r\n                } else Object.assign(FavoritesWorklog, action.NewWorklog)\r\n            })\r\n\r\n            WorklogsBlocksCopy.some(WBL => WBL.BlockInfo.BlockCreatedDate === CurrentDate)\r\n                ? WorklogsBlocksCopy.map(WBL => {\r\n\r\n                    WBL.Worklogs.some(Worklog => Worklog.id === action.WorklogId\r\n                        || Worklog.NestingItems?.some(Nest => Nest.id === action.WorklogId))\r\n\r\n                        ? WBL.Worklogs.some(Worklog => Worklog.NestingItems && Worklog.NestingItems.length > 0)\r\n                        ? WBL.Worklogs.map(Worklog => {\r\n                            Worklog.NestingItems?.map(NestingItem => {\r\n                                if (NestingItem.id === action.WorklogId)\r\n                                    Object.assign(NestingItem, action.NewWorklog)\r\n                            })\r\n                        })\r\n                        : WBL.Worklogs.map(Worklog => {\r\n                            if (Worklog.id === action.WorklogId)\r\n                                Object.assign(Worklog, action.NewWorklog)\r\n                        })\r\n                        : WBL.Worklogs.unshift(action.NewWorklog)\r\n                })\r\n                : WorklogsBlocksCopy.unshift({\r\n                    BlockInfo: {\r\n                        BlockCreatedDate: CurrentDate,\r\n                        SummaryStatus: \"danger\",\r\n                        id: randomInteger(0, 10000),\r\n                        SummaryTime: \"00:00:00\"\r\n                    },\r\n                    Worklogs: [\r\n                        action.NewWorklog\r\n                    ]\r\n                })\r\n            return {\r\n                ...state,\r\n                WorkLogsBlocks: WorklogsBlocksCopy,\r\n                FavoritesWorklogs: FavoritesWorklogsCopy\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddWorklogAC = (NewWorklog ?: TWorkLog, IsFavorites?: boolean) => {\r\n    return {type: ADD_WORKLOG, NewWorklog, IsFavorites} as const\r\n}\r\nexport type TAddWorklog = typeof AddWorklogAC\r\n\r\nexport const DeleteWorklogAC = (DelWorklogId: number, DelParentId: number | null = null) => {\r\n    return {type: DEL_WORKLOG, DelWorklogId, DelParentId} as const\r\n}\r\nexport type TDeleteWorklog = typeof DeleteWorklogAC\r\n\r\nexport const SetIsPlayingWorklogByIdAC = (IsPlaying: boolean, ElementId?: number, IsFavorites ?: boolean) => {\r\n    return {type: SET_IS_PLAYING_WORKLOG_BY_ID, IsPlaying, ElementId, IsFavorites} as const\r\n}\r\nexport type TSetIsPlayingWorklogById = typeof SetIsPlayingWorklogByIdAC\r\n\r\nexport const ChangeWorklogAC = (NewWorklog: TWorkLog) => {\r\n    return {type: CHANGE_WORKLOG, NewWorklog} as const\r\n}\r\nexport type TChangeWorklog = typeof ChangeWorklogAC\r\n\r\nexport const SetWorklogToChangeAC = (WorklogToChange: TWorkLog | undefined = undefined) => {\r\n    return {type: SET_WORKLOG_TO_CHANGE, WorklogToChange} as const\r\n}\r\nexport type TSetWorklogToChange = typeof SetWorklogToChangeAC\r\n\r\nexport const AddToFavoriteAC = (WorklogId: number) => {\r\n    return {type: ADD_TO_FAVORITE, WorklogId} as const\r\n}\r\nexport type TAddToFavorite = typeof AddToFavoriteAC\r\n\r\n\r\n// export const SendWorklogBlockThunk = (WorklogBlockData: TSendWorklogsData): TWorklogsThunks => async (dispatch) => {\r\n//\r\n//     const SendNewMessageResult = await API.SendWorklogBlock(WorklogBlockData)\r\n//     // if (SendNewMessageResult.resultCode === 0) {\r\n//     //     dispatch(GetWorklogs(WorklogBlockId))\r\n//     // }\r\n// }\r\n// export type TSendWorklogBlockThunk = typeof SendWorklogBlockThunk\r\n\r\nexport const SetWorklogStatusAC = (options: {\r\n    target: \"worklog\" | \"worklogblock\",\r\n    id: number,\r\n    status: \"ok\" | \"danger\" | \"warning\"\r\n}) => {\r\n    return {type: SET_WORKLOG_STATUS, options} as const\r\n}\r\nexport type TSetWorklogStatus = typeof SetWorklogStatusAC\r\n\r\nexport const DeleteFromFavoritesAC = (WorklogId: number) => {\r\n    return {type: DELETE_FROM_FAVORITES, WorklogId} as const\r\n}\r\n\r\nexport type TDeleteFromFavorites = typeof DeleteFromFavoritesAC\r\n\r\nexport const ChangeFavoritesWorklogAC = (WorklogId: number, NewWorklog: TWorkLog) => {\r\n    return {type: CHANGE_FAVORITES_WORKLOG, WorklogId, NewWorklog} as const\r\n}\r\n\r\nexport type TChangeFavoritesWorklog = typeof ChangeFavoritesWorklogAC\r\n\r\nexport default WorklogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ElementsValidators_formControl__wFZV5\",\"error\":\"ElementsValidators_error__1Akph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarContainer\":\"Calendar_CalendarContainer__I7VPR\",\"CalendarContent\":\"Calendar_CalendarContent__7J52V\",\"CalendarIcon\":\"Calendar_CalendarIcon__35v8Z\",\"CalendarDate\":\"Calendar_CalendarDate__1Fc1O\",\"DropDownCalendar\":\"Calendar_DropDownCalendar__rOVL_\",\"DropDownCalendarHeader\":\"Calendar_DropDownCalendarHeader__mMkPr\",\"DropDOwnCalendarContentContainer\":\"Calendar_DropDOwnCalendarContentContainer__1ekcD\",\"DropDownCalendarContent\":\"Calendar_DropDownCalendarContent__3lJK4\",\"DropDownCalendarFooterContainer\":\"Calendar_DropDownCalendarFooterContainer__dEO85\",\"DropDownCalendarFooter\":\"Calendar_DropDownCalendarFooter__3v4wV\",\"DropDownCalendarFooterElement\":\"Calendar_DropDownCalendarFooterElement__2gCAC\",\"DropDownCalendarProgressLineDanger\":\"Calendar_DropDownCalendarProgressLineDanger__k_JjF\",\"DropDownCalendarProgressLineOk\":\"Calendar_DropDownCalendarProgressLineOk__1Tedt\",\"DropDownCalendarProgressLineWarning\":\"Calendar_DropDownCalendarProgressLineWarning__3NPVW\",\"DropDownProgressStatus\":\"Calendar_DropDownProgressStatus__1Hffx\",\"DayBgClicked\":\"Calendar_DayBgClicked__10_xV\",\"DayBgCurrentDay\":\"Calendar_DayBgCurrentDay__35shH\",\"DayBgDefault\":\"Calendar_DayBgDefault__138Ia\",\"DropDownCalendarDay\":\"Calendar_DropDownCalendarDay__1TvNk\",\"DropDownCalendarDayFaded\":\"Calendar_DropDownCalendarDayFaded__3wmG5\",\"DropDownCalendarDayNumber\":\"Calendar_DropDownCalendarDayNumber__3_jQu\",\"DropDownCalendarDayNumberClicked\":\"Calendar_DropDownCalendarDayNumberClicked__YFrra\",\"DropDownCalendarDayNames\":\"Calendar_DropDownCalendarDayNames__qcAdr\",\"bg\":\"Calendar_bg__2aViC\",\"EmptyStatus\":\"Calendar_EmptyStatus__weaVf\"};","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport type TCustomInputProps = {\r\n    value : string\r\n    onChange : (event: React.ChangeEvent<HTMLInputElement>) =>void\r\n    placeholder : string\r\n    label : string\r\n    width : number\r\n}\r\n\r\nexport const CustomInput: React.FC<TCustomInputProps> = (props) => {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                '& .MuiTextField-root': {\r\n                    margin: theme.spacing(1),\r\n                    width: props.width,\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const classes = useStyles()\r\n    return <div className={classes.root}>\r\n        <TextField\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            id=\"standard-textarea\"\r\n            label={props.label}\r\n            placeholder={props.placeholder}\r\n            multiline\r\n        />\r\n    </div>\r\n}\r\n","import {GlobalState} from \"../../Redux/redux-store\";\r\n\r\nexport const getIssues = (state : GlobalState) => state.IssuesData.Issues\r\nexport const getCompletedIssues = (state : GlobalState) => state.IssuesData.CompletedIssues\r\n","const ADD_ISSUE = \"ISSUES/ADD_ISSUE\"\r\nconst DELETE_ISSUE = \"ISSUES/DELETE_ISSUE\"\r\nconst CHANGE_ISSUE = \"ISSUES/CHANGE_ISSUE\"\r\nconst SET_ISSUES = \"ISSUES/SET_ISSUES\"\r\nconst SET_COMPLETED_ISSUES = \"ISSUES/SET_COMPLETED_ISSUES\"\r\n\r\nlet DefaultState = {\r\n    Issues: [\"Meeting\", \"QA\",\r\n        \"API Middleware\", \"Amendment\", \"Branding\", \"Profit increase\", \"Project Design\",\"Customer\"] as string[],\r\n    CompletedIssues: [\"Some Item 1 \",\"Some Item 2 \",\"Some Item 3 \",\"Some Item  4\",\"Some Item 5 \"] as  string[]\r\n}\r\n\r\ntype  DefaultIssuesState = typeof DefaultState\r\n\r\n\r\ntype TIssuesReducerActions = ReturnType<TAddIssue> | ReturnType<TDeleteIssue>\r\n    | ReturnType<TChangeIssue> | ReturnType<TSetIssues> | ReturnType<TSetCompletedIssues>\r\n\r\nconst IssuesReducer = (state = DefaultState, action: TIssuesReducerActions): DefaultIssuesState => {\r\n\r\n    const GetIssuesCopy = (): Array<string> => {\r\n        return JSON.parse(JSON.stringify(state.Issues))\r\n    }\r\n\r\n    switch (action.type) {\r\n        case SET_ISSUES :{\r\n            return {\r\n                ...state,\r\n                Issues: action.Issues\r\n            }\r\n        }\r\n        case SET_COMPLETED_ISSUES :{\r\n            return {\r\n                ...state,\r\n                CompletedIssues: action.CompletedIssues\r\n            }\r\n        }\r\n\r\n        case ADD_ISSUE : {\r\n            return {\r\n                ...state,\r\n                Issues: [...state.Issues, action.Issue]\r\n            }\r\n        }\r\n        case DELETE_ISSUE : {\r\n            return {\r\n                ...state,\r\n                Issues: action.From === \"Issue\"\r\n                    ? state.Issues.filter(Issue => Issue !== action.Issue)\r\n                    : state.Issues\r\n                ,\r\n                CompletedIssues: action.From === \"CompletedIssue\"\r\n                    ? state.CompletedIssues.filter(CompletedIssue => CompletedIssue !== action.Issue)\r\n                    : state.CompletedIssues\r\n            }\r\n        }\r\n        case CHANGE_ISSUE : {\r\n            let IssuesCopy = GetIssuesCopy()\r\n            IssuesCopy[IssuesCopy.findIndex((value) => value === action.OldIssue)] = action.NewIssue\r\n            return {\r\n                ...state,\r\n                Issues: IssuesCopy\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const  SetIssues = (Issues : string[]) =>{\r\n    return{type : SET_ISSUES, Issues } as const\r\n}\r\nexport type TSetIssues = typeof SetIssues\r\n\r\nexport const  SetCompletedIssues = (CompletedIssues : string[]) =>{\r\n    return{type : SET_COMPLETED_ISSUES, CompletedIssues } as const\r\n}\r\nexport type TSetCompletedIssues = typeof SetCompletedIssues\r\n\r\nexport const AddIssue = (Issue: string) => {\r\n    return {type: ADD_ISSUE, Issue} as const\r\n}\r\nexport type TAddIssue = typeof AddIssue\r\n\r\nexport const DeleteIssue = (Issue: string, From: \"Issue\" | \"CompletedIssue\") => {\r\n    return {type: DELETE_ISSUE, Issue, From} as const\r\n}\r\nexport type TDeleteIssue = typeof DeleteIssue\r\n\r\nexport const ChangeIssue = (OldIssue: string, NewIssue: string) => {\r\n    return {type: CHANGE_ISSUE, OldIssue, NewIssue} as const\r\n}\r\nexport type TChangeIssue = typeof ChangeIssue\r\n\r\nexport default IssuesReducer","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport TextField from \"@material-ui/core/TextField/TextField\"\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\"\r\n\r\nexport type TIssuesSelectInputProps = {\r\n    issues: string[]\r\n    onChange: (event: React.ChangeEvent<{ value: unknown; }>) => void\r\n    value?: string\r\n    width: number\r\n}\r\n\r\nexport const IssuesSelectInput: React.FC<TIssuesSelectInputProps> = (props) => {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            formControl: {\r\n                margin: theme.spacing(1),\r\n                width: props.width,\r\n            },\r\n            root: {\r\n                '& .MuiTextField-root': {\r\n                    margin: theme.spacing(1),\r\n                }\r\n                },\r\n            Item: {\r\n                color: \"#393a3a\",\r\n            }\r\n        })\r\n    )\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-select-issues\"\r\n                    select\r\n                    label=\"Issues\"\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth={true}\r\n                >\r\n                    {props.issues.map((issue) => (\r\n                        <MenuItem key={issue} value={issue}>\r\n                            {issue}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button.ee54e2c2.svg\";","import React from \"react\";\r\nimport LS from \"./LineStroke.module.css\"\r\n\r\nexport const LineStroke  = () => {\r\n    return ( <div className={LS.lineStroke}> </div>)\r\n}\r\n","import React, {Dispatch} from \"react\";\r\nimport WLDD from \"./WorklogDropDown.module.css\"\r\nimport {\r\n    CurrentDate, randomInteger, TAddToFavorite,\r\n    TAddWorklog, TBlockInfo, TWorkLog\r\n} from \"../../../Redux/WorkLogsReducer\";\r\nimport {TShowSnackBar} from \"../../../App\";\r\nimport {TComponentToDraw} from \"../../../globalTypes/Types\";\r\n\r\nexport type TWorklogDropDownProps = {\r\n    showDeleteModal: () => void\r\n    setWorklogToDelete: Dispatch<any>\r\n    addToFavorite: TAddToFavorite\r\n    playingWorklog: TWorkLog | null\r\n    componentToDraw: TComponentToDraw\r\n    addWorklog: TAddWorklog\r\n    blockInfo?: TBlockInfo\r\n    showSnackBar: TShowSnackBar\r\n    onHideMenu: () => void\r\n    worklogInfo: TWorkLog\r\n    nestingIsShowing: boolean\r\n    parentId : number | undefined\r\n}\r\nexport const WorkLogDropDown: React.FC<TWorklogDropDownProps> = (props) => {\r\n\r\n    const OnDeleteModalOpenContainer = () => {\r\n        if ((props.componentToDraw === \"FavoritesWorklogs\" && !props.playingWorklog)\r\n            || (props.blockInfo?.BlockCreatedDate === CurrentDate && !props.playingWorklog)) {\r\n            props.setWorklogToDelete({...props.worklogInfo,ParentId : props.parentId})\r\n            props.showDeleteModal()\r\n        }\r\n    }\r\n    const OnAddToFavorites = () => {\r\n        if (!props.playingWorklog?.id && props.componentToDraw === \"Worklogs\") {\r\n            if (props.parentId) props.addToFavorite(props.worklogInfo.id)\r\n            else props.addToFavorite(props.worklogInfo.id)\r\n            props.showSnackBar({\r\n                message: \"worklog added to favorites\", position: {horizontal: \"center\", vertical: \"top\"},\r\n                severity: \"success\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const OnDuplicateWorklog = () => {\r\n        if (!props.playingWorklog?.id && props.componentToDraw === \"Worklogs\") {\r\n            let CurrentWorklog: TWorkLog = {\r\n                ...props.worklogInfo,\r\n                TimerValue: \"00:00:00\",\r\n                id: randomInteger(0, 10000),\r\n            }\r\n            props.addWorklog(CurrentWorklog)\r\n        }\r\n    }\r\n\r\n\r\n    return (<div onMouseLeave={props.onHideMenu} className={WLDD.Container}>\r\n        <div onClick={props.onHideMenu} className={WLDD.ContentContainer}>\r\n\r\n            <div onClick={OnDuplicateWorklog} className={WLDD.ContainerEl}>\r\n                Duplicate\r\n            </div>\r\n\r\n            <div onClick={OnAddToFavorites} className={WLDD.ContainerEl}>\r\n                Add to Favorite\r\n            </div>\r\n\r\n            <div onClick={OnDeleteModalOpenContainer} className={WLDD.ContainerEl}>\r\n                Delete\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n","import React from \"react\";\r\nimport {WorkLog,TWorklogProps} from \"./WorkLog\";\r\n\r\nexport const NestingWorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    return <div className=\"NestedItem\">\r\n\r\n        {\r\n            props.worklogInfo.NestingItems?.map(NestingItem =>\r\n                <div key={NestingItem.id}>\r\n                    <WorkLog {...props}\r\n                             worklogInfo={NestingItem}\r\n                             parentId={props.worklogInfo.id}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport ArrowUp from \"../../../assets/imgs/arrow-up.svg\";\r\nimport {TWorkLog} from \"../../../Redux/WorkLogsReducer\";\r\nimport {useBooleanStateReturnType} from \"../../hooks/useBooleanState\";\r\n\r\ntype TWorkTimeProps ={\r\n    worklogInfo : TWorkLog\r\n    nestingItemsStatus : useBooleanStateReturnType\r\n}\r\nexport const WorkTime :React.FC<TWorkTimeProps> = (props)=><>\r\n    {\r\n        props.worklogInfo.NestingItems && props.worklogInfo.NestingItems.length > 0\r\n            ? <div className={WLS.NestingButtonPose}>\r\n                {\r\n                    props.nestingItemsStatus.isDisplayed\r\n                        ? <div onClick={props.nestingItemsStatus.Hide} className={WLS.NestingBG}>\r\n                            <img className={WLS.TwwContentImg} src={ArrowUp} alt=\"\"/>\r\n                        </div>\r\n\r\n                        : <div onClick={props.nestingItemsStatus.Show} className={WLS.NestingBG}>\r\n                                            <span\r\n                                                className={WLS.TwwContentText}>\r\n                                                    {props.worklogInfo.NestingItems.length}\r\n                                            </span>\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n            : props.worklogInfo.StartTime && props.worklogInfo.EndTime\r\n            ? <div className={WLS.WorkTime}>\r\n\r\n                <div className={WLS.StartTime}>\r\n                    {props.worklogInfo.StartTime}\r\n                </div>\r\n\r\n                <div className={WLS.Minus}>\r\n                    -\r\n                </div>\r\n\r\n                <div className={WLS.EndTime}>\r\n                    {props.worklogInfo.EndTime}\r\n                </div>\r\n\r\n            </div>\r\n            : <div/>\r\n    }\r\n</>","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport CP_ok from \"../../../assets/imgs/ok_cp.svg\";\r\nimport CP_warning from \"../../../assets/imgs/warning_cp.svg\";\r\nimport CP_danger from \"../../../assets/imgs/danger_cp.svg\";\r\n\r\ntype TStatusBarProps = {\r\n    isPlayingOrDisplayed: boolean\r\n    status : \"ok\" | \"warning\" | \"danger\"\r\n}\r\n\r\nexport const StatusBar: React.FC<TStatusBarProps> = (props) =>\r\n    <div className={props.isPlayingOrDisplayed\r\n        ? WLS.ColorPointPoseActive\r\n        : WLS.ColorPointPose}>\r\n        <img style={{transitionTimingFunction: \"ease-out\", transitionDuration: \"0.3s\"}}\r\n             src={props.status === \"ok\"\r\n                 ? CP_ok : props.status === \"warning\"\r\n                     ? CP_warning : props.status === \"danger\"\r\n                         ? CP_danger : undefined} alt=\"\"\r\n        />\r\n    </div>\r\n","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\ntype TIssueAndTaskProps ={\r\n    onSetWorklogToChange : ()=>void\r\n    issue : string | null | undefined\r\n    taskField : string | null\r\n}\r\nexport const IssueAndTask : React.FC<TIssueAndTaskProps> = (props) =>{\r\n\r\n    return  <div onClick={props.onSetWorklogToChange} className={WLS.WorklogContentContainer}>\r\n        <div className={WLS.Issue}>\r\n            {props.issue}\r\n        </div>\r\n        <div className={WLS.TaskField}>\r\n            {props.taskField}\r\n        </div>\r\n    </div>\r\n}","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\ntype TWorklogTimeProps = {\r\n    timerValue : string | null\r\n}\r\nexport const WorklogTime : React.FC<TWorklogTimeProps>=(props)=> <div className={WLS.TimerValueContainer}>\r\n    <div className={WLS.TimerValue}>{props.timerValue}</div>\r\n</div>","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport StopButton from \"../../../assets/imgs/stop_button.svg\";\r\nimport PlayButton from \"../../../assets/imgs/play-button.svg\";\r\n\r\ntype TWorklogControlButtonsProps = {\r\n    isPlaying : boolean\r\n    onStopButtonClicked : ()=> void\r\n    onPlayButtonClicked : ()=> void\r\n}\r\nexport const ControlButtons : React.FC<TWorklogControlButtonsProps> = (props) => <>\r\n    {props.isPlaying\r\n        ? <div className={WLS.ControlButtonsContainer} onClick={props.onStopButtonClicked}>\r\n            <img src={StopButton} alt=\"stop-button\"/>\r\n        </div>\r\n\r\n        : <div className={WLS.ControlButtonsContainer} onClick={props.onPlayButtonClicked}>\r\n            <img src={PlayButton} alt=\"play-button\"/>\r\n        </div>}\r\n        </>","import React from \"react\"\r\nimport WLS from \"../WorkLog.module.css\";\r\nimport WLMoreButtonBG from \"../../../assets/imgs/worklogMoreButtonBG.svg\";\r\nimport WLMoreButtonVertical from \"../../../assets/imgs/worklogMoreVertical.svg\";\r\ntype TOnHoverMoreButtonProps = {\r\n    isActive : boolean\r\n    onShow : ()=>void\r\n}\r\n\r\nexport const OnHoverMoreButton:React.FC<TOnHoverMoreButtonProps>=(props)=><div className=\"WLMoreContainer\">\r\n    <div className={props.isActive ? WLS.WorklogMoreButtonActive : WLS.WorklogMoreButton}>\r\n        <img src={WLMoreButtonBG} alt=\"\"/>\r\n    </div>\r\n\r\n    <div onMouseEnter={props.onShow} className={props.isActive ? WLS.WorklogMoreVerticalActive : WLS.WorklogMoreVertical}>\r\n        <img src={WLMoreButtonVertical} alt=\"more-vertical\"/>\r\n    </div>\r\n\r\n</div>","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {LineStroke} from \"../LineStroke/LineStroke\";\r\nimport {\r\n    CurrentDate,\r\n    TAddToFavorite,\r\n    TAddWorklog,\r\n    TBlockInfo,\r\n    TSetIsPlayingWorklogById,\r\n    TSetWorklogToChange,\r\n    TWorkLog\r\n} from \"../../Redux/WorkLogsReducer\";\r\nimport {WorkLogDropDown} from \"./DropDown/WorklogDropDown\";\r\nimport {NestingWorkLog} from \"./NestingWorkLog\";\r\nimport WorklogActiveBG from \"../../assets/imgs/ActiveWorklogBG.svg\"\r\nimport {TWorklogsContainerOwnProps} from \"../../globalTypes/Types\";\r\nimport {useBooleanState} from \"../hooks/useBooleanState\";\r\nimport {WorkTime} from \"./Worklog/WorkTime\";\r\nimport {StatusBar} from \"./Worklog/StatusBar\";\r\nimport {IssueAndTask} from \"./Worklog/IssueAndTask\";\r\nimport {WorklogTime} from \"./Worklog/Time\";\r\nimport {ControlButtons} from \"./Worklog/ControlButtons\";\r\nimport {OnHoverMoreButton} from \"./Worklog/OnHoverMoreButton\";\r\n\r\n\r\nexport type TWorklogOwnProps = {\r\n    setWorklogToDelete: Dispatch<SetStateAction<TWorkLog | null>>\r\n    worklogInfo: TWorkLog\r\n    parentId?: number\r\n    blockInfo?: TBlockInfo\r\n    setIsPlayingWorklogById: TSetIsPlayingWorklogById\r\n    playingWorklog: TWorkLog | null\r\n    setWorklogToChange: TSetWorklogToChange\r\n    addWorklog: TAddWorklog\r\n    addToFavorite: TAddToFavorite\r\n    showDeleteModal : ()=> void\r\n}\r\nexport type TWorklogProps = TWorklogsContainerOwnProps & TWorklogOwnProps\r\n\r\nexport const WorkLog: React.FC<TWorklogProps> = (props) => {\r\n\r\n    const dropDownMenuStatus = useBooleanState(false)\r\n    const nestingItemsStatus = useBooleanState(false)\r\n    const onStopButtonClicked = () => props.setIsPlayingWorklogById(false, props.worklogInfo.id)\r\n\r\n    const onPlayButtonClicked = () => {\r\n        if ((props.componentToDraw === \"FavoritesWorklogs\" && !props.playingWorklog)\r\n            || (props.blockInfo?.BlockCreatedDate === CurrentDate && !props.playingWorklog))\r\n            props.setIsPlayingWorklogById(true, props.worklogInfo.id, props.componentToDraw === \"FavoritesWorklogs\")\r\n    }\r\n\r\n    const onSetWorklogToChange = () => {\r\n        if ((props.componentToDraw === \"FavoritesWorklogs\" && !props.playingWorklog)\r\n            || (props.blockInfo?.BlockCreatedDate === CurrentDate && !props.playingWorklog)) {\r\n            let keys = [\"id\", \"StartTime\", \"TaskField\", \"TimerValue\", \"EndTime\"\r\n                , \"status\", \"NestingItems\", \"Issue\"]\r\n            let WorklogToChange = {} as TWorkLog\r\n            for (let i = 0; i < keys.length; i++) {\r\n                // @ts-ignore\r\n                WorklogToChange[`${(keys[i])}`] = props.worklogInfo[keys[i]]\r\n            }\r\n            props.componentToDraw === \"Worklogs\"\r\n                ? WorklogToChange.IsFavorites = false\r\n                : WorklogToChange.IsFavorites = true\r\n\r\n            props.setWorklogToChange(WorklogToChange)\r\n            props.openWorklogChangeModal()\r\n        }\r\n    }\r\n\r\n    return <div className={WLS.WorkLogs}>\r\n        <div className={props.playingWorklog?.id === props.worklogInfo.id || dropDownMenuStatus.isDisplayed\r\n            ? WLS.WorklogBlockContainerActive\r\n            : WLS.WorklogBlockContainer}>\r\n            <div className=\"WorklogBG\">\r\n\r\n                <img\r\n                    className={props.playingWorklog?.id === props.worklogInfo.id\r\n                    || dropDownMenuStatus.isDisplayed ? WLS.WorklogActiveBG : WLS.WorklogBG}\r\n                    src={WorklogActiveBG} alt=\"\"/>\r\n\r\n\r\n                <div className={WLS.WorklogBlock}>\r\n\r\n                    <WorkTime worklogInfo={props.worklogInfo} nestingItemsStatus={nestingItemsStatus}/>\r\n\r\n                    <StatusBar\r\n                        isPlayingOrDisplayed={props.playingWorklog?.id === props.worklogInfo.id || dropDownMenuStatus.isDisplayed}\r\n                        status={props.worklogInfo.status}/>\r\n\r\n                    <IssueAndTask onSetWorklogToChange={onSetWorklogToChange} issue={props.worklogInfo.Issue}\r\n                                  taskField={props.worklogInfo.TaskField}/>\r\n\r\n                    <WorklogTime timerValue={props.worklogInfo.TimerValue}/>\r\n\r\n                    <ControlButtons\r\n                        isPlaying={!!(props.playingWorklog && props.playingWorklog.id === props.worklogInfo.id)}\r\n                        onStopButtonClicked={onStopButtonClicked}\r\n                        onPlayButtonClicked={onPlayButtonClicked}/>\r\n\r\n                    <OnHoverMoreButton\r\n                        isActive={props.playingWorklog?.id === props.worklogInfo.id || dropDownMenuStatus.isDisplayed}\r\n                        onShow={dropDownMenuStatus.Show}/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={props.playingWorklog?.id === props.worklogInfo.id\r\n                ? WLS.WLlinestrokeActive\r\n                : WLS.WLlinestroke}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </div>\r\n        {\r\n            dropDownMenuStatus.isDisplayed && <WorkLogDropDown onHideMenu={dropDownMenuStatus.Hide}\r\n                                                               nestingIsShowing={nestingItemsStatus.isDisplayed}\r\n                                                               showSnackBar={props.showSnackBar}\r\n                                                               playingWorklog={props.playingWorklog}\r\n                                                               addWorklog={props.addWorklog}\r\n                                                               componentToDraw={props.componentToDraw}\r\n                                                               setWorklogToDelete={props.setWorklogToDelete}\r\n                                                               showDeleteModal={props.showDeleteModal}\r\n                                                               addToFavorite={props.addToFavorite}\r\n                                                               worklogInfo={props.worklogInfo}\r\n                                                               blockInfo={props.blockInfo}\r\n                                                               parentId={props.parentId}\r\n            />}\r\n\r\n        {\r\n            nestingItemsStatus.isDisplayed && <NestingWorkLog {...props} />\r\n        }\r\n    </div>\r\n}\r\n","import React from \"react\";\r\n//@ts-ignore\r\nimport {Progress} from 'bootstrap-4-react';\r\n\r\nexport type TProgressBarProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | string\r\n}\r\n\r\nconst ProgressBar: React.FC<TProgressBarProps> = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Progress  style={{ width: \"100px\", height: \"8px\", borderRadius : \"20px\"}} >\r\n                <Progress.Bar  min=\"0\" max=\"100\" now={props.status === \"ok\" ?\r\n                    \"90\" : props.status === \"warning\"\r\n                        ? \"50\" : props.status === \"danger\"\r\n                            ? \"25\" : null}\r\n\r\n                              bg={props.status === \"ok\" ?\r\n                                  \"success\" : props.status === \"warning\"\r\n                                      ? \"warning\" : props.status === \"danger\"\r\n                                          ? \"danger\" : null}/>\r\n            </Progress>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProgressBar)","import {TSnackBarOptions} from \"../../Components/SnackBar/SnackBar\";\n\nconst CreateSnackBarOptions =(severity : \"error\" | \"info\" | \"warning\" | \"success\",message : string)=>(\n    {\n        message,\n        severity,\n        position : {\n            vertical : \"bottom\",\n            horizontal : \"right\"\n        }\n    } as TSnackBarOptions\n)\nexport default CreateSnackBarOptions","import React from \"react\";\r\nimport FS from \"./WorklogInfo.module.css\"\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport {LineStroke} from \"../../LineStroke/LineStroke\";\r\nimport {CurrentDate, TBlockInfo, TSetWorklogStatus, TWorkLog} from \"../../../Redux/WorkLogsReducer\";\r\nimport {TShowSnackBar} from \"../../../App\";\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport CreateSnackBarOptions from \"../../../assets/secondary/CreateSnackbarOptions\";\r\n\r\n\r\nexport type TWorklogInfoProps = {\r\n    dateOfCreation: string | null\r\n    summaryTime: string | null\r\n    summaryStatus: \"ok\" | \"danger\" | \"warning\" | string\r\n    blockInfo: TBlockInfo\r\n    worklogs: Array<TWorkLog>\r\n    showSnackBar: TShowSnackBar\r\n    setWorklogStatus: TSetWorklogStatus\r\n}\r\n\r\nexport const WorklogInfo: React.FC<TWorklogInfoProps> = (props) => {\r\n\r\n    const OnSendWorklogData = (): void => {\r\n        props.worklogs.map(Worklog => {\r\n            if (!Worklog.Issue || Worklog.Issue.length <= 0) {\r\n                props.showSnackBar(CreateSnackBarOptions(\"error\", \"Issue does not exist\"))\r\n                props.setWorklogStatus({target: \"worklog\", status: \"danger\", id: Worklog.id})\r\n            } else if (!Worklog.TaskField || Worklog.TaskField.length <= 0) {\r\n                props.showSnackBar(CreateSnackBarOptions(\"warning\", \"Please, enter the worklog name\"))\r\n                props.setWorklogStatus({target: \"worklog\", status: \"warning\", id: Worklog.id})\r\n            } else if (!Worklog.TimerValue || !Worklog.StartTime || !Worklog.EndTime) {\r\n                props.showSnackBar(CreateSnackBarOptions(\"error\", \"something goes wrong\"))\r\n            } else {\r\n                props.setWorklogStatus({target: \"worklog\", status: \"ok\", id: Worklog.id})\r\n                props.showSnackBar(CreateSnackBarOptions(\"success\", \"your worklog successfully logged\"))\r\n            }\r\n        })\r\n\r\n        if (props.worklogs.every(Worklog => Worklog.EndTime && Worklog.StartTime && Worklog.TimerValue\r\n            && Worklog.TaskField && Worklog.Issue)) {\r\n            // let ObjToSend: TSendWorklogsData = {\r\n            //     WorkLogsBlocks: {\r\n            //         BlockInfo: props.BlockInfo,\r\n            //         Worklogs: props.Worklogs\r\n            //     }\r\n            // }\r\n            //props.SendWorklogBlockThunk(ObjToSend)\r\n            props.setWorklogStatus({target: \"worklogblock\", status: \"ok\", id: props.blockInfo.id})\r\n            props.showSnackBar(CreateSnackBarOptions(\"success\", \"your worklog successfully logged\"))\r\n        } else {\r\n            props.showSnackBar(CreateSnackBarOptions(\"error\", \"Issue does not exist\"))\r\n            props.setWorklogStatus({target: \"worklogblock\", status: \"danger\", id: props.blockInfo.id})\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={FS.SummaryWorklogInfo}>\r\n\r\n                <div className={FS.DateBlockContainer}>\r\n                    {props.dateOfCreation}\r\n                </div>\r\n\r\n                <div className={FS.statusContainer}>\r\n                    <div className={FS.DateTime}>\r\n\r\n                        <div>\r\n                            {props.summaryTime}\r\n                        </div>\r\n\r\n                        <div className={FS.Progress}>\r\n                            <ProgressBar status={props.summaryStatus}/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        props.blockInfo.BlockCreatedDate === CurrentDate\r\n                            ? <BackupIcon style={{cursor: \"pointer\"}} color={\"primary\"} fontSize={\"large\"}\r\n                                          onClick={OnSendWorklogData}\r\n                                          className={FS.DownloadIcon}/>\r\n\r\n                            : <BackupIcon color={\"disabled\"} fontSize={\"large\"} className={FS.DownloadIcon}/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={FS.WLlineStrokeContainer}>\r\n                <LineStroke/>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {CustomizedButton} from \"../CustomElements/CustomizedButton/CustomizedButton\";\r\nimport Dialog from \"@material-ui/core/Dialog/Dialog\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\"\r\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\"\r\nimport Grid from \"@material-ui/core/Grid/Grid\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport type TDeleteWorklogConfirmModalProps = {\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    onSubmit: () => void\r\n}\r\n\r\nexport const DeleteWorklogConfirmModal: React.FC<TDeleteWorklogConfirmModalProps> = (props) => {\r\n    return <>\r\n        {\r\n            props.isOpen && <Dialog\r\n                open={props.isOpen}\r\n                onClose={props.onClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">confirm window</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n\r\n                        <Grid item style={{fontSize: \"1.275rem\", fontWeight: 600}}>\r\n                            Are you sure you want to delete the worklog?\r\n                        </Grid>\r\n\r\n                        <Grid style={{paddingTop: \"2rem\", paddingBottom: \"2rem\"}} item>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-around\">\r\n\r\n                                <Grid item>\r\n\r\n                                    <CustomizedButton bgColor={\"teal\"} text={\"delete\"} onClick={props.onSubmit}\r\n                                                      variant={\"contained\"} fontSize={14} startIcon={<DeleteIcon/>}/>\r\n\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n\r\n                                    <CustomizedButton bgColor={\"grey\"} text={\"go back\"} onClick={props.onClose}\r\n                                                      variant={\"contained\"} fontSize={14} fontColor={\"common\"}/>\r\n\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        }\r\n    </>\r\n}\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport {WorkLog} from \"./WorkLog\";\r\nimport {WorklogInfo} from \"./WorklogInfo/WorklogInfo\";\r\nimport WLS from \"./WorkLog.module.css\"\r\nimport {useBooleanState} from \"../hooks/useBooleanState\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {getFavoritesWorklog, getPlayingWorklog, getWorklogsBlocks} from \"../Selectors/WorklogsSelectors\"\r\nimport {useWorklogsFunctions} from \"../hooks/useWorklogsFunctions\"\r\nimport {TWorklogsContainerOwnProps} from \"../../globalTypes/Types\"\r\nimport {DeleteWorklogConfirmModal} from \"../DeleteConfirmModal/DeleteConfirmModal\";\r\nimport {TWorkLog} from \"../../Redux/WorkLogsReducer\";\r\n\r\n\r\nexport const WorkLogsBlock: React.FC<TWorklogsContainerOwnProps> = (props) => {\r\n    const worklogsBlocks = useSelector(getWorklogsBlocks)\r\n    const playingWorklog = useSelector(getPlayingWorklog)\r\n    const favoritesWorklogs = useSelector(getFavoritesWorklog)\r\n\r\n    const WFS = useWorklogsFunctions()\r\n\r\n    const deleteModalStatus = useBooleanState(false)\r\n    const [worklogToDelete, setWorklogToDelete] = useState<TWorkLog | null>(null)\r\n    const onDeleteWorklog = () => {\r\n        if (worklogToDelete) {\r\n            props.componentToDraw === \"Worklogs\"\r\n                ? WFS.deleteWorklog(worklogToDelete.id, worklogToDelete.ParentId)\r\n                : WFS.deleteFromFavorites(worklogToDelete.id)\r\n            deleteModalStatus.Hide()\r\n        }\r\n    }\r\n\r\n\r\n    return <div className=\"WorklogsBlock\">\r\n        {\r\n            props.componentToDraw === \"Worklogs\"\r\n                ? worklogsBlocks.map(WorklogBlock => <div key={WorklogBlock.BlockInfo.id} className=\"Worklogs\">\r\n                    <div className={WLS.WorklogInfoContainer}>\r\n                        <WorklogInfo dateOfCreation={WorklogBlock.BlockInfo.BlockCreatedDate}\r\n                                     summaryTime={WorklogBlock.BlockInfo.SummaryTime}\r\n                                     summaryStatus={WorklogBlock.BlockInfo.SummaryStatus}\r\n                                     worklogs={WorklogBlock.Worklogs}\r\n                                     blockInfo={WorklogBlock.BlockInfo}\r\n                                     showSnackBar={props.showSnackBar}\r\n                                     setWorklogStatus={WFS.setWorklogStatus}/>\r\n                    </div>\r\n                    {\r\n                        WorklogBlock.Worklogs.map(Worklog => <div key={Worklog.id} className=\"WorklogContainer\">\r\n                                <WorkLog\r\n                                    {...props}\r\n                                    worklogInfo={Worklog}\r\n                                    showDeleteModal={deleteModalStatus.Show}\r\n                                    setWorklogToDelete={setWorklogToDelete}\r\n                                    blockInfo={WorklogBlock.BlockInfo}\r\n                                    setWorklogToChange={WFS.setWorklogToChange}\r\n                                    setIsPlayingWorklogById={WFS.setIsPlayingWorklogById}\r\n                                    playingWorklog={playingWorklog}\r\n                                    addWorklog={WFS.addWorklog}\r\n                                    addToFavorite={WFS.addToFavorite}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                )\r\n                : <div className=\"FavoritesWorklogs\">\r\n                    {\r\n                        favoritesWorklogs.length > 0 && favoritesWorklogs.map(\r\n                            FavoritesWorklog => <div key={FavoritesWorklog.id} className=\"FavoritesWorklogContainer\">\r\n                                <WorkLog\r\n                                    {...props}\r\n                                    worklogInfo={FavoritesWorklog}\r\n                                    showDeleteModal={deleteModalStatus.Show}\r\n                                    setWorklogToChange={WFS.setWorklogToChange}\r\n                                    setWorklogToDelete={setWorklogToDelete}\r\n                                    setIsPlayingWorklogById={WFS.setIsPlayingWorklogById}\r\n                                    playingWorklog={playingWorklog}\r\n                                    addWorklog={WFS.addWorklog}\r\n                                    addToFavorite={WFS.addToFavorite}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n        }\r\n        <DeleteWorklogConfirmModal isOpen={deleteModalStatus.isDisplayed} onClose={deleteModalStatus.Hide}\r\n                                   onSubmit={onDeleteWorklog}/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineStroke\":\"LineStroke_lineStroke__2pI3T\"};","module.exports = __webpack_public_path__ + \"static/media/ActiveWorklogBG.215a57fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-up.0dc941bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_cp.08ca5cee.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning_cp.c2d1e025.svg\";","module.exports = __webpack_public_path__ + \"static/media/danger_cp.49659e50.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop_button.1eb1b96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-button.f9fec951.svg\";","module.exports = __webpack_public_path__ + \"static/media/worklogMoreButtonBG.622f8f21.svg\";","module.exports = __webpack_public_path__ + \"static/media/worklogMoreVertical.37dfcf19.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_worklog_button_shadowed.6b0a0400.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AuthModal_modal__2EZbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pathErr_wrapper__18X9m\"};","module.exports = __webpack_public_path__ + \"static/media/calendar.daeb1a9d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlButtons_container__2JiDQ\"};","import {useState} from \"react\"\r\n\r\ntype defFunc = ()=> void\r\nexport type useBooleanStateReturnType = {isDisplayed : boolean,Show : defFunc,Hide : defFunc,Switch : defFunc}\r\nexport const useBooleanState = (initialValue : boolean) : useBooleanStateReturnType => {\r\n    let [isDisplayed,SetIsOpen] =useState(initialValue)\r\n    const Show = ()=>SetIsOpen(true)\r\n    const Hide = ()=>SetIsOpen(false)\r\n    const Switch = ()=> SetIsOpen(!isDisplayed)\r\n    return {isDisplayed,Show,Hide,Switch}\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimetrackingHeaderContainer\":\"TimeTracking_TimetrackingHeaderContainer__ON8us\",\"TTLayout\":\"TimeTracking_TTLayout__3veO9\",\"TTContent\":\"TimeTracking_TTContent__EuSq7\",\"TTMainContentRoot\":\"TimeTracking_TTMainContentRoot__1SdVC\",\"TimetrackingHeader\":\"TimeTracking_TimetrackingHeader__2_M3q\",\"TimeTrackingLogo\":\"TimeTracking_TimeTrackingLogo__3Gymw\",\"MoreIconSizeContainer\":\"TimeTracking_MoreIconSizeContainer__CtFXl\",\"MoreIconSize\":\"TimeTracking_MoreIconSize__3hJsc\",\"NewWorklogContainer\":\"TimeTracking_NewWorklogContainer__1Htpq\",\"NewWorklog\":\"TimeTracking_NewWorklog__3l1DI\",\"NewWorklogButtonSize\":\"TimeTracking_NewWorklogButtonSize__1ylBg\",\"NewWorklogButtonPose\":\"TimeTracking_NewWorklogButtonPose__MG6O9\",\"NewWorklogButtonDescriptionContainer\":\"TimeTracking_NewWorklogButtonDescriptionContainer__1V2I5\",\"NewWorklogButtonDescription\":\"TimeTracking_NewWorklogButtonDescription__29EUZ\",\"TTHorizStrokePose\":\"TimeTracking_TTHorizStrokePose__1WjLF\",\"strokeVert\":\"TimeTracking_strokeVert__yTsLP\"};","import React from 'react';\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { green, purple,blue,grey,red,common,teal,yellow,deepOrange,orange,blueGrey,cyan,indigo} from '@material-ui/core/colors'\r\n\r\ninterface ColorType {\r\n    [key : string] : string\r\n}\r\ntype color = \"green\" | \"purple\" | \"grey\" | \"red\" | \"blue\" | \"common\"\r\n    | \"teal\" | \"yellow\"| \"white\" | \"indigo\" |\"cyan\" |\"blueGrey\" | \"orange\" | \"deepOrange\"\r\n\r\ntype TCustomizedButtonProps = {\r\n    bgColor? : color\r\n    text : string\r\n    variant  : \"outlined\" | \"contained\" | \"text\"\r\n    fontSize : number | string\r\n    fontColor ? : color\r\n    startIcon ? : JSX.Element\r\n    width ?: number\r\n    disabled ?: boolean\r\n    onClick?: (data : any)=>void\r\n}\r\n\r\nconst findColorObject = (colorName:string) : ColorType  =>{\r\n    switch (colorName) {\r\n        case \"green\" : return green\r\n        case \"purple\" : return purple\r\n        case \"grey\" : return grey\r\n        case \"red\" : return red\r\n        case \"blue\" : return blue\r\n        case \"teal\" : return teal\r\n        case \"common\" : return common\r\n        case \"yellow\" : return yellow\r\n        case \"deepOrange\" : return deepOrange\r\n        case \"orange\" : return orange\r\n        case \"blueGrey\" : return blueGrey\r\n        case \"cyan\" : return cyan\r\n        case \"indigo\" : return indigo\r\n        default : return common\r\n    }\r\n\r\n}\r\n\r\nexport const  CustomizedButton : React.FC<TCustomizedButtonProps>  = (props) => {\r\n\r\n    const useStyles = makeStyles((theme) =>\r\n        createStyles({\r\n            margin: {\r\n                margin: theme.spacing(1),\r\n                width : props.width && props.width\r\n            },\r\n        }),\r\n    )\r\n\r\n    const color = findColorObject(props.bgColor ?props.bgColor :\"white\")\r\n    const ColorButton = withStyles((theme) => ({\r\n        root: {\r\n            color: props.fontColor\r\n                ? props.fontColor === \"white\" ? red[50] :findColorObject(props.fontColor)[500]\r\n                :theme.palette.getContrastText(color[500]),\r\n            backgroundColor: color[500],\r\n            fontSize : props.fontSize,\r\n            '&:hover': {\r\n                backgroundColor: color[700],\r\n            },\r\n            borderRadius : \"0.6rem\"\r\n        },\r\n    }))(Button)\r\n\r\n    const classes = useStyles();\r\n    return <ColorButton  disabled={props.disabled} onClick={props.onClick}\r\n                         color={\"inherit\"} startIcon={props.startIcon ? props.startIcon : undefined} variant={props.variant}\r\n                         className={classes.margin}>\r\n        {props.text}\r\n    </ColorButton>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SummaryWorklogInfo\":\"WorklogInfo_SummaryWorklogInfo__4-4NV\",\"DateBlockContainer\":\"WorklogInfo_DateBlockContainer__1o7Kx\",\"DownloadIcon\":\"WorklogInfo_DownloadIcon__3DNZg\",\"statusContainer\":\"WorklogInfo_statusContainer__k-PSn\",\"DateTime\":\"WorklogInfo_DateTime__3Z9a0\",\"Progress\":\"WorklogInfo_Progress__25Rn6\",\"WLlineStrokeContainer\":\"WorklogInfo_WLlineStrokeContainer__1Sgro\"};","import React from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport HS from \"./NavBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport avatar from \"../../assets/imgs/avatar.jpg\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n            marginLeft: \"5%\",\r\n            color: \"#FFFFFF\",\r\n            cursor: \"pointer\"\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n        },\r\n        sectionMobile: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n    }),\r\n);\r\ntype TMaterialNavProps = {\r\n    openUserProfile : ()=> void\r\n    onUnAuth : ()=>void\r\n}\r\n const MaterialNav : React.FC<TMaterialNavProps> = (props) =>{\r\n    const classes = useStyles();\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleMobileMenuClose = () => setMobileMoreAnchorEl(null)\r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setMobileMoreAnchorEl(event.currentTarget)\r\n    const LogOut = ()=>{\r\n        localStorage.setItem(\"IsAuth\",\"false\")\r\n        props.onUnAuth()\r\n    }\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton color=\"primary\">\r\n                    <SettingsIcon/>\r\n                </IconButton>\r\n\r\n                Settings\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton onClick={LogOut} color=\"primary\">\r\n                    <ExitToAppIcon/>\r\n                </IconButton>\r\n                Logout\r\n            </MenuItem>\r\n            <MenuItem     onClick={props.openUserProfile} >\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"primary\"\r\n                >\r\n                    <Avatar alt={\"user avatar\"} src={avatar}/>\r\n                </IconButton>\r\n                Profile\r\n            </MenuItem>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <div className={HS.NavLinks}>\r\n                        <div className={HS.item}>\r\n                            <NavLink to=\"/Home/All\">\r\n                                Worklogs\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div className={HS.item}>\r\n                            <NavLink to=\"/Issues/\">\r\n                                Issues\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={classes.grow}/>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Tooltip title=\"Settings\" arrow placement=\"bottom\">\r\n                            <IconButton  color=\"inherit\">\r\n                                <SettingsIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Logout\" arrow placement=\"bottom\">\r\n                            <IconButton onClick={LogOut} color=\"inherit\">\r\n                                <ExitToAppIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Profile\" arrow placement=\"bottom\">\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"inherit\"\r\n                                onClick={props.openUserProfile}\r\n                            >\r\n                                <Avatar alt={\"user avatar\"} src={avatar}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon/>\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n        </div>\r\n    );\r\n}\r\nexport default  React.memo(MaterialNav,(prevProps,nextProps)=>{\r\n    return true\r\n})","import React, {useState, useEffect} from 'react';\r\nimport TS from \"./Timer.module.css\"\r\nimport PlayButton from \"@material-ui/icons/PlayCircleFilled\"\r\nimport {ToFullTime} from \"../../assets/secondary/CalculateTime\"\r\nimport {CustomInput} from \"../CustomElements/CustomInput/CustomInput\";\r\nimport {IssuesSelectInput} from \"../Issues/Inputs/IssuesSelectInput\";\r\nimport {useInput} from \"../hooks/useInput\";\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport {red} from \"@material-ui/core/colors\"\r\nimport {useBooleanState} from \"../hooks/useBooleanState\";\r\n\r\nexport const Timer = (props) => {\r\n    const [seconds, setSeconds] = useState(Number.parseInt(props.playingWorklog.TimerValue.substr(6, props.playingWorklog.TimerValue.length)))\r\n    const [minutes, setMinutes] = useState(Number.parseInt(props.playingWorklog.TimerValue.substr(3, props.playingWorklog.TimerValue.length - 6)))\r\n    const [hours, setHours] = useState(Number.parseInt(props.playingWorklog.TimerValue.substr(0, props.playingWorklog.TimerValue.length - 6)))\r\n    const timerStatusData = useBooleanState(true)\r\n    const worklogInput= useInput(props.playingWorklog.TaskField ? props.playingWorklog.TaskField : \"\")\r\n    const issueInput = useInput(props.playingWorklog.Issue ? props.playingWorklog.Issue : \"\")\r\n\r\n    const onStopTimer = () => {\r\n        props.openWorklogChangeModal()\r\n        timerStatusData.Hide()\r\n        let TimerData = {\r\n            TimerValue: ToFullTime(hours) + \":\" + ToFullTime(minutes) + \":\" + ToFullTime(seconds),\r\n            TimerIssue: issueInput.value ? issueInput.value : props.playingWorklog?.Issue,\r\n            TimerTaskField: worklogInput.value ? worklogInput.value : props.playingWorklog?.TaskField,\r\n        }\r\n        props.setTimerData(TimerData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStatusData.isDisplayed) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                if (seconds > 59) {\r\n                    setMinutes(minutes => minutes + 1)\r\n                    setSeconds(0)\r\n                }\r\n                if (minutes > 59) {\r\n                    setHours(hours => hours + 1)\r\n                    setMinutes(0)\r\n                }\r\n                if (hours > 23) {\r\n                    setHours(0)\r\n                    clearInterval(interval);\r\n                }\r\n            }, 1000);\r\n        } else if (timerStatusData.isDisplayed && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [ timerStatusData.isDisplayed,seconds, minutes, hours]);\r\n\r\n    return (\r\n\r\n        <div className={TS.TimeRContainer}>\r\n            <CustomInput {...worklogInput.bind}\r\n                         label={\"Task Field\"}\r\n                         placeholder={\"Please, enter the task\"}\r\n                         width={250}\r\n            />\r\n\r\n            <div style={{marginTop : \" 10px\"}} className={\"IssuesSelectinput\"}>\r\n                <IssuesSelectInput  issues={props.issues}\r\n                                    {...issueInput.bind}\r\n                                    width={250}\r\n                />\r\n            </div>\r\n\r\n            <div className={TS.Timer}>\r\n                {ToFullTime(hours)}:{ToFullTime(minutes)}:{ToFullTime(seconds)}\r\n            </div>\r\n\r\n            <div className={TS.TimerControlButtonsContainer}>\r\n                <div className={TS.TimerControlButtons}>\r\n                    <div onClick={onStopTimer}>\r\n                        <StopIcon style={{marginTop : \"5px\", width: \"50px\",\r\n                            height: \"50px\",backgroundColor : red[400],borderRadius : \"100%\",color : red[50]}} />\r\n                    </div>\r\n                    <div style={{paddingLeft : \"5px\"}} className=\"controlButtons\" onClick={timerStatusData.Switch}>\r\n                        {timerStatusData.isDisplayed ?\r\n                            <PauseCircleFilledIcon style={{width: \"60px\", height: \"60px\"}} color={\"primary\"} />\r\n                            : <PlayButton style={{width: \"60px\", height: \"60px\"}} color={\"primary\"}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React from \"react\"\r\nimport TTS from \"./TimeTracking.module.css\";\r\nimport NewWorklogButtonShadowed from \"../../assets/imgs/new_worklog_button_shadowed.svg\";\r\nimport NewWorklogButton from \"../../assets/imgs/new_worklog_button.svg\";\r\n\r\ntype TUnActiveTimerProps = {\r\n    favoritesIsClicked: boolean\r\n    onAddEmptyWorklog : ()=>void\r\n}\r\nexport const UnActiveTimer: React.FC<TUnActiveTimerProps> = (props) => {\r\n    return (\r\n        <div className={TTS.TTMainContentRoot}>\r\n            <div className={TTS.NewWorklogContainer}>\r\n                <div className={TTS.NewWorklog}>\r\n\r\n                    <div onClick={!props.favoritesIsClicked\r\n                        ? props.onAddEmptyWorklog\r\n                        : undefined}\r\n                         className={TTS.NewWorklogButtonPose}>\r\n\r\n                        <img className={TTS.NewWorklogButtonSize}\r\n                             src={props.favoritesIsClicked\r\n                                 ? NewWorklogButtonShadowed\r\n                                 : NewWorklogButton\r\n                             }\r\n                             alt=\"new_worklog_button\"/>\r\n                    </div>\r\n\r\n                    <div className={TTS.NewWorklogButtonDescriptionContainer}>\r\n                        <div className={TTS.NewWorklogButtonDescription}>\r\n                            new worklog\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={TTS.TTHorizStrokePose}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport TTS from \"./TimeTracking.module.css\"\r\nimport {Timer} from \"../Timer/Timer\"\r\nimport {TTimerData} from \"../../Redux/WorkLogsReducer\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {getIssues} from \"../Selectors/IssuesSelectors\";\r\nimport {getPlayingWorklog} from \"../Selectors/WorklogsSelectors\";\r\nimport {useWorklogsFunctions} from \"../hooks/useWorklogsFunctions\";\r\nimport {UnActiveTimer} from \"./UnActiveTimer\";\r\n\r\nexport type TTimeTrackingProps = {\r\n    favoritesIsClicked: boolean\r\n    openWorklogChangeModal: () => void\r\n    setTimerData: (TimerData: TTimerData) => void\r\n}\r\n\r\nexport const TimeTracking: React.FC<TTimeTrackingProps> = (props) => {\r\n    const issues = useSelector(getIssues)\r\n    const playingWorklog = useSelector(getPlayingWorklog)\r\n    const WFS = useWorklogsFunctions()\r\n    const OnAddEmptyWorklog = () => WFS.addWorklog()\r\n\r\n    return (<div className={TTS.TTLayout}>\r\n\r\n            <div className={TTS.strokeVert}/>\r\n\r\n            <div className={TTS.TTContent}>\r\n\r\n                <div className={TTS.TimetrackingHeaderContainer}>\r\n                    <div className={TTS.TimetrackingHeader}>\r\n\r\n                        <div className={TTS.TimeTrackingLogo}>\r\n                            Time tracking\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {playingWorklog\r\n                    ? <Timer setIsPlayingWorklogById={WFS.setIsPlayingWorklogById}\r\n                             playingWorklog={playingWorklog}\r\n                             openWorklogChangeModal={props.openWorklogChangeModal}\r\n                             setTimerData={props.setTimerData}\r\n                             changeWorklog={WFS.changeWorklog}\r\n                             issues={issues}\r\n                    />\r\n                    : <UnActiveTimer favoritesIsClicked={props.favoritesIsClicked}\r\n                                     onAddEmptyWorklog={OnAddEmptyWorklog}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport EVS from \"./ElementsValidators.module.css\"\nimport {Field} from \"redux-form\";\nimport { makeStyles } from '@material-ui/core/styles/index';\nimport TextField from '@material-ui/core/TextField/index';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            color :\"#393939\"\n        }\n    },\n}));\n\nexport const FormInput = ({input,meta,...props}) =>{\n    const classes = useStyles();\n    return <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\n        <TextField  className={classes.root}  placeholder={props.placeholder}\n                    variant=\"outlined\" {...input} {...props}/>\n        {meta.error && meta.touched ?   <div style={{padding : \"1rem\",color : \"#b20400\"}}> {meta.error}</div> : \"\"}\n    </div>\n}\n\nexport const CreateField = (placeholder,name,validators,component,props ={},text =\"\") => {\n    return <div>\n        <Field placeholder={placeholder} name={name} validate={validators}\n               component={component}  {...props}/> {text}\n    </div>\n}","import React from \"react\"\n\nexport const required = (value) => {\n    if (value) {\n        return undefined\n    } else return <div>\n        This field is required\n    </div>\n}\n\nexport const PhoneNumber =(value)=>{\n    if(/^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/.test(value)) return undefined\n    else return <div>\n        Please,enter the correct phone number\n    </div>\n}\nexport const Email = (value)=>{\n    if(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\]) |(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value)) return undefined\n    else return <div>Please,enter the correct email </div>\n}\nexport const PassMinLength = (value)=>{\n    if(value.length < 6) return <div> Password must be more then 6 symbols! </div>\n    else return undefined\n}\n\nexport const MaxLengthCreator = (MaxLengthValue) => (value) => {\n    if (value && value.length > MaxLengthValue) {\n        return `Maximal length is a ${MaxLengthValue} symbols`\n    } else return undefined\n}","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {CustomizedButton} from \"../../CustomElements/CustomizedButton/CustomizedButton\"\nimport {CreateField, FormInput} from \"../../../assets/utils/ValidartorsComponents/ElementsValidators\"\nimport {required, Email} from \"../../../assets/utils/validators\"\nimport {reduxForm, InjectedFormProps} from \"redux-form\"\nimport {TLoginFormData} from \"./SignIn\";\n\nexport type TOwnProps = {\n    componentIsSignUp: () => void\n    authErr: string[]\n}\n\nconst SignInForm: React.FC<InjectedFormProps<TLoginFormData, TOwnProps> & TOwnProps> = (props) => {\n    return <form style={{paddingTop: \"1.5rem\", paddingRight: \"2rem\", paddingLeft: \"2rem\"}} onSubmit={props.handleSubmit}\n                 className={\"SignInFormContainer\"}>\n\n        <div style={{fontSize: \"1.512rem\", fontWeight: 500}} className=\"SignInFormHeader\">\n            Sign in\n        </div>\n\n\n        {\n            props.authErr.length > 0 &&\n            <div style={{color: \"#ea1f09\", fontSize: \"1.275rem\", padding: \"1rem\"}} className=\"SubmitAuthFormErr\">\n                <span>\n                    {props.authErr[0]}\n                </span>\n            </div>\n        }\n\n        <div className=\"SignInEmailInput\">\n            {CreateField(\"Enter your email\", \"email\", [required, Email],\n                FormInput, {label: \"email\", fullWidth: true, helperText: \"test@g.com - for tests\"})}\n        </div>\n\n        <div className=\"SignInPassWordInput\">\n            {CreateField(\"Enter your password\", \"password\", [required],\n                FormInput, {label: \"password\", type: \"password\", fullWidth: true, helperText: \"test - for tests\"})}\n        </div>\n\n        <div style={{paddingTop: \"1rem\"}} className=\"SignInControlButton\">\n            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n\n                <Grid item>\n                    <CustomizedButton onClick={props.handleSubmit} text=\"enter\"\n                                      variant=\"contained\" bgColor=\"green\"\n                                      fontSize=\"1.11rem\"/>\n                </Grid>\n\n                <Grid item>\n                    <CustomizedButton onClick={props.componentIsSignUp} text=\"sign up\"\n                                      variant=\"contained\" bgColor=\"blue\" fontSize=\"1.11rem\"/>\n                </Grid>\n            </Grid>\n        </div>\n\n        {props.error\n            ?\n            <div style={{paddingTop: \"2rem\", paddingLeft: \"1.12rem\", fontSize: \"1.125rem\", color: \"#ea1f09\"}}>\n                {props.error}\n            </div>\n            : null\n        }\n    </form>\n}\n\nexport const SignInFormRedux = reduxForm<TLoginFormData, TOwnProps>({\n    form: 'loginForm',\n})(SignInForm);","import React,{useState} from \"react\"\r\nimport {SignInFormRedux} from \"./SignInForm\"\r\nimport {useHistory} from 'react-router-dom'\r\n\r\ntype TSignInProps={\r\n    componentIsSignUp:()=>void\r\n    onAuth:()=>void\r\n}\r\nexport type TLoginFormData={\r\n    email:string,\r\n    password : string\r\n}\r\nexport const SignIn:React.FC<TSignInProps> = props => {\r\n    const history=useHistory()\r\n    const [authErr,setAuthErr] = useState<string[]>([])\r\n    const handleSubmit = (formData : TLoginFormData) => {\r\n        if (formData.email === \"test@g.com\" && formData.password === \"test\") {\r\n            localStorage.setItem(\"IsAuth\", \"true\")\r\n            props.onAuth()\r\n            history.replace(\"/\")\r\n        }else setAuthErr([...authErr,\"incorrect email or password\"])\r\n    }\r\n\r\n    return <div className=\"SignInContainer\">\r\n        <SignInFormRedux onSubmit={handleSubmit} componentIsSignUp={props.componentIsSignUp} authErr={authErr}/>\r\n    </div>\r\n}","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {CustomizedButton} from \"../../CustomElements/CustomizedButton/CustomizedButton\"\nimport {CreateField, FormInput} from \"../../../assets/utils/ValidartorsComponents/ElementsValidators\"\nimport {required, Email, PassMinLength} from \"../../../assets/utils/validators\"\nimport DoneIcon from '@material-ui/icons/Done'\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\nimport {TSignUpFormData} from \"./SignUp\";\n\ntype TOwnProps={\n    componentIsSignIn :()=>void\n}\n\nconst SignUpForm: React.FC<InjectedFormProps<TSignUpFormData, TOwnProps> & TOwnProps> = (props) => {\n    return <form style={{paddingTop: \"1.5rem\",paddingRight:\"2rem\",paddingLeft:\"2rem\"}}  className=\"SignUpFormContainer\"\n                 onSubmit={props.handleSubmit}>\n\n        <div style={{fontSize: \"1.512rem\", fontWeight: 500}} className=\"SignUpFormHeader\">\n            Sign up\n        </div>\n\n        <div className=\"SignUpFormNameInput\">\n            {CreateField(\"Enter your name\", \"name\", [required],\n                FormInput, {label: \"name\", fullWidth: true})}\n        </div>\n\n        <div className=\"SignUpFormEmailInput\">\n            {CreateField(\"Enter your email\", \"email\", [required, Email],\n                FormInput, {label: \"email\", fullWidth: true})}\n        </div>\n\n        <div className=\"SignUpFormPassWordInput\">\n            {CreateField(\"Enter your password\", \"password\", [required, PassMinLength],\n                FormInput, {\n                    label: \"password\", fullWidth: true,\n                    type: \"password\", helperText: \"password must be more then 6 letters\"\n                })}\n        </div>\n\n        <div style={{paddingTop: \"1rem\"}} className=\"SignUpControlButtonsContainer\">\n            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                <Grid item>\n                    <CustomizedButton onClick={props.handleSubmit} text=\"complete\"\n                                      variant=\"contained\" bgColor=\"purple\"\n                                      fontSize=\"1.11rem\" startIcon={<DoneIcon/>}/>\n                </Grid>\n                <Grid item>\n                    <CustomizedButton onClick={props.componentIsSignIn} text=\"sign in\"\n                                      variant=\"contained\" bgColor=\"teal\"\n                                      fontSize=\"1.11rem\"/>\n                </Grid>\n            </Grid>\n        </div>\n\n        {props.error\n            ?\n            <div style={{paddingTop:\"2rem\",paddingLeft:\"1.12rem\", fontSize: \"1.125rem\", color: \"#ea1f09\"}}>\n                {props.error}\n            </div>\n            : null\n        }\n    </form>\n}\n\nexport const SignUpFormRedux = reduxForm<TSignUpFormData,TOwnProps>({form: 'SignUpForm'})(SignUpForm)\n","import React from \"react\"\r\nimport {SignUpFormRedux} from \"./SignUpForm\";\r\nimport {TShowSnackBar} from \"../../../App\";\r\n\r\ntype TSignUpProps={\r\n    componentIsSignIn:()=>void\r\n    showSnackBar : TShowSnackBar\r\n}\r\nexport type TSignUpFormData={\r\n    email:string,\r\n    password : string\r\n    name : string\r\n}\r\n\r\nexport const SignUp : React.FC<TSignUpProps> = (props) => {\r\n    const handleSubmit = (formData: TSignUpFormData) => {\r\n        props.showSnackBar({message: \"Account was create. Check your email!\",severity:\"success\",position:{\r\n                vertical:\"top\",horizontal:\"center\"\r\n            }})\r\n        console.log(formData)\r\n    }\r\n\r\n    return <div   className=\"SignUpContainer\">\r\n        <SignUpFormRedux onSubmit={handleSubmit} componentIsSignIn={props.componentIsSignIn} />\r\n    </div>\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {SignIn} from \"./SignIn/SignIn\";\r\nimport LS from \"./AuthModal.module.css\";\r\nimport {SignUp} from \"./SignUp/SignUp\";\r\nimport {TShowSnackBar} from \"../../App\";\r\n\r\ntype TAuthPageProps = {\r\n    showSnackBar: TShowSnackBar\r\n    onAuth: () => void\r\n    onUnAuth: () => void\r\n}\r\n\r\nexport const AuthPage: React.FC<TAuthPageProps> = (props) => {\r\n    const [componentToDraw, setComponentToDraw] = useState(\"login\")\r\n    const componentIsSignIn = () => setComponentToDraw(\"login\")\r\n    const componentIsSignUp = () => setComponentToDraw(\"registration\")\r\n    return <div className={LS.modal}>\r\n        {\r\n            componentToDraw === \"login\"\r\n                ? <SignIn componentIsSignUp={componentIsSignUp} onAuth={props.onAuth}/>\r\n                : <SignUp componentIsSignIn={componentIsSignIn} showSnackBar={props.showSnackBar}/>\r\n        }\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport type TSnackBarOptions = {\r\n    HideDuration? : number\r\n    severity : \"error\" | \"info\" | \"warning\" | \"success\"\r\n    position : {\r\n        vertical : \"bottom\" | \"top\"\r\n        horizontal : \"left\" | \"right\" | \"center\"\r\n    }\r\n    message : string\r\n}\r\nexport type TSnackBarProps = {\r\n    isShowing : boolean\r\n    onHide : (event?: React.SyntheticEvent, reason?: string) => void\r\n    options : TSnackBarOptions\r\n}\r\nconst  SnackBar : React.FC<TSnackBarProps>= (props)=> {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar  open={props.isShowing} autoHideDuration={props.options.HideDuration ? props.options.HideDuration : 3000}\r\n                      onClose={props.onHide} anchorOrigin={props.options.position}>\r\n\r\n                <Alert onClose={props.onHide} severity={props.options.severity}>\r\n                    {props.options.message}\r\n                </Alert>\r\n\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(SnackBar,(prevProps,nextProps)=>{\r\n    if(prevProps.isShowing !== nextProps.isShowing) return false\r\n    else  return true\r\n})","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position : \"fixed\",\r\n        top : \"50%\",\r\n        left : \"50%\",\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Progress() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n}","import React, {Suspense} from \"react\"\r\nimport Progress from \"../../Progress/Progress\";\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <Suspense fallback={<Progress/>}>\r\n            <WrappedComponent {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport PES from \"./pathErr.module.css\"\r\n\r\nexport const PathErr = ()=>{\r\n    return <h1 className={PES.wrapper}>\r\n        Error 404 page not found\r\n    </h1>\r\n}\r\n","import React from \"react\";\r\nimport CDS from \"./Calendar.module.css\"\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\nimport {TClickedDay, TSetClickedMonthDay} from \"../../Redux/CalendarReducer\";\r\nimport {randomInteger, SearchWorklogBlock, TWorklogBlock} from \"../../Redux/WorkLogsReducer\";\r\nimport {useBooleanState} from \"../hooks/useBooleanState\";\r\n\r\nexport type TCalendarDayProps = {\r\n    DayNumber: number\r\n    DayStatus: string\r\n    Signature: string\r\n    id: number\r\n    SetClickedMonthDay: TSetClickedMonthDay\r\n    MonthName: string\r\n    ClickedMonthDay: TClickedDay\r\n    CurrentDay: number | string\r\n    WorklogsBlocks: Array<TWorklogBlock>\r\n}\r\n\r\nexport const CalendarDay: React.FC<TCalendarDayProps> = (props) => {\r\n    const DayIsClickedData = useBooleanState(false)\r\n    const WrappedDay = {\r\n        id: props.id,\r\n        DayNumber: props.DayNumber,\r\n        MonthName: props.MonthName\r\n    }\r\n\r\n    const onDayClick = () => {\r\n        const WorklogsBlockToBeScroled = SearchWorklogBlock(WrappedDay.MonthName, WrappedDay.DayNumber)\r\n        DayIsClickedData.Switch()\r\n        if (DayIsClickedData.isDisplayed && props.ClickedMonthDay && props.ClickedMonthDay.DayNumber === props.DayNumber) {\r\n            props.SetClickedMonthDay(null)\r\n        } else props.SetClickedMonthDay(WrappedDay)\r\n\r\n        if (WorklogsBlockToBeScroled) WorklogsBlockToBeScroled.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"center\",\r\n            behavior: \"smooth\"\r\n        })\r\n    }\r\n\r\n    return <div className={props.ClickedMonthDay?.id === props.id\r\n        ? CDS.DayBgClicked\r\n        : props.DayNumber === props.CurrentDay\r\n            ? props.Signature === \"main\" ? CDS.DayBgCurrentDay : undefined\r\n            : CDS.DayBgDefault}>\r\n\r\n        <div onClick={onDayClick}\r\n             className={props.Signature !== \"main\"\r\n                 ? CDS.DropDownCalendarDayFaded : CDS.DropDownCalendarDay}>\r\n\r\n            <div className={props.ClickedMonthDay?.id === props.id\r\n            || props.DayNumber === props.CurrentDay\r\n                ? CDS.DropDownCalendarDayNumberClicked\r\n                : CDS.DropDownCalendarDayNumber}>\r\n\r\n                {props.DayNumber}\r\n\r\n            </div>\r\n            {props.WorklogsBlocks.some(WBL => WBL.BlockInfo.BlockCreatedDate.split(\",\")[1] === `${props.MonthName} ${props.DayNumber}`)\r\n                ? props.WorklogsBlocks.map(WBL => {\r\n                    if (WBL.BlockInfo.BlockCreatedDate.split(\",\")[1] === `${props.MonthName} ${props.DayNumber}`) {\r\n                        return <img key={randomInteger(0, 10000)}\r\n                                    style={{paddingLeft: \"3px\"}}\r\n                                    src={WBL.BlockInfo.SummaryStatus === \"ok\"\r\n                                        ? OK\r\n                                        : WBL.BlockInfo.SummaryStatus === \"warning\"\r\n                                            ? Warn\r\n                                            : WBL.BlockInfo.SummaryStatus === \"danger\"\r\n                                                ? Danger\r\n                                                : undefined\r\n                                    } alt=\"day status\"/>\r\n                    }\r\n                })\r\n                : <div className={CDS.EmptyStatus}>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\";\r\nimport Danger from \"../../assets/imgs/CalendarDayStatusDanger.svg\"\r\nimport Warn from \"../../assets/imgs/CalendarDayStatusWarning.svg\"\r\nimport OK from \"../../assets/imgs/CalendarDayStatusOK.svg\"\r\n\r\nexport type TDropDownCalendarFooterElementProps = {\r\n    status: \"ok\" | \"danger\" | \"warning\" | \"empty\"\r\n    text: string\r\n}\r\nexport const DropDownCalendarFooterElement: React.FC<TDropDownCalendarFooterElementProps> = (props) => {\r\n    return (<div className={CS.DropDownCalendarFooterElement}>\r\n            {\r\n                props.status !== \"empty\" ?\r\n                <img style={{marginTop: \"4px\"}} src={props.status === \"ok\"\r\n                    ? OK\r\n                    : props.status === \"warning\"\r\n                        ? Warn\r\n                        : props.status === \"danger\"\r\n                            ? Danger\r\n                            : undefined} alt={\"dropDOwnCAlendarFooterStatus\"}/>\r\n                            : <div style={{marginTop : \"4px\"}} className={CS.EmptyStatus}> </div>\r\n            }\r\n\r\n\r\n            <div  className={CS.DropDownProgressStatus}>\r\n                {props.text}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {GlobalState} from \"../../Redux/redux-store\";\r\n\r\nexport const getCalendar = (state : GlobalState) => state.CalendarData.Calendar\r\nexport const getCurrentDate = (state : GlobalState) => state.CalendarData.CurrentDate\r\nexport const getClickedMonthDay = (state : GlobalState) => state.CalendarData.ClickedMonthDay\r\n","import React from \"react\";\r\nimport {SetClickedMonthDay, TClickedDay,} from \"../../Redux/CalendarReducer\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport {CalendarDay} from \"./CalendarDay\";\r\nimport {randomInteger} from \"../../Redux/WorkLogsReducer\";\r\nimport {DropDownCalendarFooterElement} from \"./DropDownCalendarFooterElement\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCalendar, getClickedMonthDay, getCurrentDate} from \"../Selectors/CalendarSelectors\";\r\nimport {getWorklogsBlocks} from \"../Selectors/WorklogsSelectors\";\r\n\r\n\r\nexport const DropDownCalendar = () => {\r\n    const dispatch = useDispatch()\r\n    const calendar = useSelector(getCalendar)\r\n    const clickedMonthDay = useSelector(getClickedMonthDay)\r\n    const currentDate = useSelector(getCurrentDate)\r\n    const worklogsBlocks = useSelector(getWorklogsBlocks)\r\n    const setClickedMonthDay = (Day: TClickedDay) => dispatch(SetClickedMonthDay(Day))\r\n    const DaysNamesArr = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\r\n\r\n    return (<div className={CS.DropDownCalendar}>\r\n        <div className={CS.DropDownCalendarHeader}>\r\n            {currentDate.CurrentMonth}\r\n        </div>\r\n        <div className={CS.DropDOwnCalendarContentContainer}>\r\n            <div className={CS.DropDownCalendarContent}>\r\n\r\n                {DaysNamesArr.map(el => {\r\n                    return <div key={randomInteger(0, 10000)} className={CS.DropDownCalendarDayNames}>\r\n                        {el}\r\n                    </div>\r\n                })}\r\n\r\n                {\r\n                    calendar[currentDate.CurrentMonth].map(day => {\r\n                        return <CalendarDay ClickedMonthDay={clickedMonthDay}\r\n                                            CurrentDay={currentDate.CurrentDay}\r\n                                            MonthName={currentDate.CurrentMonth}\r\n                                            key={day.id}\r\n                                            SetClickedMonthDay={setClickedMonthDay}\r\n                                            {...day}\r\n                                            WorklogsBlocks={worklogsBlocks}\r\n                        />\r\n                    })}\r\n\r\n            </div>\r\n        </div>\r\n        <div className={CS.DropDownCalendarFooterContainer}>\r\n\r\n            <div className={CS.DropDownCalendarFooter}>\r\n                <DropDownCalendarFooterElement status={\"ok\"} text={\"Done\"}/>\r\n                <DropDownCalendarFooterElement status={\"warning\"} text={\"In progress\"}/>\r\n                <DropDownCalendarFooterElement status={\"danger\"} text={\"Missed\"}/>\r\n                <DropDownCalendarFooterElement status={\"empty\"} text={\"no activity\"}/>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n","import React from \"react\";\r\nimport CS from \"./Calendar.module.css\"\r\nimport CalendarIcon from \"../../assets/imgs/calendar.svg\"\r\nimport {DropDownCalendar} from \"./DropDownCalendar\"\r\nimport {TCurrentDate} from \"../../Redux/CalendarReducer\"\r\nimport {useBooleanState} from \"../hooks/useBooleanState\"\r\n\r\nexport type TCalendarProps = { currentDate: TCurrentDate }\r\n\r\nconst Calendar: React.FC<TCalendarProps> = (props) => {\r\n    const DropDownCalendarData = useBooleanState(false)\r\n\r\n    return (<div className=\"Calendar\">\r\n        <div onClick={DropDownCalendarData.Show} id=\"calendar-id\" className={CS.CalendarContainer}>\r\n\r\n            <div className={CS.CalendarContent}>\r\n\r\n                <div className={CS.CalendarDate}>\r\n                    {props.currentDate.CurrentDay} {props.currentDate.CurrentMonth} {props.currentDate.CurrentYear}\r\n                </div>\r\n\r\n                <div className={CS.CalendarIcon}>\r\n                    <img src={CalendarIcon} alt=\"calendar icon\"/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n            DropDownCalendarData.isDisplayed &&\r\n            <>\r\n                <div className={CS.bg} onClick={DropDownCalendarData.Hide}/>\r\n                <DropDownCalendar/>\r\n            </>\r\n        }\r\n\r\n    </div>)\r\n}\r\n\r\nexport default React.memo(Calendar, (prevProps, nextProps) => {\r\n    if (prevProps.currentDate !== nextProps.currentDate) return false\r\n    else return true\r\n})","import React from \"react\";\r\nimport AllS from \"./All.module.css\"\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type TAllProps = {\r\n    favoritesIsClicked: boolean\r\n    onAllClicked: () => void\r\n}\r\n\r\nexport const AllButton: React.FC<TAllProps> = (props) => {\r\n    return (\r\n        <div className={props.favoritesIsClicked\r\n            ? AllS.AllButtonBg\r\n            : AllS.AllButtonBgActive}>\r\n\r\n            <div  className={props.favoritesIsClicked\r\n                ? AllS.item\r\n                : AllS.ActiveItem}>\r\n                <NavLink onClick={props.onAllClicked}   to={\"/Home/All\"}> All </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport FS from \"./Favorites.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { pink } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nexport type TFavoritesProps = {\r\n    favoritesIsClicked: boolean\r\n    onFavoritesClick: () => void\r\n}\r\n\r\nexport const FavoritesButton: React.FC<TFavoritesProps> = (props) => {\r\n    return (\r\n        <div\r\n             className={props.favoritesIsClicked\r\n            ? FS.FavoritesButtonBgActive\r\n            : FS.FavoritesButtonBg} >\r\n\r\n            <div className={!props.favoritesIsClicked\r\n                ? FS.item\r\n                : FS.ActiveItem}>\r\n                <div className={FS.FavoritesTextContainer}>\r\n\r\n                    <div>\r\n                        <NavLink onClick={props.onFavoritesClick}  to={\"/Home/Favorites\"}> Favorites </NavLink>\r\n                    </div>\r\n\r\n                    <div style={{paddingLeft:\".5rem\"}}>\r\n                        <FavoriteIcon fontSize=\"small\" style={{color : pink[500]}} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport {AllButton} from \"./All/AllButton\";\r\nimport {FavoritesButton} from \"./Favorites/FavoritesButton\";\r\nimport CBS from \"./ControlButtons.module.css\"\r\n\r\ntype TControlButtonsProps = {\r\n    favoritesIsClicked: boolean\r\n    onAllClicked: () => void\r\n    onFavoritesClick: () => void\r\n}\r\nexport const ControlButtons: React.FC<TControlButtonsProps> = (props) => {\r\n    return <div className={CBS.container}>\r\n        <AllButton favoritesIsClicked={props.favoritesIsClicked} onAllClicked={props.onAllClicked}/>\r\n\r\n        <FavoritesButton onFavoritesClick={props.onFavoritesClick}\r\n                         favoritesIsClicked={props.favoritesIsClicked}/>\r\n    </div>\r\n}\r\n","import React from \"react\"\r\nimport AS from \"../../App.module.css\"\r\nimport Calendar from \"../Calendar/Calendar\"\r\nimport {ControlButtons} from \"./ControlButtons/ControlButtons\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {getCurrentDate} from \"../Selectors/CalendarSelectors\";\r\n\r\nexport type TCalendarAndControlButtonsProps = {\r\n    favoritesIsClicked: boolean\r\n    onFavoritesClick: () => void\r\n    onAllClicked: () => void\r\n}\r\n\r\nexport const CalendarAndControlButtons: React.FC<TCalendarAndControlButtonsProps> = (props) => {\r\n    const currentDate = useSelector(getCurrentDate)\r\n    return <div className={AS.CalendarAndButtons}>\r\n        <Calendar currentDate={currentDate}/>\r\n        <ControlButtons favoritesIsClicked={props.favoritesIsClicked} onAllClicked={props.onAllClicked}\r\n                        onFavoritesClick={props.onFavoritesClick}/>\r\n    </div>\r\n}","import React, {useState} from 'react'\nimport MaterialNav from \"./Components/NavBar/MaterialNavBar\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport AS from \"./App.module.css\"\nimport {WorkLogsBlock} from \"./Components/WorkLogs/WorkLogsBlock\"\nimport {TimeTracking} from \"./Components/TimeTracking/TimeTracking\"\nimport {TTimerData} from \"./Redux/WorkLogsReducer\"\nimport {useBooleanState} from \"./Components/hooks/useBooleanState\"\nimport {AuthPage} from \"./Components/Auth/AuthPage\"\nimport SnackBar, {TSnackBarOptions} from \"./Components/SnackBar/SnackBar\"\nimport {withSuspense} from \"./Components/HOCs/withSuspense/withSuspense\"\nimport {PathErr} from \"./Components/PathErrorPage/PathErr\"\nimport {CalendarAndControlButtons} from \"./Components/CalendarAndControllButtons/CalendarAndControlButtons\"\n\n//////////////////////////// lazy loading ////////////////////////////////////////\nconst Issues = React.lazy(() => import(\"./Components/Issues/Issues\"))\nconst Favorites = React.lazy(() => import(\"./Components/WorkLogs/FavoritesWorklogs\"))\nconst ChangeWorklogModalContainer = React.lazy(() => import(\"./Components/ChangeWorklogModal/ChangeWorklogModalContainer\"))\nconst ModalUserProfile = React.lazy(() => import(\"./Components/UserProfile/ModalUserProfile\"))\nconst SuspendedIssues = withSuspense(Issues)\nconst SuspendedFavorites = withSuspense(Favorites)\nconst SuspendedChangeWorklogModalContainer = withSuspense(ChangeWorklogModalContainer)\nconst SuspendedModalUserProfile = withSuspense(ModalUserProfile)\n//////////////////////////// lazy loading ////////////////////////////////////////\n\n\nexport type TShowSnackBar = (SnackBarOptions: TSnackBarOptions) => void\n\nexport const App = () => {\n\n    const [, setIsAuth] = useState<boolean | null>(null)\n    const worklogModalStatus = useBooleanState(false)\n    const favoritesClickedStatus = useBooleanState(false)\n    const userProfileClickedStatus = useBooleanState(false)\n    const snackBarDisplayingStatus = useBooleanState(false)\n    const [timerData, setTimerData] = useState<TTimerData | undefined>(undefined)\n    const [snackBarOptions, setSnackBarOptions] = useState<TSnackBarOptions>({\n        message: \"something goes wrong\",\n        HideDuration: 3000,\n        position: {horizontal: \"center\", vertical: \"bottom\"},\n        severity: \"error\"\n    })\n\n    const onSetTimerData = (timerData: TTimerData | undefined) => setTimerData(timerData)\n    const onAuth = () => setIsAuth(true)\n    const onUnAuth = () => setIsAuth(false)\n\n    const showSnackBar = (SnackBarOptions: TSnackBarOptions) => {\n        snackBarDisplayingStatus.isDisplayed && snackBarDisplayingStatus.Hide()\n        setSnackBarOptions(SnackBarOptions)\n        snackBarDisplayingStatus.Show()\n    }\n    const hideSnackBar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        snackBarDisplayingStatus.Hide()\n    }\n\n\n    return (<div className=\"AppWrapper\">\n\n            {localStorage.getItem(\"IsAuth\") === \"true\"\n                ? <>\n                    <MaterialNav openUserProfile={userProfileClickedStatus.Show} onUnAuth={onUnAuth}/>\n\n                    <Switch>\n                        <Route exact path='/' render={() => <Redirect to={\"/Home/All\"}/>}/>\n                        <Route exact path='/Issues'\n                               render={() => <SuspendedIssues/>}/>\n\n                        <Route path='/Home'\n                               render={() => <>\n                                   <div className={AS.CalendarAndButtonsContainer}>\n                                       <CalendarAndControlButtons\n                                           favoritesIsClicked={favoritesClickedStatus.isDisplayed}\n                                           onAllClicked={favoritesClickedStatus.Hide}\n                                           onFavoritesClick={favoritesClickedStatus.Show}\n                                       />\n                                   </div>\n\n                                   <div className={AS.MainWrapper}>\n                                       <Switch>\n                                           <Route exact path='/Home/All'\n                                                  render={() => <WorkLogsBlock timerData={timerData}\n                                                                               openWorklogChangeModal={worklogModalStatus.Show}\n                                                                               componentToDraw=\"Worklogs\"\n                                                                               showSnackBar={showSnackBar}\n                                                                               closeWorklogChangeModal={worklogModalStatus.Hide}\n                                                                               setTimerData={onSetTimerData}\n                                                  />\n                                                  }/>\n\n                                           <Route exact path='/Home/Favorites'\n                                                  render={() => <SuspendedFavorites\n                                                      openWorklogChangeModal={worklogModalStatus.Show}\n                                                      timerData={timerData}\n                                                      setTimerData={onSetTimerData}\n                                                      showSnackBar={showSnackBar}\n                                                      closeWorklogChangeModal={worklogModalStatus.Hide}\n                                                      componentToDraw=\"FavoritesWorklogs\"\n                                                  />}/>\n                                           <Route component={PathErr}/>\n                                       </Switch>\n\n                                       <div className={AS.TImeTracking_and_Calendar}>\n                                           <TimeTracking favoritesIsClicked={worklogModalStatus.isDisplayed}\n                                                         setTimerData={onSetTimerData}\n                                                         openWorklogChangeModal={worklogModalStatus.Show}\n                                           />\n                                       </div>\n\n                                   </div>\n                               </>\n                               }\n                        />\n                        <Route component={PathErr}/>\n                    </Switch>\n                </>\n                : <AuthPage onAuth={onAuth} onUnAuth={onUnAuth} showSnackBar={showSnackBar}/>\n            }\n\n            <SuspendedChangeWorklogModalContainer\n                setTimerData={onSetTimerData}\n                worklogChangeModalIsOpen={worklogModalStatus.isDisplayed}\n                closeWorklogChangeModal={worklogModalStatus.Hide}\n                timerData={timerData}\n            />\n\n            <SuspendedModalUserProfile isOpen={userProfileClickedStatus.isDisplayed}\n                                       hide={userProfileClickedStatus.Hide}/>\n\n            <SnackBar isShowing={snackBarDisplayingStatus.isDisplayed}\n                      onHide={hideSnackBar} options={snackBarOptions}/>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AS from \"./App.module.css\"\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\nimport {App} from \"./App\";\n\nReactDOM.render(\n    <HashRouter  basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <div className={AS.AppContainer}>\n                    <App/>\n            </div>\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n\n","import {GlobalState} from \"../../Redux/redux-store\";\r\n\r\nexport const getPlayingWorklog = (state : GlobalState) => state.WorklogsData.PlayingWorklog\r\nexport const getWorklogsBlocks = (state : GlobalState) => state.WorklogsData.WorkLogsBlocks\r\nexport const getFavoritesWorklog = (state : GlobalState) => state.WorklogsData.FavoritesWorklogs\r\nexport const getWorklogToChange = (state : GlobalState) => state.WorklogsData.WorklogToChange\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainWrapper\":\"App_MainWrapper__3UVmf\",\"CalendarAndButtonsContainer\":\"App_CalendarAndButtonsContainer__1qylj\",\"CalendarAndButtons\":\"App_CalendarAndButtons__gi3vH\",\"TImeTracking_and_Calendar\":\"App_TImeTracking_and_Calendar__2wagN\",\"AppContainer\":\"App_AppContainer__3te8n\",\"PathErr\":\"App_PathErr__3EGlw\"};","\r\n\r\nexport const ToFullTime = (value,hours) =>{\r\n    if(typeof value === \"string\"){\r\n        let Numbered =  Number.parseInt(value)\r\n        if(Numbered < 10){\r\n            return \"0\" + Numbered\r\n        }\r\n        else return value\r\n    }\r\n    else if (typeof value === \"number\"){\r\n        if(value < 10){\r\n            return \"0\" + value\r\n        }\r\n        else return value\r\n    }\r\n}\r\n\r\nexport const CalculateNewStartTime = (CurrentTime,hours,minutes)=>{\r\n    if(CurrentTime && hours && minutes){\r\n        let [CurrentHours,CurrentMinutes] = [...CurrentTime.split(\":\")]\r\n        CurrentHours = Number.parseInt(CurrentHours)\r\n        CurrentMinutes = Number.parseInt(CurrentMinutes)\r\n\r\n         if(CurrentHours <= 0 ) {\r\n             CurrentHours = CurrentHours + 24\r\n        }\r\n        if(CurrentMinutes < minutes) {\r\n            CurrentMinutes = CurrentMinutes + 60\r\n            CurrentHours = CurrentHours -1\r\n         }\r\n\r\n         return  `${ToFullTime(CurrentHours - hours) === 24? \"00\" : ToFullTime(CurrentHours - hours)}:${ToFullTime(CurrentMinutes - minutes)}`\r\n    }\r\n}\r\n\r\n\r\nexport const CalculateTime = (CurrentTime, hours, minutes)=>{\r\n    if(CurrentTime && hours && minutes){\r\n        let HoursAndMinutes = CurrentTime.split(\":\")\r\n        let Res = ToFullTime(Number.parseInt(hours) + Number.parseInt(HoursAndMinutes[0]) )\r\n            +\r\n            \":\"\r\n            + ToFullTime(Number.parseInt(minutes) + Number.parseInt(HoursAndMinutes[1]))\r\n\r\n        return Res\r\n    }\r\n }","const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\r\nconst months = ['January', 'February', 'March', 'April', 'May',\r\n    'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nexport const GetCurrentDate = () => {\r\n    let date = new Date()\r\n    let CurrentYear = date.getFullYear()\r\n    let CurrentMonth = months[date.getMonth()]\r\n    let CurrentDay = date.getDate()\r\n    let DayName = days[ date.getDay() ];\r\n\r\n    return {\r\n        DayName,\r\n        CurrentYear,\r\n        CurrentMonth,\r\n        CurrentDay\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoritesButtonBg\":\"Favorites_FavoritesButtonBg__2pbYJ\",\"WorklogsContainer\":\"Favorites_WorklogsContainer__1Sjke\",\"FavoritesButtonBgActive\":\"Favorites_FavoritesButtonBgActive__2sAaf\",\"item\":\"Favorites_item__38JvL\",\"ActiveItem\":\"Favorites_ActiveItem__bO5hh\",\"FavoritesText\":\"Favorites_FavoritesText__2rccG\",\"NoFavoritesIssuesContainer\":\"Favorites_NoFavoritesIssuesContainer__1ddrY\",\"FavoritesTextContainer\":\"Favorites_FavoritesTextContainer__304kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"WorklogDropDown_Container__3cI-Y\",\"ContentContainer\":\"WorklogDropDown_ContentContainer__o5kDH\",\"ContainerEl\":\"WorklogDropDown_ContainerEl__2dtp_\",\"ContainerFirstEl\":\"WorklogDropDown_ContainerFirstEl__1skhJ\"};"],"sourceRoot":""}